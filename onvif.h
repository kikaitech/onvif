// Reminder: Modify typemap.dat to customize the header file generated by wsdl2h
/* onvif.h
   Generated by wsdl2h 2.8.109 from http://www.onvif.org/ver20/ptz/wsdl/ptz.wsdl and typemap.dat
   2020-12-21 09:41:57 GMT

   DO NOT INCLUDE THIS ANNOTATED FILE DIRECTLY IN YOUR PROJECT SOURCE CODE.
   USE THE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT'S SOURCE CODE.

gSOAP XML Web services tools
Copyright (C) 2000-2020, Robert van Engelen, Genivia Inc. All Rights Reserved.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

/**

@page page_notes Notes

@note HINTS:
 - Run soapcpp2 on onvif.h to generate the SOAP/XML processing logic:
   Use soapcpp2 -I to specify paths for #import
   Use soapcpp2 -j to generate improved proxy and server classes.
   Use soapcpp2 -r to generate a report.
 - Edit 'typemap.dat' to control namespace bindings and type mappings:
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Run Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h -c to generate pure C code.
 - Use wsdl2h -R to include the REST operations defined by the WSDLs.
 - Use wsdl2h -O3 or -O4 to optimize by removing unused schema components.
 - Use wsdl2h -d to enable DOM support for xsd:any and xsd:anyType.
 - Use wsdl2h -F to simulate struct-type derivation in C (also works in C++).
 - Use wsdl2h -f to generate flat C++ class hierarchy, removes type derivation.
 - Use wsdl2h -g to generate top-level root elements with readers and writers.
 - Use wsdl2h -U to map XML names to C++ Unicode identifiers instead of _xNNNN.
 - Use wsdl2h -u to disable the generation of unions.
 - Use wsdl2h -L to remove this @note and all other @note comments.
 - Use wsdl2h -nname to use name as the base namespace prefix instead of 'ns'.
 - Use wsdl2h -Nname for service prefix and produce multiple service bindings
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

@warning
   DO NOT INCLUDE THIS ANNOTATED FILE DIRECTLY IN YOUR PROJECT SOURCE CODE.
   USE THE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT'S SOURCE CODE:
   THE GENERATED soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

@copyright LICENSE:
@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2020, Robert van Engelen, Genivia Inc. All Rights Reserved.
The wsdl2h tool and its generated software are released under the GPL.
This software is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org

This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt c++,w

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *   http://www.onvif.org/ver20/ptz/wsdl                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * $CONTAINER typemap variable:                                               *
 *   std::vector                                                              *
 *                                                                            *
\******************************************************************************/

#include <vector>
template <class T> class std::vector;

/******************************************************************************\
 *                                                                            *
 * $SIZE typemap variable:                                                    *
 *   int                                                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/

#import "xop.h"	// xop = <http://www.w3.org/2004/08/xop/include>
#import "wsa5.h"	// wsa5 = <http://www.w3.org/2005/08/addressing>

/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to 'typemap.dat' then rerun wsdl2h (use wsdl2h -t typemap.dat):

tptz = "http://www.onvif.org/ver20/ptz/wsdl"
tt = "http://www.onvif.org/ver10/schema"
wsnt = "http://docs.oasis-open.org/wsn/b-2"
wsrfbf = "http://docs.oasis-open.org/wsrf/bf-2"
wstop = "http://docs.oasis-open.org/wsn/t-1"

*/

#define SOAP_NAMESPACE_OF_tptz	"http://www.onvif.org/ver20/ptz/wsdl"
//gsoap tptz  schema namespace:	http://www.onvif.org/ver20/ptz/wsdl
//gsoap tptz  schema elementForm:	qualified
//gsoap tptz  schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_tt	"http://www.onvif.org/ver10/schema"
//gsoap tt    schema namespace:	http://www.onvif.org/ver10/schema
//gsoap tt    schema elementForm:	qualified
//gsoap tt    schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_wsnt	"http://docs.oasis-open.org/wsn/b-2"
//gsoap wsnt  schema namespace:	http://docs.oasis-open.org/wsn/b-2
//gsoap wsnt  schema elementForm:	qualified
//gsoap wsnt  schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_wsrfbf	"http://docs.oasis-open.org/wsrf/bf-2"
//gsoap wsrfbf schema namespace:	http://docs.oasis-open.org/wsrf/bf-2
//gsoap wsrfbf schema elementForm:	qualified
//gsoap wsrfbf schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_wstop	"http://docs.oasis-open.org/wsn/t-1"
//gsoap wstop schema namespace:	http://docs.oasis-open.org/wsn/t-1
//gsoap wstop schema elementForm:	qualified
//gsoap wstop schema attributeForm:	unqualified

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/

/// Built-in XSD root type "xs:anyType".
///
/// @note Call virtual method soap_type() generated by soapcpp2 to check runtime type is SOAP_TYPE_xsd__anyType or a derived type.  Use option -P to remove this class.
class xsd__anyType
{ public:
    _XML __item;
    struct soap *soap;
};

/// Built-in type "SOAP-ENV:Envelope".
struct SOAP_ENV__Envelope { struct SOAP_ENV__Header *SOAP_ENV__Header; _XML SOAP_ENV__Body; };

/// Built-in type "xs:QName".
typedef std::string xsd__QName;

/// Built-in type "xs:base64Binary".
class xsd__base64Binary
{ public:
    unsigned char *__ptr;
    int __size;
    char *id, *type, *options; // NOTE: non-NULL for DIME/MIME/MTOM XOP attachments only
};

/// Built-in type "xs:hexBinary".
class xsd__hexBinary
{ public:
    unsigned char *__ptr;
    int __size;
};

// Imported type ""http://www.w3.org/2005/08/addressing":EndpointReferenceType" defined by wsa5__EndpointReferenceType.

/// Primitive built-in type "xs:NCName".
typedef std::string xsd__NCName;

/// Primitive built-in type "xs:anySimpleType".
typedef std::string xsd__anySimpleType;

/// Primitive built-in type "xs:anyURI".
typedef std::string xsd__anyURI;

/// Primitive built-in type "xs:duration".
typedef std::string xsd__duration;

/// Primitive built-in type "xs:integer".
typedef std::string xsd__integer;

/// Primitive built-in type "xs:nonNegativeInteger".
typedef std::string xsd__nonNegativeInteger;

/// Primitive built-in type "xs:token".
typedef std::string xsd__token;

// Imported element ""http://www.w3.org/2004/08/xop/include":Include" declared as _xop__Include.

/// Built-in attribute "xml:lang".
typedef std::string _xml__lang;


/******************************************************************************\
 *                                                                            *
 * Forward Declarations                                                       *
 *                                                                            *
\******************************************************************************/


class tptz__Capabilities;

class _tptz__GetServiceCapabilities;

class _tptz__GetServiceCapabilitiesResponse;

class _tptz__GetNodes;

class _tptz__GetNodesResponse;

class _tptz__GetNode;

class _tptz__GetNodeResponse;

class _tptz__GetConfigurations;

class _tptz__GetConfigurationsResponse;

class _tptz__GetConfiguration;

class _tptz__GetConfigurationResponse;

class _tptz__SetConfiguration;

class _tptz__SetConfigurationResponse;

class _tptz__GetConfigurationOptions;

class _tptz__GetConfigurationOptionsResponse;

class _tptz__SendAuxiliaryCommand;

class _tptz__SendAuxiliaryCommandResponse;

class _tptz__GetPresets;

class _tptz__GetPresetsResponse;

class _tptz__SetPreset;

class _tptz__SetPresetResponse;

class _tptz__RemovePreset;

class _tptz__RemovePresetResponse;

class _tptz__GotoPreset;

class _tptz__GotoPresetResponse;

class _tptz__GetStatus;

class _tptz__GetStatusResponse;

class _tptz__GotoHomePosition;

class _tptz__GotoHomePositionResponse;

class _tptz__SetHomePosition;

class _tptz__SetHomePositionResponse;

class _tptz__ContinuousMove;

class _tptz__ContinuousMoveResponse;

class _tptz__RelativeMove;

class _tptz__RelativeMoveResponse;

class _tptz__AbsoluteMove;

class _tptz__AbsoluteMoveResponse;

class _tptz__GeoMove;

class _tptz__GeoMoveResponse;

class _tptz__Stop;

class _tptz__StopResponse;

class _tptz__GetPresetTours;

class _tptz__GetPresetToursResponse;

class _tptz__GetPresetTour;

class _tptz__GetPresetTourResponse;

class _tptz__GetPresetTourOptions;

class _tptz__GetPresetTourOptionsResponse;

class _tptz__CreatePresetTour;

class _tptz__CreatePresetTourResponse;

class _tptz__ModifyPresetTour;

class _tptz__ModifyPresetTourResponse;

class _tptz__OperatePresetTour;

class _tptz__OperatePresetTourResponse;

class _tptz__RemovePresetTour;

class _tptz__RemovePresetTourResponse;

class _tptz__GetCompatibleConfigurations;

class _tptz__GetCompatibleConfigurationsResponse;

class _tptz__MoveAndStartTracking;

class _tptz__MoveAndStartTrackingResponse;

class tt__DeviceEntity;

class tt__FloatRange;

class tt__DurationRange;

class tt__ConfigurationEntity;

class tt__PTZNode;

class tt__PTZNodeExtension;

class tt__PTZNodeExtension2;

class tt__PTZPresetTourSupported;

class tt__PTZPresetTourSupportedExtension;

class tt__PTZConfiguration;

class tt__PTZConfigurationExtension;

class tt__PTZConfigurationExtension2;

class tt__PTControlDirection;

class tt__PTControlDirectionExtension;

class tt__EFlip;

class tt__Reverse;

class tt__PTZConfigurationOptions;

class tt__PTZConfigurationOptions2;

class tt__PTControlDirectionOptions;

class tt__PTControlDirectionOptionsExtension;

class tt__EFlipOptions;

class tt__EFlipOptionsExtension;

class tt__ReverseOptions;

class tt__ReverseOptionsExtension;

class tt__PanTiltLimits;

class tt__ZoomLimits;

class tt__PTZSpaces;

class tt__PTZSpacesExtension;

class tt__Space2DDescription;

class tt__Space1DDescription;

class tt__PTZSpeed;

class tt__PTZPreset;

class tt__PresetTour;

class tt__PTZPresetTourExtension;

class tt__PTZPresetTourSpot;

class tt__PTZPresetTourSpotExtension;

class tt__PTZPresetTourPresetDetail;

class tt__PTZPresetTourTypeExtension;

class tt__PTZPresetTourStatus;

class tt__PTZPresetTourStatusExtension;

class tt__PTZPresetTourStartingCondition;

class tt__PTZPresetTourStartingConditionExtension;

class tt__PTZPresetTourOptions;

class tt__PTZPresetTourSpotOptions;

class tt__PTZPresetTourPresetDetailOptions;

class tt__PTZPresetTourPresetDetailOptionsExtension;

class tt__PTZPresetTourStartingConditionOptions;

class tt__PTZPresetTourStartingConditionOptionsExtension;

class tt__IntRange;

class tt__Vector2D;

class tt__Vector1D;

class tt__PTZVector;

class tt__PTZStatus;

class tt__PTZMoveStatus;

class tt__GeoLocation;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver20/ptz/wsdl                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/schema":IntAttrList is a simpleType containing a whitespace separated list of values of type xs:int.
///
typedef std::string tt__IntAttrList;

// Optimization: simpleType "http://www.onvif.org/ver10/schema":FloatAttrList is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":StringAttrList is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":StringList is a simpleType containing a whitespace separated list of values of type xs:string.
///
typedef std::string tt__StringList;

// Optimization: simpleType "http://www.onvif.org/ver10/schema":ReferenceTokenList is not used and was removed


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/

// Optimization: simpleType "http://docs.oasis-open.org/wsn/b-2":AbsoluteOrRelativeTimeType is not used and was removed


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/schema":Name is a simpleType restriction of type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Length of this content is 0 to 64.
typedef std::string tt__Name : 64;

// Optimization: simpleType "http://www.onvif.org/ver10/schema":RotateMode is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":SceneOrientationMode is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":SceneOrientationOption is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":ViewModes is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":VideoEncoding is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":Mpeg4Profile is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":H264Profile is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":VideoEncodingMimeNames is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":VideoEncodingProfiles is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":AudioEncoding is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":AudioEncodingMimeNames is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":MetadataCompressionType is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":StreamType is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":TransportProtocol is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":ScopeDefinition is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":DiscoveryMode is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":NetworkInterfaceConfigPriority is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":Duplex is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":IANA-IfTypes is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":IPv6DHCPConfiguration is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":NetworkProtocolType is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":NetworkHostType is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":IPv4Address is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":IPv6Address is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":HwAddress is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":IPType is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":DNSName is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":Domain is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":IPAddressFilterType is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":DynamicDNSType is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":Dot11SSIDType is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":Dot11StationMode is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":Dot11SecurityMode is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":Dot11Cipher is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":Dot11PSK is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":Dot11PSKPassphrase is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":Dot11SignalStrength is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":Dot11AuthAndMangementSuite is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":CapabilityCategory is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":SystemLogType is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":FactoryDefaultType is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":SetDateTimeType is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":UserLevel is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":RelayLogicalState is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":RelayIdleState is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":RelayMode is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":DigitalIdleState is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":EFlipMode is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__EFlipMode__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__EFlipMode
{
	tt__EFlipMode__OFF,	///< xs:string value="OFF"
	tt__EFlipMode__ON,	///< xs:string value="ON"
	tt__EFlipMode__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":ReverseMode is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__ReverseMode__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__ReverseMode
{
	tt__ReverseMode__OFF,	///< xs:string value="OFF"
	tt__ReverseMode__ON,	///< xs:string value="ON"
	tt__ReverseMode__AUTO,	///< xs:string value="AUTO"
	tt__ReverseMode__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":AuxiliaryData is a simpleType restriction of type xs:string.
///
/// Length of this content is 0 to 128.
typedef std::string tt__AuxiliaryData : 128;

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourState is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__PTZPresetTourState__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__PTZPresetTourState
{
	tt__PTZPresetTourState__Idle,	///< xs:string value="Idle"
	tt__PTZPresetTourState__Touring,	///< xs:string value="Touring"
	tt__PTZPresetTourState__Paused,	///< xs:string value="Paused"
	tt__PTZPresetTourState__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourDirection is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__PTZPresetTourDirection__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__PTZPresetTourDirection
{
	tt__PTZPresetTourDirection__Forward,	///< xs:string value="Forward"
	tt__PTZPresetTourDirection__Backward,	///< xs:string value="Backward"
	tt__PTZPresetTourDirection__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourOperation is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__PTZPresetTourOperation__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__PTZPresetTourOperation
{
	tt__PTZPresetTourOperation__Start,	///< xs:string value="Start"
	tt__PTZPresetTourOperation__Stop,	///< xs:string value="Stop"
	tt__PTZPresetTourOperation__Pause,	///< xs:string value="Pause"
	tt__PTZPresetTourOperation__Extended,	///< xs:string value="Extended"
};

// Optimization: simpleType "http://www.onvif.org/ver10/schema":MoveAndTrackMethod is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":AutoFocusMode is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":AFModes is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":WideDynamicMode is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":BacklightCompensationMode is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":ExposurePriority is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":ExposureMode is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":Enabled is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":WhiteBalanceMode is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":IrCutFilterMode is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":ImageStabilizationMode is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":IrCutFilterAutoBoundaryType is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":ToneCompensationMode is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":DefoggingMode is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":ImageSendingType is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":PropertyOperation is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":Direction is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":ReceiverMode is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":ReceiverState is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":Description is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":XPathExpression is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":SearchState is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":RecordingStatus is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":TrackType is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":RecordingJobMode is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":RecordingJobState is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":ModeOfOperation is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":AudioClassType is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":OSDType is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":ReferenceToken is a simpleType restriction of type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Unique identifier for a physical or logical resource.
///   Tokens should be assigned such that they are unique within a device. Tokens must be at least unique within its class.
///   Length up to 64 characters. Token may be extended by intermediate terminal with adding prefix to make it global unique.
///   The length should be within 36 characters for generating at local device. See "Remote Token" section in Resource Query specification.
/// </BLOCKQUOTE></PRE>
///
/// Length of this content is 0 to 64.
typedef std::string tt__ReferenceToken : 64;

/// @brief "http://www.onvif.org/ver10/schema":MoveStatus is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__MoveStatus__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__MoveStatus
{
	tt__MoveStatus__IDLE,	///< xs:string value="IDLE"
	tt__MoveStatus__MOVING,	///< xs:string value="MOVING"
	tt__MoveStatus__UNKNOWN,	///< xs:string value="UNKNOWN"
};

// Optimization: simpleType "http://www.onvif.org/ver10/schema":Entity is not used and was removed


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/

// Optimization: simpleType "http://docs.oasis-open.org/wsn/t-1":FullTopicExpression is not used and was removed

// Optimization: simpleType "http://docs.oasis-open.org/wsn/t-1":ConcreteTopicExpression is not used and was removed

// Optimization: simpleType "http://docs.oasis-open.org/wsn/t-1":SimpleTopicExpression is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":ReceiverReference is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":RecordingReference is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":TrackReference is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":JobToken is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":RecordingJobReference is not used and was removed


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver20/ptz/wsdl                                      *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver20/ptz/wsdl":Capabilities is a complexType.
///
/// @note class tptz__Capabilities operations:
/// - tptz__Capabilities* soap_new_tptz__Capabilities(soap*) allocate and default initialize
/// - tptz__Capabilities* soap_new_tptz__Capabilities(soap*, int num) allocate and default initialize an array
/// - tptz__Capabilities* soap_new_req_tptz__Capabilities(soap*, ...) allocate, set required members
/// - tptz__Capabilities* soap_new_set_tptz__Capabilities(soap*, ...) allocate, set all public members
/// - tptz__Capabilities::soap_default(soap*) default initialize members
/// - int soap_read_tptz__Capabilities(soap*, tptz__Capabilities*) deserialize from a stream
/// - int soap_write_tptz__Capabilities(soap*, tptz__Capabilities*) serialize to a stream
/// - tptz__Capabilities* tptz__Capabilities::soap_dup(soap*) returns deep copy of tptz__Capabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tptz__Capabilities::soap_del() deep deletes tptz__Capabilities data members, use only after tptz__Capabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tptz__Capabilities::soap_type() returns SOAP_TYPE_tptz__Capabilities or derived type identifier
class tptz__Capabilities
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not EFlip is supported.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "EFlip" of type xs:boolean.
  @ bool*                                EFlip                          0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not reversing of PT control direction is supported.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Reverse" of type xs:boolean.
  @ bool*                                Reverse                        0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for the GetCompatibleConfigurations command.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "GetCompatibleConfigurations" of type xs:boolean.
  @ bool*                                GetCompatibleConfigurations    0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates that the PTZStatus includes MoveStatus information.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MoveStatus" of type xs:boolean.
  @ bool*                                MoveStatus                     0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates that the PTZStatus includes Position information.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "StatusPosition" of type xs:boolean.
  @ bool*                                StatusPosition                 0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indication of the methods of MoveAndTrack that are supported, acceptable values are defined in tt:MoveAndTrackMethod.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MoveAndTrack" of type "http://www.onvif.org/ver10/schema":StringList.
  @ tt__StringList*                      MoveAndTrack                   0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetServiceCapabilities
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetServiceCapabilities is a complexType.
///
/// @note class _tptz__GetServiceCapabilities operations:
/// - _tptz__GetServiceCapabilities* soap_new__tptz__GetServiceCapabilities(soap*) allocate and default initialize
/// - _tptz__GetServiceCapabilities* soap_new__tptz__GetServiceCapabilities(soap*, int num) allocate and default initialize an array
/// - _tptz__GetServiceCapabilities* soap_new_req__tptz__GetServiceCapabilities(soap*, ...) allocate, set required members
/// - _tptz__GetServiceCapabilities* soap_new_set__tptz__GetServiceCapabilities(soap*, ...) allocate, set all public members
/// - _tptz__GetServiceCapabilities::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetServiceCapabilities(soap*, _tptz__GetServiceCapabilities*) deserialize from a stream
/// - int soap_write__tptz__GetServiceCapabilities(soap*, _tptz__GetServiceCapabilities*) serialize to a stream
/// - _tptz__GetServiceCapabilities* _tptz__GetServiceCapabilities::soap_dup(soap*) returns deep copy of _tptz__GetServiceCapabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetServiceCapabilities::soap_del() deep deletes _tptz__GetServiceCapabilities data members, use only after _tptz__GetServiceCapabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetServiceCapabilities::soap_type() returns SOAP_TYPE__tptz__GetServiceCapabilities or derived type identifier
class _tptz__GetServiceCapabilities
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetServiceCapabilitiesResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetServiceCapabilitiesResponse is a complexType.
///
/// @note class _tptz__GetServiceCapabilitiesResponse operations:
/// - _tptz__GetServiceCapabilitiesResponse* soap_new__tptz__GetServiceCapabilitiesResponse(soap*) allocate and default initialize
/// - _tptz__GetServiceCapabilitiesResponse* soap_new__tptz__GetServiceCapabilitiesResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__GetServiceCapabilitiesResponse* soap_new_req__tptz__GetServiceCapabilitiesResponse(soap*, ...) allocate, set required members
/// - _tptz__GetServiceCapabilitiesResponse* soap_new_set__tptz__GetServiceCapabilitiesResponse(soap*, ...) allocate, set all public members
/// - _tptz__GetServiceCapabilitiesResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetServiceCapabilitiesResponse(soap*, _tptz__GetServiceCapabilitiesResponse*) deserialize from a stream
/// - int soap_write__tptz__GetServiceCapabilitiesResponse(soap*, _tptz__GetServiceCapabilitiesResponse*) serialize to a stream
/// - _tptz__GetServiceCapabilitiesResponse* _tptz__GetServiceCapabilitiesResponse::soap_dup(soap*) returns deep copy of _tptz__GetServiceCapabilitiesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetServiceCapabilitiesResponse::soap_del() deep deletes _tptz__GetServiceCapabilitiesResponse data members, use only after _tptz__GetServiceCapabilitiesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetServiceCapabilitiesResponse::soap_type() returns SOAP_TYPE__tptz__GetServiceCapabilitiesResponse or derived type identifier
class _tptz__GetServiceCapabilitiesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The capabilities for the PTZ service is returned in the Capabilities element.
/// </BLOCKQUOTE></PRE>
///
/// Element "Capabilities" of type "http://www.onvif.org/ver20/ptz/wsdl":Capabilities.
    tptz__Capabilities*                  Capabilities                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetNodes
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetNodes is a complexType.
///
/// @note class _tptz__GetNodes operations:
/// - _tptz__GetNodes* soap_new__tptz__GetNodes(soap*) allocate and default initialize
/// - _tptz__GetNodes* soap_new__tptz__GetNodes(soap*, int num) allocate and default initialize an array
/// - _tptz__GetNodes* soap_new_req__tptz__GetNodes(soap*, ...) allocate, set required members
/// - _tptz__GetNodes* soap_new_set__tptz__GetNodes(soap*, ...) allocate, set all public members
/// - _tptz__GetNodes::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetNodes(soap*, _tptz__GetNodes*) deserialize from a stream
/// - int soap_write__tptz__GetNodes(soap*, _tptz__GetNodes*) serialize to a stream
/// - _tptz__GetNodes* _tptz__GetNodes::soap_dup(soap*) returns deep copy of _tptz__GetNodes, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetNodes::soap_del() deep deletes _tptz__GetNodes data members, use only after _tptz__GetNodes::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetNodes::soap_type() returns SOAP_TYPE__tptz__GetNodes or derived type identifier
class _tptz__GetNodes
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetNodesResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetNodesResponse is a complexType.
///
/// @note class _tptz__GetNodesResponse operations:
/// - _tptz__GetNodesResponse* soap_new__tptz__GetNodesResponse(soap*) allocate and default initialize
/// - _tptz__GetNodesResponse* soap_new__tptz__GetNodesResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__GetNodesResponse* soap_new_req__tptz__GetNodesResponse(soap*, ...) allocate, set required members
/// - _tptz__GetNodesResponse* soap_new_set__tptz__GetNodesResponse(soap*, ...) allocate, set all public members
/// - _tptz__GetNodesResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetNodesResponse(soap*, _tptz__GetNodesResponse*) deserialize from a stream
/// - int soap_write__tptz__GetNodesResponse(soap*, _tptz__GetNodesResponse*) serialize to a stream
/// - _tptz__GetNodesResponse* _tptz__GetNodesResponse::soap_dup(soap*) returns deep copy of _tptz__GetNodesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetNodesResponse::soap_del() deep deletes _tptz__GetNodesResponse data members, use only after _tptz__GetNodesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetNodesResponse::soap_type() returns SOAP_TYPE__tptz__GetNodesResponse or derived type identifier
class _tptz__GetNodesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   A list of the existing PTZ Nodes on the device.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__PTZNode* of length 0..unbounded.
    std::vector<tt__PTZNode*           > PTZNode                        0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetNode
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetNode is a complexType.
///
/// @note class _tptz__GetNode operations:
/// - _tptz__GetNode* soap_new__tptz__GetNode(soap*) allocate and default initialize
/// - _tptz__GetNode* soap_new__tptz__GetNode(soap*, int num) allocate and default initialize an array
/// - _tptz__GetNode* soap_new_req__tptz__GetNode(soap*, ...) allocate, set required members
/// - _tptz__GetNode* soap_new_set__tptz__GetNode(soap*, ...) allocate, set all public members
/// - _tptz__GetNode::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetNode(soap*, _tptz__GetNode*) deserialize from a stream
/// - int soap_write__tptz__GetNode(soap*, _tptz__GetNode*) serialize to a stream
/// - _tptz__GetNode* _tptz__GetNode::soap_dup(soap*) returns deep copy of _tptz__GetNode, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetNode::soap_del() deep deletes _tptz__GetNode data members, use only after _tptz__GetNode::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetNode::soap_type() returns SOAP_TYPE__tptz__GetNode or derived type identifier
class _tptz__GetNode
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the requested PTZNode.
/// </BLOCKQUOTE></PRE>
///
/// Element "NodeToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   NodeToken                      1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetNodeResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetNodeResponse is a complexType.
///
/// @note class _tptz__GetNodeResponse operations:
/// - _tptz__GetNodeResponse* soap_new__tptz__GetNodeResponse(soap*) allocate and default initialize
/// - _tptz__GetNodeResponse* soap_new__tptz__GetNodeResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__GetNodeResponse* soap_new_req__tptz__GetNodeResponse(soap*, ...) allocate, set required members
/// - _tptz__GetNodeResponse* soap_new_set__tptz__GetNodeResponse(soap*, ...) allocate, set all public members
/// - _tptz__GetNodeResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetNodeResponse(soap*, _tptz__GetNodeResponse*) deserialize from a stream
/// - int soap_write__tptz__GetNodeResponse(soap*, _tptz__GetNodeResponse*) serialize to a stream
/// - _tptz__GetNodeResponse* _tptz__GetNodeResponse::soap_dup(soap*) returns deep copy of _tptz__GetNodeResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetNodeResponse::soap_del() deep deletes _tptz__GetNodeResponse data members, use only after _tptz__GetNodeResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetNodeResponse::soap_type() returns SOAP_TYPE__tptz__GetNodeResponse or derived type identifier
class _tptz__GetNodeResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   A requested PTZNode.
/// </BLOCKQUOTE></PRE>
///
/// Element "PTZNode" of type "http://www.onvif.org/ver10/schema":PTZNode.
    tt__PTZNode*                         PTZNode                        1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurations
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurations is a complexType.
///
/// @note class _tptz__GetConfigurations operations:
/// - _tptz__GetConfigurations* soap_new__tptz__GetConfigurations(soap*) allocate and default initialize
/// - _tptz__GetConfigurations* soap_new__tptz__GetConfigurations(soap*, int num) allocate and default initialize an array
/// - _tptz__GetConfigurations* soap_new_req__tptz__GetConfigurations(soap*, ...) allocate, set required members
/// - _tptz__GetConfigurations* soap_new_set__tptz__GetConfigurations(soap*, ...) allocate, set all public members
/// - _tptz__GetConfigurations::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetConfigurations(soap*, _tptz__GetConfigurations*) deserialize from a stream
/// - int soap_write__tptz__GetConfigurations(soap*, _tptz__GetConfigurations*) serialize to a stream
/// - _tptz__GetConfigurations* _tptz__GetConfigurations::soap_dup(soap*) returns deep copy of _tptz__GetConfigurations, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetConfigurations::soap_del() deep deletes _tptz__GetConfigurations data members, use only after _tptz__GetConfigurations::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetConfigurations::soap_type() returns SOAP_TYPE__tptz__GetConfigurations or derived type identifier
class _tptz__GetConfigurations
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationsResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationsResponse is a complexType.
///
/// @note class _tptz__GetConfigurationsResponse operations:
/// - _tptz__GetConfigurationsResponse* soap_new__tptz__GetConfigurationsResponse(soap*) allocate and default initialize
/// - _tptz__GetConfigurationsResponse* soap_new__tptz__GetConfigurationsResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__GetConfigurationsResponse* soap_new_req__tptz__GetConfigurationsResponse(soap*, ...) allocate, set required members
/// - _tptz__GetConfigurationsResponse* soap_new_set__tptz__GetConfigurationsResponse(soap*, ...) allocate, set all public members
/// - _tptz__GetConfigurationsResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetConfigurationsResponse(soap*, _tptz__GetConfigurationsResponse*) deserialize from a stream
/// - int soap_write__tptz__GetConfigurationsResponse(soap*, _tptz__GetConfigurationsResponse*) serialize to a stream
/// - _tptz__GetConfigurationsResponse* _tptz__GetConfigurationsResponse::soap_dup(soap*) returns deep copy of _tptz__GetConfigurationsResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetConfigurationsResponse::soap_del() deep deletes _tptz__GetConfigurationsResponse data members, use only after _tptz__GetConfigurationsResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetConfigurationsResponse::soap_type() returns SOAP_TYPE__tptz__GetConfigurationsResponse or derived type identifier
class _tptz__GetConfigurationsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   A list of all existing PTZConfigurations on the device.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__PTZConfiguration* of length 0..unbounded.
    std::vector<tt__PTZConfiguration*  > PTZConfiguration               0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetConfiguration
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetConfiguration is a complexType.
///
/// @note class _tptz__GetConfiguration operations:
/// - _tptz__GetConfiguration* soap_new__tptz__GetConfiguration(soap*) allocate and default initialize
/// - _tptz__GetConfiguration* soap_new__tptz__GetConfiguration(soap*, int num) allocate and default initialize an array
/// - _tptz__GetConfiguration* soap_new_req__tptz__GetConfiguration(soap*, ...) allocate, set required members
/// - _tptz__GetConfiguration* soap_new_set__tptz__GetConfiguration(soap*, ...) allocate, set all public members
/// - _tptz__GetConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetConfiguration(soap*, _tptz__GetConfiguration*) deserialize from a stream
/// - int soap_write__tptz__GetConfiguration(soap*, _tptz__GetConfiguration*) serialize to a stream
/// - _tptz__GetConfiguration* _tptz__GetConfiguration::soap_dup(soap*) returns deep copy of _tptz__GetConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetConfiguration::soap_del() deep deletes _tptz__GetConfiguration data members, use only after _tptz__GetConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetConfiguration::soap_type() returns SOAP_TYPE__tptz__GetConfiguration or derived type identifier
class _tptz__GetConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the requested PTZConfiguration.
/// </BLOCKQUOTE></PRE>
///
/// Element "PTZConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PTZConfigurationToken          1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationResponse is a complexType.
///
/// @note class _tptz__GetConfigurationResponse operations:
/// - _tptz__GetConfigurationResponse* soap_new__tptz__GetConfigurationResponse(soap*) allocate and default initialize
/// - _tptz__GetConfigurationResponse* soap_new__tptz__GetConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__GetConfigurationResponse* soap_new_req__tptz__GetConfigurationResponse(soap*, ...) allocate, set required members
/// - _tptz__GetConfigurationResponse* soap_new_set__tptz__GetConfigurationResponse(soap*, ...) allocate, set all public members
/// - _tptz__GetConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetConfigurationResponse(soap*, _tptz__GetConfigurationResponse*) deserialize from a stream
/// - int soap_write__tptz__GetConfigurationResponse(soap*, _tptz__GetConfigurationResponse*) serialize to a stream
/// - _tptz__GetConfigurationResponse* _tptz__GetConfigurationResponse::soap_dup(soap*) returns deep copy of _tptz__GetConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetConfigurationResponse::soap_del() deep deletes _tptz__GetConfigurationResponse data members, use only after _tptz__GetConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetConfigurationResponse::soap_type() returns SOAP_TYPE__tptz__GetConfigurationResponse or derived type identifier
class _tptz__GetConfigurationResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   A requested PTZConfiguration.
/// </BLOCKQUOTE></PRE>
///
/// Element "PTZConfiguration" of type "http://www.onvif.org/ver10/schema":PTZConfiguration.
    tt__PTZConfiguration*                PTZConfiguration               1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SetConfiguration
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":SetConfiguration is a complexType.
///
/// @note class _tptz__SetConfiguration operations:
/// - _tptz__SetConfiguration* soap_new__tptz__SetConfiguration(soap*) allocate and default initialize
/// - _tptz__SetConfiguration* soap_new__tptz__SetConfiguration(soap*, int num) allocate and default initialize an array
/// - _tptz__SetConfiguration* soap_new_req__tptz__SetConfiguration(soap*, ...) allocate, set required members
/// - _tptz__SetConfiguration* soap_new_set__tptz__SetConfiguration(soap*, ...) allocate, set all public members
/// - _tptz__SetConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__tptz__SetConfiguration(soap*, _tptz__SetConfiguration*) deserialize from a stream
/// - int soap_write__tptz__SetConfiguration(soap*, _tptz__SetConfiguration*) serialize to a stream
/// - _tptz__SetConfiguration* _tptz__SetConfiguration::soap_dup(soap*) returns deep copy of _tptz__SetConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__SetConfiguration::soap_del() deep deletes _tptz__SetConfiguration data members, use only after _tptz__SetConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__SetConfiguration::soap_type() returns SOAP_TYPE__tptz__SetConfiguration or derived type identifier
class _tptz__SetConfiguration
{ public:

/// </BLOCKQUOTE></PRE>
///
/// Element "PTZConfiguration" of type "http://www.onvif.org/ver10/schema":PTZConfiguration.
    tt__PTZConfiguration*                PTZConfiguration               1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Flag that makes configuration persistent. Example: User wants the configuration to exist after reboot.
/// </BLOCKQUOTE></PRE>
///
/// Element "ForcePersistence" of type xs:boolean.
    bool                                 ForcePersistence               1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SetConfigurationResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":SetConfigurationResponse is a complexType.
///
/// @note class _tptz__SetConfigurationResponse operations:
/// - _tptz__SetConfigurationResponse* soap_new__tptz__SetConfigurationResponse(soap*) allocate and default initialize
/// - _tptz__SetConfigurationResponse* soap_new__tptz__SetConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__SetConfigurationResponse* soap_new_req__tptz__SetConfigurationResponse(soap*, ...) allocate, set required members
/// - _tptz__SetConfigurationResponse* soap_new_set__tptz__SetConfigurationResponse(soap*, ...) allocate, set all public members
/// - _tptz__SetConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__SetConfigurationResponse(soap*, _tptz__SetConfigurationResponse*) deserialize from a stream
/// - int soap_write__tptz__SetConfigurationResponse(soap*, _tptz__SetConfigurationResponse*) serialize to a stream
/// - _tptz__SetConfigurationResponse* _tptz__SetConfigurationResponse::soap_dup(soap*) returns deep copy of _tptz__SetConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__SetConfigurationResponse::soap_del() deep deletes _tptz__SetConfigurationResponse data members, use only after _tptz__SetConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__SetConfigurationResponse::soap_type() returns SOAP_TYPE__tptz__SetConfigurationResponse or derived type identifier
class _tptz__SetConfigurationResponse
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    struct __tptz__SetConfigurationResponse_sequence
    {
    }                                   *__SetConfigurationResponse_sequence 0;
//  END OF SEQUENCE
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationOptions
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationOptions is a complexType.
///
/// @note class _tptz__GetConfigurationOptions operations:
/// - _tptz__GetConfigurationOptions* soap_new__tptz__GetConfigurationOptions(soap*) allocate and default initialize
/// - _tptz__GetConfigurationOptions* soap_new__tptz__GetConfigurationOptions(soap*, int num) allocate and default initialize an array
/// - _tptz__GetConfigurationOptions* soap_new_req__tptz__GetConfigurationOptions(soap*, ...) allocate, set required members
/// - _tptz__GetConfigurationOptions* soap_new_set__tptz__GetConfigurationOptions(soap*, ...) allocate, set all public members
/// - _tptz__GetConfigurationOptions::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetConfigurationOptions(soap*, _tptz__GetConfigurationOptions*) deserialize from a stream
/// - int soap_write__tptz__GetConfigurationOptions(soap*, _tptz__GetConfigurationOptions*) serialize to a stream
/// - _tptz__GetConfigurationOptions* _tptz__GetConfigurationOptions::soap_dup(soap*) returns deep copy of _tptz__GetConfigurationOptions, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetConfigurationOptions::soap_del() deep deletes _tptz__GetConfigurationOptions data members, use only after _tptz__GetConfigurationOptions::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetConfigurationOptions::soap_type() returns SOAP_TYPE__tptz__GetConfigurationOptions or derived type identifier
class _tptz__GetConfigurationOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of an existing configuration that the options are intended for.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationOptionsResponse is a complexType.
///
/// @note class _tptz__GetConfigurationOptionsResponse operations:
/// - _tptz__GetConfigurationOptionsResponse* soap_new__tptz__GetConfigurationOptionsResponse(soap*) allocate and default initialize
/// - _tptz__GetConfigurationOptionsResponse* soap_new__tptz__GetConfigurationOptionsResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__GetConfigurationOptionsResponse* soap_new_req__tptz__GetConfigurationOptionsResponse(soap*, ...) allocate, set required members
/// - _tptz__GetConfigurationOptionsResponse* soap_new_set__tptz__GetConfigurationOptionsResponse(soap*, ...) allocate, set all public members
/// - _tptz__GetConfigurationOptionsResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetConfigurationOptionsResponse(soap*, _tptz__GetConfigurationOptionsResponse*) deserialize from a stream
/// - int soap_write__tptz__GetConfigurationOptionsResponse(soap*, _tptz__GetConfigurationOptionsResponse*) serialize to a stream
/// - _tptz__GetConfigurationOptionsResponse* _tptz__GetConfigurationOptionsResponse::soap_dup(soap*) returns deep copy of _tptz__GetConfigurationOptionsResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetConfigurationOptionsResponse::soap_del() deep deletes _tptz__GetConfigurationOptionsResponse data members, use only after _tptz__GetConfigurationOptionsResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetConfigurationOptionsResponse::soap_type() returns SOAP_TYPE__tptz__GetConfigurationOptionsResponse or derived type identifier
class _tptz__GetConfigurationOptionsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The requested PTZ configuration options.
/// </BLOCKQUOTE></PRE>
///
/// Element "PTZConfigurationOptions" of type "http://www.onvif.org/ver10/schema":PTZConfigurationOptions.
    tt__PTZConfigurationOptions*         PTZConfigurationOptions        1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SendAuxiliaryCommand
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":SendAuxiliaryCommand is a complexType.
///
/// @note class _tptz__SendAuxiliaryCommand operations:
/// - _tptz__SendAuxiliaryCommand* soap_new__tptz__SendAuxiliaryCommand(soap*) allocate and default initialize
/// - _tptz__SendAuxiliaryCommand* soap_new__tptz__SendAuxiliaryCommand(soap*, int num) allocate and default initialize an array
/// - _tptz__SendAuxiliaryCommand* soap_new_req__tptz__SendAuxiliaryCommand(soap*, ...) allocate, set required members
/// - _tptz__SendAuxiliaryCommand* soap_new_set__tptz__SendAuxiliaryCommand(soap*, ...) allocate, set all public members
/// - _tptz__SendAuxiliaryCommand::soap_default(soap*) default initialize members
/// - int soap_read__tptz__SendAuxiliaryCommand(soap*, _tptz__SendAuxiliaryCommand*) deserialize from a stream
/// - int soap_write__tptz__SendAuxiliaryCommand(soap*, _tptz__SendAuxiliaryCommand*) serialize to a stream
/// - _tptz__SendAuxiliaryCommand* _tptz__SendAuxiliaryCommand::soap_dup(soap*) returns deep copy of _tptz__SendAuxiliaryCommand, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__SendAuxiliaryCommand::soap_del() deep deletes _tptz__SendAuxiliaryCommand data members, use only after _tptz__SendAuxiliaryCommand::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__SendAuxiliaryCommand::soap_type() returns SOAP_TYPE__tptz__SendAuxiliaryCommand or derived type identifier
class _tptz__SendAuxiliaryCommand
{ public:
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile where the operation should take place.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The Auxiliary request data.
/// </BLOCKQUOTE></PRE>
///
/// Element "AuxiliaryData" of type "http://www.onvif.org/ver10/schema":AuxiliaryData.
    tt__AuxiliaryData                    AuxiliaryData                  1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SendAuxiliaryCommandResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":SendAuxiliaryCommandResponse is a complexType.
///
/// @note class _tptz__SendAuxiliaryCommandResponse operations:
/// - _tptz__SendAuxiliaryCommandResponse* soap_new__tptz__SendAuxiliaryCommandResponse(soap*) allocate and default initialize
/// - _tptz__SendAuxiliaryCommandResponse* soap_new__tptz__SendAuxiliaryCommandResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__SendAuxiliaryCommandResponse* soap_new_req__tptz__SendAuxiliaryCommandResponse(soap*, ...) allocate, set required members
/// - _tptz__SendAuxiliaryCommandResponse* soap_new_set__tptz__SendAuxiliaryCommandResponse(soap*, ...) allocate, set all public members
/// - _tptz__SendAuxiliaryCommandResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__SendAuxiliaryCommandResponse(soap*, _tptz__SendAuxiliaryCommandResponse*) deserialize from a stream
/// - int soap_write__tptz__SendAuxiliaryCommandResponse(soap*, _tptz__SendAuxiliaryCommandResponse*) serialize to a stream
/// - _tptz__SendAuxiliaryCommandResponse* _tptz__SendAuxiliaryCommandResponse::soap_dup(soap*) returns deep copy of _tptz__SendAuxiliaryCommandResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__SendAuxiliaryCommandResponse::soap_del() deep deletes _tptz__SendAuxiliaryCommandResponse data members, use only after _tptz__SendAuxiliaryCommandResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__SendAuxiliaryCommandResponse::soap_type() returns SOAP_TYPE__tptz__SendAuxiliaryCommandResponse or derived type identifier
class _tptz__SendAuxiliaryCommandResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The response contains the auxiliary response.
/// </BLOCKQUOTE></PRE>
///
/// Element "AuxiliaryResponse" of type "http://www.onvif.org/ver10/schema":AuxiliaryData.
    tt__AuxiliaryData                    AuxiliaryResponse              1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresets
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetPresets is a complexType.
///
/// @note class _tptz__GetPresets operations:
/// - _tptz__GetPresets* soap_new__tptz__GetPresets(soap*) allocate and default initialize
/// - _tptz__GetPresets* soap_new__tptz__GetPresets(soap*, int num) allocate and default initialize an array
/// - _tptz__GetPresets* soap_new_req__tptz__GetPresets(soap*, ...) allocate, set required members
/// - _tptz__GetPresets* soap_new_set__tptz__GetPresets(soap*, ...) allocate, set all public members
/// - _tptz__GetPresets::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetPresets(soap*, _tptz__GetPresets*) deserialize from a stream
/// - int soap_write__tptz__GetPresets(soap*, _tptz__GetPresets*) serialize to a stream
/// - _tptz__GetPresets* _tptz__GetPresets::soap_dup(soap*) returns deep copy of _tptz__GetPresets, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetPresets::soap_del() deep deletes _tptz__GetPresets data members, use only after _tptz__GetPresets::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetPresets::soap_type() returns SOAP_TYPE__tptz__GetPresets or derived type identifier
class _tptz__GetPresets
{ public:
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile where the operation should take place.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresetsResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetPresetsResponse is a complexType.
///
/// @note class _tptz__GetPresetsResponse operations:
/// - _tptz__GetPresetsResponse* soap_new__tptz__GetPresetsResponse(soap*) allocate and default initialize
/// - _tptz__GetPresetsResponse* soap_new__tptz__GetPresetsResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__GetPresetsResponse* soap_new_req__tptz__GetPresetsResponse(soap*, ...) allocate, set required members
/// - _tptz__GetPresetsResponse* soap_new_set__tptz__GetPresetsResponse(soap*, ...) allocate, set all public members
/// - _tptz__GetPresetsResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetPresetsResponse(soap*, _tptz__GetPresetsResponse*) deserialize from a stream
/// - int soap_write__tptz__GetPresetsResponse(soap*, _tptz__GetPresetsResponse*) serialize to a stream
/// - _tptz__GetPresetsResponse* _tptz__GetPresetsResponse::soap_dup(soap*) returns deep copy of _tptz__GetPresetsResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetPresetsResponse::soap_del() deep deletes _tptz__GetPresetsResponse data members, use only after _tptz__GetPresetsResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetPresetsResponse::soap_type() returns SOAP_TYPE__tptz__GetPresetsResponse or derived type identifier
class _tptz__GetPresetsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   A list of presets which are available for the requested MediaProfile.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__PTZPreset* of length 0..unbounded.
    std::vector<tt__PTZPreset*         > Preset                         0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SetPreset
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":SetPreset is a complexType.
///
/// @note class _tptz__SetPreset operations:
/// - _tptz__SetPreset* soap_new__tptz__SetPreset(soap*) allocate and default initialize
/// - _tptz__SetPreset* soap_new__tptz__SetPreset(soap*, int num) allocate and default initialize an array
/// - _tptz__SetPreset* soap_new_req__tptz__SetPreset(soap*, ...) allocate, set required members
/// - _tptz__SetPreset* soap_new_set__tptz__SetPreset(soap*, ...) allocate, set all public members
/// - _tptz__SetPreset::soap_default(soap*) default initialize members
/// - int soap_read__tptz__SetPreset(soap*, _tptz__SetPreset*) deserialize from a stream
/// - int soap_write__tptz__SetPreset(soap*, _tptz__SetPreset*) serialize to a stream
/// - _tptz__SetPreset* _tptz__SetPreset::soap_dup(soap*) returns deep copy of _tptz__SetPreset, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__SetPreset::soap_del() deep deletes _tptz__SetPreset data members, use only after _tptz__SetPreset::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__SetPreset::soap_type() returns SOAP_TYPE__tptz__SetPreset or derived type identifier
class _tptz__SetPreset
{ public:
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile where the operation should take place.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A requested preset name.
/// </BLOCKQUOTE></PRE>
///
/// Element "PresetName" of type xs:string.
    std::string*                         PresetName                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   A requested preset token.
/// </BLOCKQUOTE></PRE>
///
/// Element "PresetToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  PresetToken                    0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SetPresetResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":SetPresetResponse is a complexType.
///
/// @note class _tptz__SetPresetResponse operations:
/// - _tptz__SetPresetResponse* soap_new__tptz__SetPresetResponse(soap*) allocate and default initialize
/// - _tptz__SetPresetResponse* soap_new__tptz__SetPresetResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__SetPresetResponse* soap_new_req__tptz__SetPresetResponse(soap*, ...) allocate, set required members
/// - _tptz__SetPresetResponse* soap_new_set__tptz__SetPresetResponse(soap*, ...) allocate, set all public members
/// - _tptz__SetPresetResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__SetPresetResponse(soap*, _tptz__SetPresetResponse*) deserialize from a stream
/// - int soap_write__tptz__SetPresetResponse(soap*, _tptz__SetPresetResponse*) serialize to a stream
/// - _tptz__SetPresetResponse* _tptz__SetPresetResponse::soap_dup(soap*) returns deep copy of _tptz__SetPresetResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__SetPresetResponse::soap_del() deep deletes _tptz__SetPresetResponse data members, use only after _tptz__SetPresetResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__SetPresetResponse::soap_type() returns SOAP_TYPE__tptz__SetPresetResponse or derived type identifier
class _tptz__SetPresetResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   A token to the Preset which has been set.
/// </BLOCKQUOTE></PRE>
///
/// Element "PresetToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetToken                    1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":RemovePreset
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":RemovePreset is a complexType.
///
/// @note class _tptz__RemovePreset operations:
/// - _tptz__RemovePreset* soap_new__tptz__RemovePreset(soap*) allocate and default initialize
/// - _tptz__RemovePreset* soap_new__tptz__RemovePreset(soap*, int num) allocate and default initialize an array
/// - _tptz__RemovePreset* soap_new_req__tptz__RemovePreset(soap*, ...) allocate, set required members
/// - _tptz__RemovePreset* soap_new_set__tptz__RemovePreset(soap*, ...) allocate, set all public members
/// - _tptz__RemovePreset::soap_default(soap*) default initialize members
/// - int soap_read__tptz__RemovePreset(soap*, _tptz__RemovePreset*) deserialize from a stream
/// - int soap_write__tptz__RemovePreset(soap*, _tptz__RemovePreset*) serialize to a stream
/// - _tptz__RemovePreset* _tptz__RemovePreset::soap_dup(soap*) returns deep copy of _tptz__RemovePreset, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__RemovePreset::soap_del() deep deletes _tptz__RemovePreset data members, use only after _tptz__RemovePreset::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__RemovePreset::soap_type() returns SOAP_TYPE__tptz__RemovePreset or derived type identifier
class _tptz__RemovePreset
{ public:
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile where the operation should take place.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A requested preset token.
/// </BLOCKQUOTE></PRE>
///
/// Element "PresetToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetToken                    1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":RemovePresetResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":RemovePresetResponse is a complexType.
///
/// @note class _tptz__RemovePresetResponse operations:
/// - _tptz__RemovePresetResponse* soap_new__tptz__RemovePresetResponse(soap*) allocate and default initialize
/// - _tptz__RemovePresetResponse* soap_new__tptz__RemovePresetResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__RemovePresetResponse* soap_new_req__tptz__RemovePresetResponse(soap*, ...) allocate, set required members
/// - _tptz__RemovePresetResponse* soap_new_set__tptz__RemovePresetResponse(soap*, ...) allocate, set all public members
/// - _tptz__RemovePresetResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__RemovePresetResponse(soap*, _tptz__RemovePresetResponse*) deserialize from a stream
/// - int soap_write__tptz__RemovePresetResponse(soap*, _tptz__RemovePresetResponse*) serialize to a stream
/// - _tptz__RemovePresetResponse* _tptz__RemovePresetResponse::soap_dup(soap*) returns deep copy of _tptz__RemovePresetResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__RemovePresetResponse::soap_del() deep deletes _tptz__RemovePresetResponse data members, use only after _tptz__RemovePresetResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__RemovePresetResponse::soap_type() returns SOAP_TYPE__tptz__RemovePresetResponse or derived type identifier
class _tptz__RemovePresetResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GotoPreset
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GotoPreset is a complexType.
///
/// @note class _tptz__GotoPreset operations:
/// - _tptz__GotoPreset* soap_new__tptz__GotoPreset(soap*) allocate and default initialize
/// - _tptz__GotoPreset* soap_new__tptz__GotoPreset(soap*, int num) allocate and default initialize an array
/// - _tptz__GotoPreset* soap_new_req__tptz__GotoPreset(soap*, ...) allocate, set required members
/// - _tptz__GotoPreset* soap_new_set__tptz__GotoPreset(soap*, ...) allocate, set all public members
/// - _tptz__GotoPreset::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GotoPreset(soap*, _tptz__GotoPreset*) deserialize from a stream
/// - int soap_write__tptz__GotoPreset(soap*, _tptz__GotoPreset*) serialize to a stream
/// - _tptz__GotoPreset* _tptz__GotoPreset::soap_dup(soap*) returns deep copy of _tptz__GotoPreset, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GotoPreset::soap_del() deep deletes _tptz__GotoPreset data members, use only after _tptz__GotoPreset::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GotoPreset::soap_type() returns SOAP_TYPE__tptz__GotoPreset or derived type identifier
class _tptz__GotoPreset
{ public:
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile where the operation should take place.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A requested preset token.
/// </BLOCKQUOTE></PRE>
///
/// Element "PresetToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetToken                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A requested speed.The speed parameter can only be specified when Speed Spaces are available for the PTZ Node.
/// </BLOCKQUOTE></PRE>
///
/// Element "Speed" of type "http://www.onvif.org/ver10/schema":PTZSpeed.
    tt__PTZSpeed*                        Speed                          0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GotoPresetResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GotoPresetResponse is a complexType.
///
/// @note class _tptz__GotoPresetResponse operations:
/// - _tptz__GotoPresetResponse* soap_new__tptz__GotoPresetResponse(soap*) allocate and default initialize
/// - _tptz__GotoPresetResponse* soap_new__tptz__GotoPresetResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__GotoPresetResponse* soap_new_req__tptz__GotoPresetResponse(soap*, ...) allocate, set required members
/// - _tptz__GotoPresetResponse* soap_new_set__tptz__GotoPresetResponse(soap*, ...) allocate, set all public members
/// - _tptz__GotoPresetResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GotoPresetResponse(soap*, _tptz__GotoPresetResponse*) deserialize from a stream
/// - int soap_write__tptz__GotoPresetResponse(soap*, _tptz__GotoPresetResponse*) serialize to a stream
/// - _tptz__GotoPresetResponse* _tptz__GotoPresetResponse::soap_dup(soap*) returns deep copy of _tptz__GotoPresetResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GotoPresetResponse::soap_del() deep deletes _tptz__GotoPresetResponse data members, use only after _tptz__GotoPresetResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GotoPresetResponse::soap_type() returns SOAP_TYPE__tptz__GotoPresetResponse or derived type identifier
class _tptz__GotoPresetResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetStatus
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetStatus is a complexType.
///
/// @note class _tptz__GetStatus operations:
/// - _tptz__GetStatus* soap_new__tptz__GetStatus(soap*) allocate and default initialize
/// - _tptz__GetStatus* soap_new__tptz__GetStatus(soap*, int num) allocate and default initialize an array
/// - _tptz__GetStatus* soap_new_req__tptz__GetStatus(soap*, ...) allocate, set required members
/// - _tptz__GetStatus* soap_new_set__tptz__GetStatus(soap*, ...) allocate, set all public members
/// - _tptz__GetStatus::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetStatus(soap*, _tptz__GetStatus*) deserialize from a stream
/// - int soap_write__tptz__GetStatus(soap*, _tptz__GetStatus*) serialize to a stream
/// - _tptz__GetStatus* _tptz__GetStatus::soap_dup(soap*) returns deep copy of _tptz__GetStatus, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetStatus::soap_del() deep deletes _tptz__GetStatus data members, use only after _tptz__GetStatus::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetStatus::soap_type() returns SOAP_TYPE__tptz__GetStatus or derived type identifier
class _tptz__GetStatus
{ public:
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile where the PTZStatus should be requested.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetStatusResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetStatusResponse is a complexType.
///
/// @note class _tptz__GetStatusResponse operations:
/// - _tptz__GetStatusResponse* soap_new__tptz__GetStatusResponse(soap*) allocate and default initialize
/// - _tptz__GetStatusResponse* soap_new__tptz__GetStatusResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__GetStatusResponse* soap_new_req__tptz__GetStatusResponse(soap*, ...) allocate, set required members
/// - _tptz__GetStatusResponse* soap_new_set__tptz__GetStatusResponse(soap*, ...) allocate, set all public members
/// - _tptz__GetStatusResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetStatusResponse(soap*, _tptz__GetStatusResponse*) deserialize from a stream
/// - int soap_write__tptz__GetStatusResponse(soap*, _tptz__GetStatusResponse*) serialize to a stream
/// - _tptz__GetStatusResponse* _tptz__GetStatusResponse::soap_dup(soap*) returns deep copy of _tptz__GetStatusResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetStatusResponse::soap_del() deep deletes _tptz__GetStatusResponse data members, use only after _tptz__GetStatusResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetStatusResponse::soap_type() returns SOAP_TYPE__tptz__GetStatusResponse or derived type identifier
class _tptz__GetStatusResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The PTZStatus for the requested MediaProfile.
/// </BLOCKQUOTE></PRE>
///
/// Element "PTZStatus" of type "http://www.onvif.org/ver10/schema":PTZStatus.
    tt__PTZStatus*                       PTZStatus                      1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GotoHomePosition
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GotoHomePosition is a complexType.
///
/// @note class _tptz__GotoHomePosition operations:
/// - _tptz__GotoHomePosition* soap_new__tptz__GotoHomePosition(soap*) allocate and default initialize
/// - _tptz__GotoHomePosition* soap_new__tptz__GotoHomePosition(soap*, int num) allocate and default initialize an array
/// - _tptz__GotoHomePosition* soap_new_req__tptz__GotoHomePosition(soap*, ...) allocate, set required members
/// - _tptz__GotoHomePosition* soap_new_set__tptz__GotoHomePosition(soap*, ...) allocate, set all public members
/// - _tptz__GotoHomePosition::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GotoHomePosition(soap*, _tptz__GotoHomePosition*) deserialize from a stream
/// - int soap_write__tptz__GotoHomePosition(soap*, _tptz__GotoHomePosition*) serialize to a stream
/// - _tptz__GotoHomePosition* _tptz__GotoHomePosition::soap_dup(soap*) returns deep copy of _tptz__GotoHomePosition, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GotoHomePosition::soap_del() deep deletes _tptz__GotoHomePosition data members, use only after _tptz__GotoHomePosition::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GotoHomePosition::soap_type() returns SOAP_TYPE__tptz__GotoHomePosition or derived type identifier
class _tptz__GotoHomePosition
{ public:
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile where the operation should take place.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A requested speed.The speed parameter can only be specified when Speed Spaces are available for the PTZ Node.
/// </BLOCKQUOTE></PRE>
///
/// Element "Speed" of type "http://www.onvif.org/ver10/schema":PTZSpeed.
    tt__PTZSpeed*                        Speed                          0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GotoHomePositionResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GotoHomePositionResponse is a complexType.
///
/// @note class _tptz__GotoHomePositionResponse operations:
/// - _tptz__GotoHomePositionResponse* soap_new__tptz__GotoHomePositionResponse(soap*) allocate and default initialize
/// - _tptz__GotoHomePositionResponse* soap_new__tptz__GotoHomePositionResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__GotoHomePositionResponse* soap_new_req__tptz__GotoHomePositionResponse(soap*, ...) allocate, set required members
/// - _tptz__GotoHomePositionResponse* soap_new_set__tptz__GotoHomePositionResponse(soap*, ...) allocate, set all public members
/// - _tptz__GotoHomePositionResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GotoHomePositionResponse(soap*, _tptz__GotoHomePositionResponse*) deserialize from a stream
/// - int soap_write__tptz__GotoHomePositionResponse(soap*, _tptz__GotoHomePositionResponse*) serialize to a stream
/// - _tptz__GotoHomePositionResponse* _tptz__GotoHomePositionResponse::soap_dup(soap*) returns deep copy of _tptz__GotoHomePositionResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GotoHomePositionResponse::soap_del() deep deletes _tptz__GotoHomePositionResponse data members, use only after _tptz__GotoHomePositionResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GotoHomePositionResponse::soap_type() returns SOAP_TYPE__tptz__GotoHomePositionResponse or derived type identifier
class _tptz__GotoHomePositionResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SetHomePosition
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":SetHomePosition is a complexType.
///
/// @note class _tptz__SetHomePosition operations:
/// - _tptz__SetHomePosition* soap_new__tptz__SetHomePosition(soap*) allocate and default initialize
/// - _tptz__SetHomePosition* soap_new__tptz__SetHomePosition(soap*, int num) allocate and default initialize an array
/// - _tptz__SetHomePosition* soap_new_req__tptz__SetHomePosition(soap*, ...) allocate, set required members
/// - _tptz__SetHomePosition* soap_new_set__tptz__SetHomePosition(soap*, ...) allocate, set all public members
/// - _tptz__SetHomePosition::soap_default(soap*) default initialize members
/// - int soap_read__tptz__SetHomePosition(soap*, _tptz__SetHomePosition*) deserialize from a stream
/// - int soap_write__tptz__SetHomePosition(soap*, _tptz__SetHomePosition*) serialize to a stream
/// - _tptz__SetHomePosition* _tptz__SetHomePosition::soap_dup(soap*) returns deep copy of _tptz__SetHomePosition, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__SetHomePosition::soap_del() deep deletes _tptz__SetHomePosition data members, use only after _tptz__SetHomePosition::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__SetHomePosition::soap_type() returns SOAP_TYPE__tptz__SetHomePosition or derived type identifier
class _tptz__SetHomePosition
{ public:
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile where the home position should be set.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SetHomePositionResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":SetHomePositionResponse is a complexType.
///
/// @note class _tptz__SetHomePositionResponse operations:
/// - _tptz__SetHomePositionResponse* soap_new__tptz__SetHomePositionResponse(soap*) allocate and default initialize
/// - _tptz__SetHomePositionResponse* soap_new__tptz__SetHomePositionResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__SetHomePositionResponse* soap_new_req__tptz__SetHomePositionResponse(soap*, ...) allocate, set required members
/// - _tptz__SetHomePositionResponse* soap_new_set__tptz__SetHomePositionResponse(soap*, ...) allocate, set all public members
/// - _tptz__SetHomePositionResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__SetHomePositionResponse(soap*, _tptz__SetHomePositionResponse*) deserialize from a stream
/// - int soap_write__tptz__SetHomePositionResponse(soap*, _tptz__SetHomePositionResponse*) serialize to a stream
/// - _tptz__SetHomePositionResponse* _tptz__SetHomePositionResponse::soap_dup(soap*) returns deep copy of _tptz__SetHomePositionResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__SetHomePositionResponse::soap_del() deep deletes _tptz__SetHomePositionResponse data members, use only after _tptz__SetHomePositionResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__SetHomePositionResponse::soap_type() returns SOAP_TYPE__tptz__SetHomePositionResponse or derived type identifier
class _tptz__SetHomePositionResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":ContinuousMove
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":ContinuousMove is a complexType.
///
/// @note class _tptz__ContinuousMove operations:
/// - _tptz__ContinuousMove* soap_new__tptz__ContinuousMove(soap*) allocate and default initialize
/// - _tptz__ContinuousMove* soap_new__tptz__ContinuousMove(soap*, int num) allocate and default initialize an array
/// - _tptz__ContinuousMove* soap_new_req__tptz__ContinuousMove(soap*, ...) allocate, set required members
/// - _tptz__ContinuousMove* soap_new_set__tptz__ContinuousMove(soap*, ...) allocate, set all public members
/// - _tptz__ContinuousMove::soap_default(soap*) default initialize members
/// - int soap_read__tptz__ContinuousMove(soap*, _tptz__ContinuousMove*) deserialize from a stream
/// - int soap_write__tptz__ContinuousMove(soap*, _tptz__ContinuousMove*) serialize to a stream
/// - _tptz__ContinuousMove* _tptz__ContinuousMove::soap_dup(soap*) returns deep copy of _tptz__ContinuousMove, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__ContinuousMove::soap_del() deep deletes _tptz__ContinuousMove data members, use only after _tptz__ContinuousMove::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__ContinuousMove::soap_type() returns SOAP_TYPE__tptz__ContinuousMove or derived type identifier
class _tptz__ContinuousMove
{ public:
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A Velocity vector specifying the velocity of pan, tilt and zoom.
/// </BLOCKQUOTE></PRE>
///
/// Element "Velocity" of type "http://www.onvif.org/ver10/schema":PTZSpeed.
    tt__PTZSpeed*                        Velocity                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   An optional Timeout parameter.
/// </BLOCKQUOTE></PRE>
///
/// Element "Timeout" of type xs:duration.
    xsd__duration*                       Timeout                        0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":ContinuousMoveResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":ContinuousMoveResponse is a complexType.
///
/// @note class _tptz__ContinuousMoveResponse operations:
/// - _tptz__ContinuousMoveResponse* soap_new__tptz__ContinuousMoveResponse(soap*) allocate and default initialize
/// - _tptz__ContinuousMoveResponse* soap_new__tptz__ContinuousMoveResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__ContinuousMoveResponse* soap_new_req__tptz__ContinuousMoveResponse(soap*, ...) allocate, set required members
/// - _tptz__ContinuousMoveResponse* soap_new_set__tptz__ContinuousMoveResponse(soap*, ...) allocate, set all public members
/// - _tptz__ContinuousMoveResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__ContinuousMoveResponse(soap*, _tptz__ContinuousMoveResponse*) deserialize from a stream
/// - int soap_write__tptz__ContinuousMoveResponse(soap*, _tptz__ContinuousMoveResponse*) serialize to a stream
/// - _tptz__ContinuousMoveResponse* _tptz__ContinuousMoveResponse::soap_dup(soap*) returns deep copy of _tptz__ContinuousMoveResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__ContinuousMoveResponse::soap_del() deep deletes _tptz__ContinuousMoveResponse data members, use only after _tptz__ContinuousMoveResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__ContinuousMoveResponse::soap_type() returns SOAP_TYPE__tptz__ContinuousMoveResponse or derived type identifier
class _tptz__ContinuousMoveResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":RelativeMove
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":RelativeMove is a complexType.
///
/// @note class _tptz__RelativeMove operations:
/// - _tptz__RelativeMove* soap_new__tptz__RelativeMove(soap*) allocate and default initialize
/// - _tptz__RelativeMove* soap_new__tptz__RelativeMove(soap*, int num) allocate and default initialize an array
/// - _tptz__RelativeMove* soap_new_req__tptz__RelativeMove(soap*, ...) allocate, set required members
/// - _tptz__RelativeMove* soap_new_set__tptz__RelativeMove(soap*, ...) allocate, set all public members
/// - _tptz__RelativeMove::soap_default(soap*) default initialize members
/// - int soap_read__tptz__RelativeMove(soap*, _tptz__RelativeMove*) deserialize from a stream
/// - int soap_write__tptz__RelativeMove(soap*, _tptz__RelativeMove*) serialize to a stream
/// - _tptz__RelativeMove* _tptz__RelativeMove::soap_dup(soap*) returns deep copy of _tptz__RelativeMove, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__RelativeMove::soap_del() deep deletes _tptz__RelativeMove data members, use only after _tptz__RelativeMove::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__RelativeMove::soap_type() returns SOAP_TYPE__tptz__RelativeMove or derived type identifier
class _tptz__RelativeMove
{ public:
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A positional Translation relative to the current position
/// </BLOCKQUOTE></PRE>
///
/// Element "Translation" of type "http://www.onvif.org/ver10/schema":PTZVector.
    tt__PTZVector*                       Translation                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   An optional Speed parameter.
/// </BLOCKQUOTE></PRE>
///
/// Element "Speed" of type "http://www.onvif.org/ver10/schema":PTZSpeed.
    tt__PTZSpeed*                        Speed                          0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":RelativeMoveResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":RelativeMoveResponse is a complexType.
///
/// @note class _tptz__RelativeMoveResponse operations:
/// - _tptz__RelativeMoveResponse* soap_new__tptz__RelativeMoveResponse(soap*) allocate and default initialize
/// - _tptz__RelativeMoveResponse* soap_new__tptz__RelativeMoveResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__RelativeMoveResponse* soap_new_req__tptz__RelativeMoveResponse(soap*, ...) allocate, set required members
/// - _tptz__RelativeMoveResponse* soap_new_set__tptz__RelativeMoveResponse(soap*, ...) allocate, set all public members
/// - _tptz__RelativeMoveResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__RelativeMoveResponse(soap*, _tptz__RelativeMoveResponse*) deserialize from a stream
/// - int soap_write__tptz__RelativeMoveResponse(soap*, _tptz__RelativeMoveResponse*) serialize to a stream
/// - _tptz__RelativeMoveResponse* _tptz__RelativeMoveResponse::soap_dup(soap*) returns deep copy of _tptz__RelativeMoveResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__RelativeMoveResponse::soap_del() deep deletes _tptz__RelativeMoveResponse data members, use only after _tptz__RelativeMoveResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__RelativeMoveResponse::soap_type() returns SOAP_TYPE__tptz__RelativeMoveResponse or derived type identifier
class _tptz__RelativeMoveResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":AbsoluteMove
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":AbsoluteMove is a complexType.
///
/// @note class _tptz__AbsoluteMove operations:
/// - _tptz__AbsoluteMove* soap_new__tptz__AbsoluteMove(soap*) allocate and default initialize
/// - _tptz__AbsoluteMove* soap_new__tptz__AbsoluteMove(soap*, int num) allocate and default initialize an array
/// - _tptz__AbsoluteMove* soap_new_req__tptz__AbsoluteMove(soap*, ...) allocate, set required members
/// - _tptz__AbsoluteMove* soap_new_set__tptz__AbsoluteMove(soap*, ...) allocate, set all public members
/// - _tptz__AbsoluteMove::soap_default(soap*) default initialize members
/// - int soap_read__tptz__AbsoluteMove(soap*, _tptz__AbsoluteMove*) deserialize from a stream
/// - int soap_write__tptz__AbsoluteMove(soap*, _tptz__AbsoluteMove*) serialize to a stream
/// - _tptz__AbsoluteMove* _tptz__AbsoluteMove::soap_dup(soap*) returns deep copy of _tptz__AbsoluteMove, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__AbsoluteMove::soap_del() deep deletes _tptz__AbsoluteMove data members, use only after _tptz__AbsoluteMove::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__AbsoluteMove::soap_type() returns SOAP_TYPE__tptz__AbsoluteMove or derived type identifier
class _tptz__AbsoluteMove
{ public:
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A Position vector specifying the absolute target position.
/// </BLOCKQUOTE></PRE>
///
/// Element "Position" of type "http://www.onvif.org/ver10/schema":PTZVector.
    tt__PTZVector*                       Position                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   An optional Speed.
/// </BLOCKQUOTE></PRE>
///
/// Element "Speed" of type "http://www.onvif.org/ver10/schema":PTZSpeed.
    tt__PTZSpeed*                        Speed                          0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":AbsoluteMoveResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":AbsoluteMoveResponse is a complexType.
///
/// @note class _tptz__AbsoluteMoveResponse operations:
/// - _tptz__AbsoluteMoveResponse* soap_new__tptz__AbsoluteMoveResponse(soap*) allocate and default initialize
/// - _tptz__AbsoluteMoveResponse* soap_new__tptz__AbsoluteMoveResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__AbsoluteMoveResponse* soap_new_req__tptz__AbsoluteMoveResponse(soap*, ...) allocate, set required members
/// - _tptz__AbsoluteMoveResponse* soap_new_set__tptz__AbsoluteMoveResponse(soap*, ...) allocate, set all public members
/// - _tptz__AbsoluteMoveResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__AbsoluteMoveResponse(soap*, _tptz__AbsoluteMoveResponse*) deserialize from a stream
/// - int soap_write__tptz__AbsoluteMoveResponse(soap*, _tptz__AbsoluteMoveResponse*) serialize to a stream
/// - _tptz__AbsoluteMoveResponse* _tptz__AbsoluteMoveResponse::soap_dup(soap*) returns deep copy of _tptz__AbsoluteMoveResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__AbsoluteMoveResponse::soap_del() deep deletes _tptz__AbsoluteMoveResponse data members, use only after _tptz__AbsoluteMoveResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__AbsoluteMoveResponse::soap_type() returns SOAP_TYPE__tptz__AbsoluteMoveResponse or derived type identifier
class _tptz__AbsoluteMoveResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GeoMove
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GeoMove is a complexType.
///
/// @note class _tptz__GeoMove operations:
/// - _tptz__GeoMove* soap_new__tptz__GeoMove(soap*) allocate and default initialize
/// - _tptz__GeoMove* soap_new__tptz__GeoMove(soap*, int num) allocate and default initialize an array
/// - _tptz__GeoMove* soap_new_req__tptz__GeoMove(soap*, ...) allocate, set required members
/// - _tptz__GeoMove* soap_new_set__tptz__GeoMove(soap*, ...) allocate, set all public members
/// - _tptz__GeoMove::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GeoMove(soap*, _tptz__GeoMove*) deserialize from a stream
/// - int soap_write__tptz__GeoMove(soap*, _tptz__GeoMove*) serialize to a stream
/// - _tptz__GeoMove* _tptz__GeoMove::soap_dup(soap*) returns deep copy of _tptz__GeoMove, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GeoMove::soap_del() deep deletes _tptz__GeoMove data members, use only after _tptz__GeoMove::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GeoMove::soap_type() returns SOAP_TYPE__tptz__GeoMove or derived type identifier
class _tptz__GeoMove
{ public:
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The geolocation of the target position.
/// </BLOCKQUOTE></PRE>
///
/// Element "Target" of type "http://www.onvif.org/ver10/schema":GeoLocation.
    tt__GeoLocation*                     Target                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   An optional Speed.
/// </BLOCKQUOTE></PRE>
///
/// Element "Speed" of type "http://www.onvif.org/ver10/schema":PTZSpeed.
    tt__PTZSpeed*                        Speed                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   An optional indication of the height of the target/area.
/// </BLOCKQUOTE></PRE>
///
/// Element "AreaHeight" of type xs:float.
    float*                               AreaHeight                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   An optional indication of the width of the target/area.
/// </BLOCKQUOTE></PRE>
///
/// Element "AreaWidth" of type xs:float.
    float*                               AreaWidth                      0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GeoMoveResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GeoMoveResponse is a complexType.
///
/// @note class _tptz__GeoMoveResponse operations:
/// - _tptz__GeoMoveResponse* soap_new__tptz__GeoMoveResponse(soap*) allocate and default initialize
/// - _tptz__GeoMoveResponse* soap_new__tptz__GeoMoveResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__GeoMoveResponse* soap_new_req__tptz__GeoMoveResponse(soap*, ...) allocate, set required members
/// - _tptz__GeoMoveResponse* soap_new_set__tptz__GeoMoveResponse(soap*, ...) allocate, set all public members
/// - _tptz__GeoMoveResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GeoMoveResponse(soap*, _tptz__GeoMoveResponse*) deserialize from a stream
/// - int soap_write__tptz__GeoMoveResponse(soap*, _tptz__GeoMoveResponse*) serialize to a stream
/// - _tptz__GeoMoveResponse* _tptz__GeoMoveResponse::soap_dup(soap*) returns deep copy of _tptz__GeoMoveResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GeoMoveResponse::soap_del() deep deletes _tptz__GeoMoveResponse data members, use only after _tptz__GeoMoveResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GeoMoveResponse::soap_type() returns SOAP_TYPE__tptz__GeoMoveResponse or derived type identifier
class _tptz__GeoMoveResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":Stop
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":Stop is a complexType.
///
/// @note class _tptz__Stop operations:
/// - _tptz__Stop* soap_new__tptz__Stop(soap*) allocate and default initialize
/// - _tptz__Stop* soap_new__tptz__Stop(soap*, int num) allocate and default initialize an array
/// - _tptz__Stop* soap_new_req__tptz__Stop(soap*, ...) allocate, set required members
/// - _tptz__Stop* soap_new_set__tptz__Stop(soap*, ...) allocate, set all public members
/// - _tptz__Stop::soap_default(soap*) default initialize members
/// - int soap_read__tptz__Stop(soap*, _tptz__Stop*) deserialize from a stream
/// - int soap_write__tptz__Stop(soap*, _tptz__Stop*) serialize to a stream
/// - _tptz__Stop* _tptz__Stop::soap_dup(soap*) returns deep copy of _tptz__Stop, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__Stop::soap_del() deep deletes _tptz__Stop data members, use only after _tptz__Stop::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__Stop::soap_type() returns SOAP_TYPE__tptz__Stop or derived type identifier
class _tptz__Stop
{ public:
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile that indicate what should be stopped.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Set true when we want to stop ongoing pan and tilt movements.If PanTilt arguments are not present, this command stops these movements.
/// </BLOCKQUOTE></PRE>
///
/// Element "PanTilt" of type xs:boolean.
    bool*                                PanTilt                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Set true when we want to stop ongoing zoom movement.If Zoom arguments are not present, this command stops ongoing zoom movement.
/// </BLOCKQUOTE></PRE>
///
/// Element "Zoom" of type xs:boolean.
    bool*                                Zoom                           0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":StopResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":StopResponse is a complexType.
///
/// @note class _tptz__StopResponse operations:
/// - _tptz__StopResponse* soap_new__tptz__StopResponse(soap*) allocate and default initialize
/// - _tptz__StopResponse* soap_new__tptz__StopResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__StopResponse* soap_new_req__tptz__StopResponse(soap*, ...) allocate, set required members
/// - _tptz__StopResponse* soap_new_set__tptz__StopResponse(soap*, ...) allocate, set all public members
/// - _tptz__StopResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__StopResponse(soap*, _tptz__StopResponse*) deserialize from a stream
/// - int soap_write__tptz__StopResponse(soap*, _tptz__StopResponse*) serialize to a stream
/// - _tptz__StopResponse* _tptz__StopResponse::soap_dup(soap*) returns deep copy of _tptz__StopResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__StopResponse::soap_del() deep deletes _tptz__StopResponse data members, use only after _tptz__StopResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__StopResponse::soap_type() returns SOAP_TYPE__tptz__StopResponse or derived type identifier
class _tptz__StopResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTours
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTours is a complexType.
///
/// @note class _tptz__GetPresetTours operations:
/// - _tptz__GetPresetTours* soap_new__tptz__GetPresetTours(soap*) allocate and default initialize
/// - _tptz__GetPresetTours* soap_new__tptz__GetPresetTours(soap*, int num) allocate and default initialize an array
/// - _tptz__GetPresetTours* soap_new_req__tptz__GetPresetTours(soap*, ...) allocate, set required members
/// - _tptz__GetPresetTours* soap_new_set__tptz__GetPresetTours(soap*, ...) allocate, set all public members
/// - _tptz__GetPresetTours::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetPresetTours(soap*, _tptz__GetPresetTours*) deserialize from a stream
/// - int soap_write__tptz__GetPresetTours(soap*, _tptz__GetPresetTours*) serialize to a stream
/// - _tptz__GetPresetTours* _tptz__GetPresetTours::soap_dup(soap*) returns deep copy of _tptz__GetPresetTours, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetPresetTours::soap_del() deep deletes _tptz__GetPresetTours data members, use only after _tptz__GetPresetTours::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetPresetTours::soap_type() returns SOAP_TYPE__tptz__GetPresetTours or derived type identifier
class _tptz__GetPresetTours
{ public:
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresetToursResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetPresetToursResponse is a complexType.
///
/// @note class _tptz__GetPresetToursResponse operations:
/// - _tptz__GetPresetToursResponse* soap_new__tptz__GetPresetToursResponse(soap*) allocate and default initialize
/// - _tptz__GetPresetToursResponse* soap_new__tptz__GetPresetToursResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__GetPresetToursResponse* soap_new_req__tptz__GetPresetToursResponse(soap*, ...) allocate, set required members
/// - _tptz__GetPresetToursResponse* soap_new_set__tptz__GetPresetToursResponse(soap*, ...) allocate, set all public members
/// - _tptz__GetPresetToursResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetPresetToursResponse(soap*, _tptz__GetPresetToursResponse*) deserialize from a stream
/// - int soap_write__tptz__GetPresetToursResponse(soap*, _tptz__GetPresetToursResponse*) serialize to a stream
/// - _tptz__GetPresetToursResponse* _tptz__GetPresetToursResponse::soap_dup(soap*) returns deep copy of _tptz__GetPresetToursResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetPresetToursResponse::soap_del() deep deletes _tptz__GetPresetToursResponse data members, use only after _tptz__GetPresetToursResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetPresetToursResponse::soap_type() returns SOAP_TYPE__tptz__GetPresetToursResponse or derived type identifier
class _tptz__GetPresetToursResponse
{ public:
/// Vector of tt__PresetTour* of length 0..unbounded.
    std::vector<tt__PresetTour*        > PresetTour                     0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTour
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTour is a complexType.
///
/// @note class _tptz__GetPresetTour operations:
/// - _tptz__GetPresetTour* soap_new__tptz__GetPresetTour(soap*) allocate and default initialize
/// - _tptz__GetPresetTour* soap_new__tptz__GetPresetTour(soap*, int num) allocate and default initialize an array
/// - _tptz__GetPresetTour* soap_new_req__tptz__GetPresetTour(soap*, ...) allocate, set required members
/// - _tptz__GetPresetTour* soap_new_set__tptz__GetPresetTour(soap*, ...) allocate, set all public members
/// - _tptz__GetPresetTour::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetPresetTour(soap*, _tptz__GetPresetTour*) deserialize from a stream
/// - int soap_write__tptz__GetPresetTour(soap*, _tptz__GetPresetTour*) serialize to a stream
/// - _tptz__GetPresetTour* _tptz__GetPresetTour::soap_dup(soap*) returns deep copy of _tptz__GetPresetTour, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetPresetTour::soap_del() deep deletes _tptz__GetPresetTour data members, use only after _tptz__GetPresetTour::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetPresetTour::soap_type() returns SOAP_TYPE__tptz__GetPresetTour or derived type identifier
class _tptz__GetPresetTour
{ public:
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Element "PresetTourToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetTourToken                1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTourResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTourResponse is a complexType.
///
/// @note class _tptz__GetPresetTourResponse operations:
/// - _tptz__GetPresetTourResponse* soap_new__tptz__GetPresetTourResponse(soap*) allocate and default initialize
/// - _tptz__GetPresetTourResponse* soap_new__tptz__GetPresetTourResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__GetPresetTourResponse* soap_new_req__tptz__GetPresetTourResponse(soap*, ...) allocate, set required members
/// - _tptz__GetPresetTourResponse* soap_new_set__tptz__GetPresetTourResponse(soap*, ...) allocate, set all public members
/// - _tptz__GetPresetTourResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetPresetTourResponse(soap*, _tptz__GetPresetTourResponse*) deserialize from a stream
/// - int soap_write__tptz__GetPresetTourResponse(soap*, _tptz__GetPresetTourResponse*) serialize to a stream
/// - _tptz__GetPresetTourResponse* _tptz__GetPresetTourResponse::soap_dup(soap*) returns deep copy of _tptz__GetPresetTourResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetPresetTourResponse::soap_del() deep deletes _tptz__GetPresetTourResponse data members, use only after _tptz__GetPresetTourResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetPresetTourResponse::soap_type() returns SOAP_TYPE__tptz__GetPresetTourResponse or derived type identifier
class _tptz__GetPresetTourResponse
{ public:
/// Element "PresetTour" of type "http://www.onvif.org/ver10/schema":PresetTour.
    tt__PresetTour*                      PresetTour                     1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTourOptions
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTourOptions is a complexType.
///
/// @note class _tptz__GetPresetTourOptions operations:
/// - _tptz__GetPresetTourOptions* soap_new__tptz__GetPresetTourOptions(soap*) allocate and default initialize
/// - _tptz__GetPresetTourOptions* soap_new__tptz__GetPresetTourOptions(soap*, int num) allocate and default initialize an array
/// - _tptz__GetPresetTourOptions* soap_new_req__tptz__GetPresetTourOptions(soap*, ...) allocate, set required members
/// - _tptz__GetPresetTourOptions* soap_new_set__tptz__GetPresetTourOptions(soap*, ...) allocate, set all public members
/// - _tptz__GetPresetTourOptions::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetPresetTourOptions(soap*, _tptz__GetPresetTourOptions*) deserialize from a stream
/// - int soap_write__tptz__GetPresetTourOptions(soap*, _tptz__GetPresetTourOptions*) serialize to a stream
/// - _tptz__GetPresetTourOptions* _tptz__GetPresetTourOptions::soap_dup(soap*) returns deep copy of _tptz__GetPresetTourOptions, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetPresetTourOptions::soap_del() deep deletes _tptz__GetPresetTourOptions data members, use only after _tptz__GetPresetTourOptions::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetPresetTourOptions::soap_type() returns SOAP_TYPE__tptz__GetPresetTourOptions or derived type identifier
class _tptz__GetPresetTourOptions
{ public:
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Element "PresetTourToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  PresetTourToken                0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTourOptionsResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTourOptionsResponse is a complexType.
///
/// @note class _tptz__GetPresetTourOptionsResponse operations:
/// - _tptz__GetPresetTourOptionsResponse* soap_new__tptz__GetPresetTourOptionsResponse(soap*) allocate and default initialize
/// - _tptz__GetPresetTourOptionsResponse* soap_new__tptz__GetPresetTourOptionsResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__GetPresetTourOptionsResponse* soap_new_req__tptz__GetPresetTourOptionsResponse(soap*, ...) allocate, set required members
/// - _tptz__GetPresetTourOptionsResponse* soap_new_set__tptz__GetPresetTourOptionsResponse(soap*, ...) allocate, set all public members
/// - _tptz__GetPresetTourOptionsResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetPresetTourOptionsResponse(soap*, _tptz__GetPresetTourOptionsResponse*) deserialize from a stream
/// - int soap_write__tptz__GetPresetTourOptionsResponse(soap*, _tptz__GetPresetTourOptionsResponse*) serialize to a stream
/// - _tptz__GetPresetTourOptionsResponse* _tptz__GetPresetTourOptionsResponse::soap_dup(soap*) returns deep copy of _tptz__GetPresetTourOptionsResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetPresetTourOptionsResponse::soap_del() deep deletes _tptz__GetPresetTourOptionsResponse data members, use only after _tptz__GetPresetTourOptionsResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetPresetTourOptionsResponse::soap_type() returns SOAP_TYPE__tptz__GetPresetTourOptionsResponse or derived type identifier
class _tptz__GetPresetTourOptionsResponse
{ public:
/// Element "Options" of type "http://www.onvif.org/ver10/schema":PTZPresetTourOptions.
    tt__PTZPresetTourOptions*            Options                        1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":CreatePresetTour
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":CreatePresetTour is a complexType.
///
/// @note class _tptz__CreatePresetTour operations:
/// - _tptz__CreatePresetTour* soap_new__tptz__CreatePresetTour(soap*) allocate and default initialize
/// - _tptz__CreatePresetTour* soap_new__tptz__CreatePresetTour(soap*, int num) allocate and default initialize an array
/// - _tptz__CreatePresetTour* soap_new_req__tptz__CreatePresetTour(soap*, ...) allocate, set required members
/// - _tptz__CreatePresetTour* soap_new_set__tptz__CreatePresetTour(soap*, ...) allocate, set all public members
/// - _tptz__CreatePresetTour::soap_default(soap*) default initialize members
/// - int soap_read__tptz__CreatePresetTour(soap*, _tptz__CreatePresetTour*) deserialize from a stream
/// - int soap_write__tptz__CreatePresetTour(soap*, _tptz__CreatePresetTour*) serialize to a stream
/// - _tptz__CreatePresetTour* _tptz__CreatePresetTour::soap_dup(soap*) returns deep copy of _tptz__CreatePresetTour, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__CreatePresetTour::soap_del() deep deletes _tptz__CreatePresetTour data members, use only after _tptz__CreatePresetTour::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__CreatePresetTour::soap_type() returns SOAP_TYPE__tptz__CreatePresetTour or derived type identifier
class _tptz__CreatePresetTour
{ public:
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":CreatePresetTourResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":CreatePresetTourResponse is a complexType.
///
/// @note class _tptz__CreatePresetTourResponse operations:
/// - _tptz__CreatePresetTourResponse* soap_new__tptz__CreatePresetTourResponse(soap*) allocate and default initialize
/// - _tptz__CreatePresetTourResponse* soap_new__tptz__CreatePresetTourResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__CreatePresetTourResponse* soap_new_req__tptz__CreatePresetTourResponse(soap*, ...) allocate, set required members
/// - _tptz__CreatePresetTourResponse* soap_new_set__tptz__CreatePresetTourResponse(soap*, ...) allocate, set all public members
/// - _tptz__CreatePresetTourResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__CreatePresetTourResponse(soap*, _tptz__CreatePresetTourResponse*) deserialize from a stream
/// - int soap_write__tptz__CreatePresetTourResponse(soap*, _tptz__CreatePresetTourResponse*) serialize to a stream
/// - _tptz__CreatePresetTourResponse* _tptz__CreatePresetTourResponse::soap_dup(soap*) returns deep copy of _tptz__CreatePresetTourResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__CreatePresetTourResponse::soap_del() deep deletes _tptz__CreatePresetTourResponse data members, use only after _tptz__CreatePresetTourResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__CreatePresetTourResponse::soap_type() returns SOAP_TYPE__tptz__CreatePresetTourResponse or derived type identifier
class _tptz__CreatePresetTourResponse
{ public:
/// Element "PresetTourToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetTourToken                1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":ModifyPresetTour
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":ModifyPresetTour is a complexType.
///
/// @note class _tptz__ModifyPresetTour operations:
/// - _tptz__ModifyPresetTour* soap_new__tptz__ModifyPresetTour(soap*) allocate and default initialize
/// - _tptz__ModifyPresetTour* soap_new__tptz__ModifyPresetTour(soap*, int num) allocate and default initialize an array
/// - _tptz__ModifyPresetTour* soap_new_req__tptz__ModifyPresetTour(soap*, ...) allocate, set required members
/// - _tptz__ModifyPresetTour* soap_new_set__tptz__ModifyPresetTour(soap*, ...) allocate, set all public members
/// - _tptz__ModifyPresetTour::soap_default(soap*) default initialize members
/// - int soap_read__tptz__ModifyPresetTour(soap*, _tptz__ModifyPresetTour*) deserialize from a stream
/// - int soap_write__tptz__ModifyPresetTour(soap*, _tptz__ModifyPresetTour*) serialize to a stream
/// - _tptz__ModifyPresetTour* _tptz__ModifyPresetTour::soap_dup(soap*) returns deep copy of _tptz__ModifyPresetTour, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__ModifyPresetTour::soap_del() deep deletes _tptz__ModifyPresetTour data members, use only after _tptz__ModifyPresetTour::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__ModifyPresetTour::soap_type() returns SOAP_TYPE__tptz__ModifyPresetTour or derived type identifier
class _tptz__ModifyPresetTour
{ public:
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Element "PresetTour" of type "http://www.onvif.org/ver10/schema":PresetTour.
    tt__PresetTour*                      PresetTour                     1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":ModifyPresetTourResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":ModifyPresetTourResponse is a complexType.
///
/// @note class _tptz__ModifyPresetTourResponse operations:
/// - _tptz__ModifyPresetTourResponse* soap_new__tptz__ModifyPresetTourResponse(soap*) allocate and default initialize
/// - _tptz__ModifyPresetTourResponse* soap_new__tptz__ModifyPresetTourResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__ModifyPresetTourResponse* soap_new_req__tptz__ModifyPresetTourResponse(soap*, ...) allocate, set required members
/// - _tptz__ModifyPresetTourResponse* soap_new_set__tptz__ModifyPresetTourResponse(soap*, ...) allocate, set all public members
/// - _tptz__ModifyPresetTourResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__ModifyPresetTourResponse(soap*, _tptz__ModifyPresetTourResponse*) deserialize from a stream
/// - int soap_write__tptz__ModifyPresetTourResponse(soap*, _tptz__ModifyPresetTourResponse*) serialize to a stream
/// - _tptz__ModifyPresetTourResponse* _tptz__ModifyPresetTourResponse::soap_dup(soap*) returns deep copy of _tptz__ModifyPresetTourResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__ModifyPresetTourResponse::soap_del() deep deletes _tptz__ModifyPresetTourResponse data members, use only after _tptz__ModifyPresetTourResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__ModifyPresetTourResponse::soap_type() returns SOAP_TYPE__tptz__ModifyPresetTourResponse or derived type identifier
class _tptz__ModifyPresetTourResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":OperatePresetTour
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":OperatePresetTour is a complexType.
///
/// @note class _tptz__OperatePresetTour operations:
/// - _tptz__OperatePresetTour* soap_new__tptz__OperatePresetTour(soap*) allocate and default initialize
/// - _tptz__OperatePresetTour* soap_new__tptz__OperatePresetTour(soap*, int num) allocate and default initialize an array
/// - _tptz__OperatePresetTour* soap_new_req__tptz__OperatePresetTour(soap*, ...) allocate, set required members
/// - _tptz__OperatePresetTour* soap_new_set__tptz__OperatePresetTour(soap*, ...) allocate, set all public members
/// - _tptz__OperatePresetTour::soap_default(soap*) default initialize members
/// - int soap_read__tptz__OperatePresetTour(soap*, _tptz__OperatePresetTour*) deserialize from a stream
/// - int soap_write__tptz__OperatePresetTour(soap*, _tptz__OperatePresetTour*) serialize to a stream
/// - _tptz__OperatePresetTour* _tptz__OperatePresetTour::soap_dup(soap*) returns deep copy of _tptz__OperatePresetTour, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__OperatePresetTour::soap_del() deep deletes _tptz__OperatePresetTour data members, use only after _tptz__OperatePresetTour::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__OperatePresetTour::soap_type() returns SOAP_TYPE__tptz__OperatePresetTour or derived type identifier
class _tptz__OperatePresetTour
{ public:
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Element "PresetTourToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetTourToken                1;	///< Required element.
/// Element "Operation" of type "http://www.onvif.org/ver10/schema":PTZPresetTourOperation.
    enum tt__PTZPresetTourOperation      Operation                      1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":OperatePresetTourResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":OperatePresetTourResponse is a complexType.
///
/// @note class _tptz__OperatePresetTourResponse operations:
/// - _tptz__OperatePresetTourResponse* soap_new__tptz__OperatePresetTourResponse(soap*) allocate and default initialize
/// - _tptz__OperatePresetTourResponse* soap_new__tptz__OperatePresetTourResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__OperatePresetTourResponse* soap_new_req__tptz__OperatePresetTourResponse(soap*, ...) allocate, set required members
/// - _tptz__OperatePresetTourResponse* soap_new_set__tptz__OperatePresetTourResponse(soap*, ...) allocate, set all public members
/// - _tptz__OperatePresetTourResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__OperatePresetTourResponse(soap*, _tptz__OperatePresetTourResponse*) deserialize from a stream
/// - int soap_write__tptz__OperatePresetTourResponse(soap*, _tptz__OperatePresetTourResponse*) serialize to a stream
/// - _tptz__OperatePresetTourResponse* _tptz__OperatePresetTourResponse::soap_dup(soap*) returns deep copy of _tptz__OperatePresetTourResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__OperatePresetTourResponse::soap_del() deep deletes _tptz__OperatePresetTourResponse data members, use only after _tptz__OperatePresetTourResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__OperatePresetTourResponse::soap_type() returns SOAP_TYPE__tptz__OperatePresetTourResponse or derived type identifier
class _tptz__OperatePresetTourResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":RemovePresetTour
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":RemovePresetTour is a complexType.
///
/// @note class _tptz__RemovePresetTour operations:
/// - _tptz__RemovePresetTour* soap_new__tptz__RemovePresetTour(soap*) allocate and default initialize
/// - _tptz__RemovePresetTour* soap_new__tptz__RemovePresetTour(soap*, int num) allocate and default initialize an array
/// - _tptz__RemovePresetTour* soap_new_req__tptz__RemovePresetTour(soap*, ...) allocate, set required members
/// - _tptz__RemovePresetTour* soap_new_set__tptz__RemovePresetTour(soap*, ...) allocate, set all public members
/// - _tptz__RemovePresetTour::soap_default(soap*) default initialize members
/// - int soap_read__tptz__RemovePresetTour(soap*, _tptz__RemovePresetTour*) deserialize from a stream
/// - int soap_write__tptz__RemovePresetTour(soap*, _tptz__RemovePresetTour*) serialize to a stream
/// - _tptz__RemovePresetTour* _tptz__RemovePresetTour::soap_dup(soap*) returns deep copy of _tptz__RemovePresetTour, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__RemovePresetTour::soap_del() deep deletes _tptz__RemovePresetTour data members, use only after _tptz__RemovePresetTour::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__RemovePresetTour::soap_type() returns SOAP_TYPE__tptz__RemovePresetTour or derived type identifier
class _tptz__RemovePresetTour
{ public:
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Element "PresetTourToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetTourToken                1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":RemovePresetTourResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":RemovePresetTourResponse is a complexType.
///
/// @note class _tptz__RemovePresetTourResponse operations:
/// - _tptz__RemovePresetTourResponse* soap_new__tptz__RemovePresetTourResponse(soap*) allocate and default initialize
/// - _tptz__RemovePresetTourResponse* soap_new__tptz__RemovePresetTourResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__RemovePresetTourResponse* soap_new_req__tptz__RemovePresetTourResponse(soap*, ...) allocate, set required members
/// - _tptz__RemovePresetTourResponse* soap_new_set__tptz__RemovePresetTourResponse(soap*, ...) allocate, set all public members
/// - _tptz__RemovePresetTourResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__RemovePresetTourResponse(soap*, _tptz__RemovePresetTourResponse*) deserialize from a stream
/// - int soap_write__tptz__RemovePresetTourResponse(soap*, _tptz__RemovePresetTourResponse*) serialize to a stream
/// - _tptz__RemovePresetTourResponse* _tptz__RemovePresetTourResponse::soap_dup(soap*) returns deep copy of _tptz__RemovePresetTourResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__RemovePresetTourResponse::soap_del() deep deletes _tptz__RemovePresetTourResponse data members, use only after _tptz__RemovePresetTourResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__RemovePresetTourResponse::soap_type() returns SOAP_TYPE__tptz__RemovePresetTourResponse or derived type identifier
class _tptz__RemovePresetTourResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetCompatibleConfigurations
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetCompatibleConfigurations is a complexType.
///
/// @note class _tptz__GetCompatibleConfigurations operations:
/// - _tptz__GetCompatibleConfigurations* soap_new__tptz__GetCompatibleConfigurations(soap*) allocate and default initialize
/// - _tptz__GetCompatibleConfigurations* soap_new__tptz__GetCompatibleConfigurations(soap*, int num) allocate and default initialize an array
/// - _tptz__GetCompatibleConfigurations* soap_new_req__tptz__GetCompatibleConfigurations(soap*, ...) allocate, set required members
/// - _tptz__GetCompatibleConfigurations* soap_new_set__tptz__GetCompatibleConfigurations(soap*, ...) allocate, set all public members
/// - _tptz__GetCompatibleConfigurations::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetCompatibleConfigurations(soap*, _tptz__GetCompatibleConfigurations*) deserialize from a stream
/// - int soap_write__tptz__GetCompatibleConfigurations(soap*, _tptz__GetCompatibleConfigurations*) serialize to a stream
/// - _tptz__GetCompatibleConfigurations* _tptz__GetCompatibleConfigurations::soap_dup(soap*) returns deep copy of _tptz__GetCompatibleConfigurations, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetCompatibleConfigurations::soap_del() deep deletes _tptz__GetCompatibleConfigurations data members, use only after _tptz__GetCompatibleConfigurations::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetCompatibleConfigurations::soap_type() returns SOAP_TYPE__tptz__GetCompatibleConfigurations or derived type identifier
class _tptz__GetCompatibleConfigurations
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the token of an existing media profile the configurations shall be compatible with.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetCompatibleConfigurationsResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetCompatibleConfigurationsResponse is a complexType.
///
/// @note class _tptz__GetCompatibleConfigurationsResponse operations:
/// - _tptz__GetCompatibleConfigurationsResponse* soap_new__tptz__GetCompatibleConfigurationsResponse(soap*) allocate and default initialize
/// - _tptz__GetCompatibleConfigurationsResponse* soap_new__tptz__GetCompatibleConfigurationsResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__GetCompatibleConfigurationsResponse* soap_new_req__tptz__GetCompatibleConfigurationsResponse(soap*, ...) allocate, set required members
/// - _tptz__GetCompatibleConfigurationsResponse* soap_new_set__tptz__GetCompatibleConfigurationsResponse(soap*, ...) allocate, set all public members
/// - _tptz__GetCompatibleConfigurationsResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetCompatibleConfigurationsResponse(soap*, _tptz__GetCompatibleConfigurationsResponse*) deserialize from a stream
/// - int soap_write__tptz__GetCompatibleConfigurationsResponse(soap*, _tptz__GetCompatibleConfigurationsResponse*) serialize to a stream
/// - _tptz__GetCompatibleConfigurationsResponse* _tptz__GetCompatibleConfigurationsResponse::soap_dup(soap*) returns deep copy of _tptz__GetCompatibleConfigurationsResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetCompatibleConfigurationsResponse::soap_del() deep deletes _tptz__GetCompatibleConfigurationsResponse data members, use only after _tptz__GetCompatibleConfigurationsResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetCompatibleConfigurationsResponse::soap_type() returns SOAP_TYPE__tptz__GetCompatibleConfigurationsResponse or derived type identifier
class _tptz__GetCompatibleConfigurationsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   A list of all existing PTZConfigurations on the NVT that is suitable to be added to the addressed media profile.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__PTZConfiguration* of length 0..unbounded.
    std::vector<tt__PTZConfiguration*  > PTZConfiguration               0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":MoveAndStartTracking
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":MoveAndStartTracking is a complexType.
///
/// @note class _tptz__MoveAndStartTracking operations:
/// - _tptz__MoveAndStartTracking* soap_new__tptz__MoveAndStartTracking(soap*) allocate and default initialize
/// - _tptz__MoveAndStartTracking* soap_new__tptz__MoveAndStartTracking(soap*, int num) allocate and default initialize an array
/// - _tptz__MoveAndStartTracking* soap_new_req__tptz__MoveAndStartTracking(soap*, ...) allocate, set required members
/// - _tptz__MoveAndStartTracking* soap_new_set__tptz__MoveAndStartTracking(soap*, ...) allocate, set all public members
/// - _tptz__MoveAndStartTracking::soap_default(soap*) default initialize members
/// - int soap_read__tptz__MoveAndStartTracking(soap*, _tptz__MoveAndStartTracking*) deserialize from a stream
/// - int soap_write__tptz__MoveAndStartTracking(soap*, _tptz__MoveAndStartTracking*) serialize to a stream
/// - _tptz__MoveAndStartTracking* _tptz__MoveAndStartTracking::soap_dup(soap*) returns deep copy of _tptz__MoveAndStartTracking, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__MoveAndStartTracking::soap_del() deep deletes _tptz__MoveAndStartTracking data members, use only after _tptz__MoveAndStartTracking::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__MoveAndStartTracking::soap_type() returns SOAP_TYPE__tptz__MoveAndStartTracking or derived type identifier
class _tptz__MoveAndStartTracking
{ public:
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile where the operation should take place.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A preset token.
/// </BLOCKQUOTE></PRE>
///
/// Element "PresetToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  PresetToken                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The geolocation of the target position.
/// </BLOCKQUOTE></PRE>
///
/// Element "GeoLocation" of type "http://www.onvif.org/ver10/schema":GeoLocation.
    tt__GeoLocation*                     GeoLocation                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   A Position vector specifying the absolute target position.
/// </BLOCKQUOTE></PRE>
///
/// Element "TargetPosition" of type "http://www.onvif.org/ver10/schema":PTZVector.
    tt__PTZVector*                       TargetPosition                 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Speed vector specifying the velocity of pan, tilt and zoom.
/// </BLOCKQUOTE></PRE>
///
/// Element "Speed" of type "http://www.onvif.org/ver10/schema":PTZSpeed.
    tt__PTZSpeed*                        Speed                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Object ID of the object to track.
/// </BLOCKQUOTE></PRE>
///
/// Element "ObjectID" of type xs:integer.
    xsd__integer*                        ObjectID                       0;	///< Optional element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":MoveAndStartTrackingResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":MoveAndStartTrackingResponse is a complexType.
///
/// @note class _tptz__MoveAndStartTrackingResponse operations:
/// - _tptz__MoveAndStartTrackingResponse* soap_new__tptz__MoveAndStartTrackingResponse(soap*) allocate and default initialize
/// - _tptz__MoveAndStartTrackingResponse* soap_new__tptz__MoveAndStartTrackingResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__MoveAndStartTrackingResponse* soap_new_req__tptz__MoveAndStartTrackingResponse(soap*, ...) allocate, set required members
/// - _tptz__MoveAndStartTrackingResponse* soap_new_set__tptz__MoveAndStartTrackingResponse(soap*, ...) allocate, set all public members
/// - _tptz__MoveAndStartTrackingResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__MoveAndStartTrackingResponse(soap*, _tptz__MoveAndStartTrackingResponse*) deserialize from a stream
/// - int soap_write__tptz__MoveAndStartTrackingResponse(soap*, _tptz__MoveAndStartTrackingResponse*) serialize to a stream
/// - _tptz__MoveAndStartTrackingResponse* _tptz__MoveAndStartTrackingResponse::soap_dup(soap*) returns deep copy of _tptz__MoveAndStartTrackingResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__MoveAndStartTrackingResponse::soap_del() deep deletes _tptz__MoveAndStartTrackingResponse data members, use only after _tptz__MoveAndStartTrackingResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__MoveAndStartTrackingResponse::soap_type() returns SOAP_TYPE__tptz__MoveAndStartTrackingResponse or derived type identifier
class _tptz__MoveAndStartTrackingResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/schema":DeviceEntity is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Base class for physical entities like inputs and outputs.
/// </BLOCKQUOTE></PRE>
///
/// This type is extended by:
/// - "http://www.onvif.org/ver10/schema":VideoSource (not used and removed, retain with option -Ow4)
/// - "http://www.onvif.org/ver10/schema":AudioSource (not used and removed, retain with option -Ow4)
/// - "http://www.onvif.org/ver10/schema":VideoOutput (not used and removed, retain with option -Ow4)
/// - "http://www.onvif.org/ver10/schema":AudioOutput (not used and removed, retain with option -Ow4)
/// - "http://www.onvif.org/ver10/schema":NetworkInterface (not used and removed, retain with option -Ow4)
/// - "http://www.onvif.org/ver10/schema":RelayOutput (not used and removed, retain with option -Ow4)
/// - "http://www.onvif.org/ver10/schema":DigitalInput (not used and removed, retain with option -Ow4)
/// - "http://www.onvif.org/ver10/schema":PTZNode as tt__PTZNode
/// - "http://www.onvif.org/ver10/schema":OSDConfiguration (not used and removed, retain with option -Ow4)
///
/// @note class tt__DeviceEntity operations:
/// - tt__DeviceEntity* soap_new_tt__DeviceEntity(soap*) allocate and default initialize
/// - tt__DeviceEntity* soap_new_tt__DeviceEntity(soap*, int num) allocate and default initialize an array
/// - tt__DeviceEntity* soap_new_req_tt__DeviceEntity(soap*, ...) allocate, set required members
/// - tt__DeviceEntity* soap_new_set_tt__DeviceEntity(soap*, ...) allocate, set all public members
/// - tt__DeviceEntity::soap_default(soap*) default initialize members
/// - int soap_read_tt__DeviceEntity(soap*, tt__DeviceEntity*) deserialize from a stream
/// - int soap_write_tt__DeviceEntity(soap*, tt__DeviceEntity*) serialize to a stream
/// - tt__DeviceEntity* tt__DeviceEntity::soap_dup(soap*) returns deep copy of tt__DeviceEntity, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__DeviceEntity::soap_del() deep deletes tt__DeviceEntity data members, use only after tt__DeviceEntity::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__DeviceEntity::soap_type() returns SOAP_TYPE_tt__DeviceEntity or derived type identifier
class tt__DeviceEntity
{ public:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

// Optimization: complexType "http://www.onvif.org/ver10/schema":IntRectangle is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":IntRectangleRange is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":FloatRange is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Range of values greater equal Min value and less equal Max value.
/// </BLOCKQUOTE></PRE>
///
/// @note class tt__FloatRange operations:
/// - tt__FloatRange* soap_new_tt__FloatRange(soap*) allocate and default initialize
/// - tt__FloatRange* soap_new_tt__FloatRange(soap*, int num) allocate and default initialize an array
/// - tt__FloatRange* soap_new_req_tt__FloatRange(soap*, ...) allocate, set required members
/// - tt__FloatRange* soap_new_set_tt__FloatRange(soap*, ...) allocate, set all public members
/// - tt__FloatRange::soap_default(soap*) default initialize members
/// - int soap_read_tt__FloatRange(soap*, tt__FloatRange*) deserialize from a stream
/// - int soap_write_tt__FloatRange(soap*, tt__FloatRange*) serialize to a stream
/// - tt__FloatRange* tt__FloatRange::soap_dup(soap*) returns deep copy of tt__FloatRange, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__FloatRange::soap_del() deep deletes tt__FloatRange data members, use only after tt__FloatRange::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__FloatRange::soap_type() returns SOAP_TYPE_tt__FloatRange or derived type identifier
class tt__FloatRange
{ public:
/// Element "Min" of type xs:float.
    float                                Min                            1;	///< Required element.
/// Element "Max" of type xs:float.
    float                                Max                            1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":DurationRange is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Range of duration greater equal Min duration and less equal Max duration.
/// </BLOCKQUOTE></PRE>
///
/// @note class tt__DurationRange operations:
/// - tt__DurationRange* soap_new_tt__DurationRange(soap*) allocate and default initialize
/// - tt__DurationRange* soap_new_tt__DurationRange(soap*, int num) allocate and default initialize an array
/// - tt__DurationRange* soap_new_req_tt__DurationRange(soap*, ...) allocate, set required members
/// - tt__DurationRange* soap_new_set_tt__DurationRange(soap*, ...) allocate, set all public members
/// - tt__DurationRange::soap_default(soap*) default initialize members
/// - int soap_read_tt__DurationRange(soap*, tt__DurationRange*) deserialize from a stream
/// - int soap_write_tt__DurationRange(soap*, tt__DurationRange*) serialize to a stream
/// - tt__DurationRange* tt__DurationRange::soap_dup(soap*) returns deep copy of tt__DurationRange, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__DurationRange::soap_del() deep deletes tt__DurationRange data members, use only after tt__DurationRange::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__DurationRange::soap_type() returns SOAP_TYPE_tt__DurationRange or derived type identifier
class tt__DurationRange
{ public:
/// Element "Min" of type xs:duration.
    xsd__duration                        Min                            1;	///< Required element.
/// Element "Max" of type xs:duration.
    xsd__duration                        Max                            1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

// Optimization: complexType "http://www.onvif.org/ver10/schema":IntItems is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FloatItems is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AnyHolder is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoSourceExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoSourceExtension2 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Profile is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ProfileExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ProfileExtension2 is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":ConfigurationEntity is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Base type defining the common properties of a configuration.
/// </BLOCKQUOTE></PRE>
///
/// This type is extended by:
/// - "http://www.onvif.org/ver10/schema":VideoSourceConfiguration (not used and removed, retain with option -Ow4)
/// - "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration (not used and removed, retain with option -Ow4)
/// - "http://www.onvif.org/ver10/schema":VideoEncoder2Configuration (not used and removed, retain with option -Ow4)
/// - "http://www.onvif.org/ver10/schema":AudioSourceConfiguration (not used and removed, retain with option -Ow4)
/// - "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration (not used and removed, retain with option -Ow4)
/// - "http://www.onvif.org/ver10/schema":AudioEncoder2Configuration (not used and removed, retain with option -Ow4)
/// - "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration (not used and removed, retain with option -Ow4)
/// - "http://www.onvif.org/ver10/schema":MetadataConfiguration (not used and removed, retain with option -Ow4)
/// - "http://www.onvif.org/ver10/schema":VideoOutputConfiguration (not used and removed, retain with option -Ow4)
/// - "http://www.onvif.org/ver10/schema":AudioOutputConfiguration (not used and removed, retain with option -Ow4)
/// - "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration (not used and removed, retain with option -Ow4)
/// - "http://www.onvif.org/ver10/schema":PTZConfiguration as tt__PTZConfiguration
/// - "http://www.onvif.org/ver10/schema":AnalyticsEngine (not used and removed, retain with option -Ow4)
/// - "http://www.onvif.org/ver10/schema":AnalyticsEngineInput (not used and removed, retain with option -Ow4)
/// - "http://www.onvif.org/ver10/schema":AnalyticsEngineControl (not used and removed, retain with option -Ow4)
///
/// @note class tt__ConfigurationEntity operations:
/// - tt__ConfigurationEntity* soap_new_tt__ConfigurationEntity(soap*) allocate and default initialize
/// - tt__ConfigurationEntity* soap_new_tt__ConfigurationEntity(soap*, int num) allocate and default initialize an array
/// - tt__ConfigurationEntity* soap_new_req_tt__ConfigurationEntity(soap*, ...) allocate, set required members
/// - tt__ConfigurationEntity* soap_new_set_tt__ConfigurationEntity(soap*, ...) allocate, set all public members
/// - tt__ConfigurationEntity::soap_default(soap*) default initialize members
/// - int soap_read_tt__ConfigurationEntity(soap*, tt__ConfigurationEntity*) deserialize from a stream
/// - int soap_write_tt__ConfigurationEntity(soap*, tt__ConfigurationEntity*) serialize to a stream
/// - tt__ConfigurationEntity* tt__ConfigurationEntity::soap_dup(soap*) returns deep copy of tt__ConfigurationEntity, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__ConfigurationEntity::soap_del() deep deletes tt__ConfigurationEntity data members, use only after tt__ConfigurationEntity::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__ConfigurationEntity::soap_type() returns SOAP_TYPE_tt__ConfigurationEntity or derived type identifier
class tt__ConfigurationEntity
{ public:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// </BLOCKQUOTE></PRE>
///
/// Element "UseCount" of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely references this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoSourceConfigurationExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoSourceConfigurationExtension2 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Rotate is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RotateExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":LensProjection is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":LensOffset is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":LensDescription is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptionsExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptionsExtension2 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RotateOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RotateOptionsExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":SceneOrientation is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoResolution is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoRateControl is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Mpeg4Configuration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":H264Configuration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoEncoderConfigurationOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoEncoderOptionsExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoEncoderOptionsExtension2 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":JpegOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Mpeg4Options is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":H264Options is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoResolution2 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoRateControl2 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoEncoder2ConfigurationOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AudioSourceConfigurationOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AudioSourceOptionsExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AudioEncoderConfigurationOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AudioEncoderConfigurationOption is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AudioEncoder2ConfigurationOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MetadataConfigurationExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZFilter is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":EventSubscription is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MetadataConfigurationOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MetadataConfigurationOptionsExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MetadataConfigurationOptionsExtension2 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZStatusFilterOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZStatusFilterOptionsExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoOutputExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoOutputConfigurationOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoDecoderConfigurationOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":H264DecOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":JpegDecOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Mpeg4DecOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoDecoderConfigurationOptionsExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AudioOutputConfigurationOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AudioDecoderConfigurationOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":G711DecOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AACDecOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":G726DecOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AudioDecoderConfigurationOptionsExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MulticastConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":StreamSetup is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Transport is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MediaUri is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Scope is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":NetworkInterfaceExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Dot3Configuration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":NetworkInterfaceExtension2 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":NetworkInterfaceLink is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":NetworkInterfaceConnectionSetting is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":NetworkInterfaceInfo is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":IPv6NetworkInterface is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":IPv4NetworkInterface is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":IPv4Configuration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":IPv6Configuration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":IPv6ConfigurationExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":NetworkProtocol is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":NetworkProtocolExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":NetworkHost is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":NetworkHostExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":IPAddress is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PrefixedIPv4Address is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PrefixedIPv6Address is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":HostnameInformation is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":HostnameInformationExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":DNSInformation is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":DNSInformationExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":NTPInformation is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":NTPInformationExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":DynamicDNSInformation is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":DynamicDNSInformationExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfigurationExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":IPv6NetworkInterfaceSetConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":IPv4NetworkInterfaceSetConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":NetworkGateway is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":NetworkZeroConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":NetworkZeroConfigurationExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":NetworkZeroConfigurationExtension2 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":IPAddressFilter is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":IPAddressFilterExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Dot11Configuration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Dot11SecurityConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Dot11SecurityConfigurationExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Dot11PSKSet is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Dot11PSKSetExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfigurationExtension2 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Dot11Capabilities is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Dot11Status is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Dot11AvailableNetworks is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Dot11AvailableNetworksExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Capabilities is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":CapabilitiesExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":CapabilitiesExtension2 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AnalyticsCapabilities is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":DeviceCapabilities is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":DeviceCapabilitiesExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":EventCapabilities is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":IOCapabilities is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":IOCapabilitiesExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":IOCapabilitiesExtension2 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MediaCapabilities is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MediaCapabilitiesExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RealTimeStreamingCapabilities is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RealTimeStreamingCapabilitiesExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ProfileCapabilities is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":NetworkCapabilities is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":NetworkCapabilitiesExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":NetworkCapabilitiesExtension2 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":SecurityCapabilities is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":SecurityCapabilitiesExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":SecurityCapabilitiesExtension2 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":SystemCapabilities is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":SystemCapabilitiesExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":SystemCapabilitiesExtension2 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":OnvifVersion is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImagingCapabilities is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZCapabilities is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":DeviceIOCapabilities is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":DisplayCapabilities is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RecordingCapabilities is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":SearchCapabilities is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ReplayCapabilities is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ReceiverCapabilities is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AnalyticsDeviceCapabilities is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AnalyticsDeviceExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":SystemLog is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":SupportInformation is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":BinaryData is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AttachmentData is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":BackupFile is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":SystemLogUriList is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":SystemLogUri is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":SystemDateTime is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":SystemDateTimeExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":DateTime is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Date is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Time is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":TimeZone is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RemoteUser is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":User is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":UserExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":CertificateGenerationParameters is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":CertificateGenerationParametersExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Certificate is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":CertificateStatus is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":CertificateWithPrivateKey is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":CertificateInformation is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":CertificateInformationExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Dot1XConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Dot1XConfigurationExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":EAPMethodConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":EapMethodExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":TLSConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":GenericEapPwdConfigurationExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RelayOutputSettings is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":PTZNodeExtension is a complexType.
///
/// @note class tt__PTZNodeExtension operations:
/// - tt__PTZNodeExtension* soap_new_tt__PTZNodeExtension(soap*) allocate and default initialize
/// - tt__PTZNodeExtension* soap_new_tt__PTZNodeExtension(soap*, int num) allocate and default initialize an array
/// - tt__PTZNodeExtension* soap_new_req_tt__PTZNodeExtension(soap*, ...) allocate, set required members
/// - tt__PTZNodeExtension* soap_new_set_tt__PTZNodeExtension(soap*, ...) allocate, set all public members
/// - tt__PTZNodeExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZNodeExtension(soap*, tt__PTZNodeExtension*) deserialize from a stream
/// - int soap_write_tt__PTZNodeExtension(soap*, tt__PTZNodeExtension*) serialize to a stream
/// - tt__PTZNodeExtension* tt__PTZNodeExtension::soap_dup(soap*) returns deep copy of tt__PTZNodeExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZNodeExtension::soap_del() deep deletes tt__PTZNodeExtension data members, use only after tt__PTZNodeExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZNodeExtension::soap_type() returns SOAP_TYPE_tt__PTZNodeExtension or derived type identifier
class tt__PTZNodeExtension
{ public:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   Detail of supported Preset Tour feature.
/// </BLOCKQUOTE></PRE>
///
/// Element "SupportedPresetTour" of type "http://www.onvif.org/ver10/schema":PTZPresetTourSupported.
    tt__PTZPresetTourSupported*          SupportedPresetTour            0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PTZNodeExtension2.
    tt__PTZNodeExtension2*               Extension                      0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZNodeExtension2 is a complexType.
///
/// @note class tt__PTZNodeExtension2 operations:
/// - tt__PTZNodeExtension2* soap_new_tt__PTZNodeExtension2(soap*) allocate and default initialize
/// - tt__PTZNodeExtension2* soap_new_tt__PTZNodeExtension2(soap*, int num) allocate and default initialize an array
/// - tt__PTZNodeExtension2* soap_new_req_tt__PTZNodeExtension2(soap*, ...) allocate, set required members
/// - tt__PTZNodeExtension2* soap_new_set_tt__PTZNodeExtension2(soap*, ...) allocate, set all public members
/// - tt__PTZNodeExtension2::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZNodeExtension2(soap*, tt__PTZNodeExtension2*) deserialize from a stream
/// - int soap_write_tt__PTZNodeExtension2(soap*, tt__PTZNodeExtension2*) serialize to a stream
/// - tt__PTZNodeExtension2* tt__PTZNodeExtension2::soap_dup(soap*) returns deep copy of tt__PTZNodeExtension2, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZNodeExtension2::soap_del() deep deletes tt__PTZNodeExtension2 data members, use only after tt__PTZNodeExtension2::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZNodeExtension2::soap_type() returns SOAP_TYPE_tt__PTZNodeExtension2 or derived type identifier
class tt__PTZNodeExtension2
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourSupported is a complexType.
///
/// @note class tt__PTZPresetTourSupported operations:
/// - tt__PTZPresetTourSupported* soap_new_tt__PTZPresetTourSupported(soap*) allocate and default initialize
/// - tt__PTZPresetTourSupported* soap_new_tt__PTZPresetTourSupported(soap*, int num) allocate and default initialize an array
/// - tt__PTZPresetTourSupported* soap_new_req_tt__PTZPresetTourSupported(soap*, ...) allocate, set required members
/// - tt__PTZPresetTourSupported* soap_new_set_tt__PTZPresetTourSupported(soap*, ...) allocate, set all public members
/// - tt__PTZPresetTourSupported::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZPresetTourSupported(soap*, tt__PTZPresetTourSupported*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourSupported(soap*, tt__PTZPresetTourSupported*) serialize to a stream
/// - tt__PTZPresetTourSupported* tt__PTZPresetTourSupported::soap_dup(soap*) returns deep copy of tt__PTZPresetTourSupported, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZPresetTourSupported::soap_del() deep deletes tt__PTZPresetTourSupported data members, use only after tt__PTZPresetTourSupported::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZPresetTourSupported::soap_type() returns SOAP_TYPE_tt__PTZPresetTourSupported or derived type identifier
class tt__PTZPresetTourSupported
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates number of preset tours that can be created. Required preset tour operations shall be available for this PTZ Node if one or more preset tour is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaximumNumberOfPresetTours" of type xs:int.
    int                                  MaximumNumberOfPresetTours     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates which preset tour operations are available for this PTZ Node.
/// </BLOCKQUOTE></PRE>
///
/// Vector of enum tt__PTZPresetTourOperation of length 0..unbounded.
    std::vector<enum tt__PTZPresetTourOperation> PTZPresetTourOperation         0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PTZPresetTourSupportedExtension.
    tt__PTZPresetTourSupportedExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourSupportedExtension is a complexType.
///
/// @note class tt__PTZPresetTourSupportedExtension operations:
/// - tt__PTZPresetTourSupportedExtension* soap_new_tt__PTZPresetTourSupportedExtension(soap*) allocate and default initialize
/// - tt__PTZPresetTourSupportedExtension* soap_new_tt__PTZPresetTourSupportedExtension(soap*, int num) allocate and default initialize an array
/// - tt__PTZPresetTourSupportedExtension* soap_new_req_tt__PTZPresetTourSupportedExtension(soap*, ...) allocate, set required members
/// - tt__PTZPresetTourSupportedExtension* soap_new_set_tt__PTZPresetTourSupportedExtension(soap*, ...) allocate, set all public members
/// - tt__PTZPresetTourSupportedExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZPresetTourSupportedExtension(soap*, tt__PTZPresetTourSupportedExtension*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourSupportedExtension(soap*, tt__PTZPresetTourSupportedExtension*) serialize to a stream
/// - tt__PTZPresetTourSupportedExtension* tt__PTZPresetTourSupportedExtension::soap_dup(soap*) returns deep copy of tt__PTZPresetTourSupportedExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZPresetTourSupportedExtension::soap_del() deep deletes tt__PTZPresetTourSupportedExtension data members, use only after tt__PTZPresetTourSupportedExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZPresetTourSupportedExtension::soap_type() returns SOAP_TYPE_tt__PTZPresetTourSupportedExtension or derived type identifier
class tt__PTZPresetTourSupportedExtension
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZConfigurationExtension is a complexType.
///
/// @note class tt__PTZConfigurationExtension operations:
/// - tt__PTZConfigurationExtension* soap_new_tt__PTZConfigurationExtension(soap*) allocate and default initialize
/// - tt__PTZConfigurationExtension* soap_new_tt__PTZConfigurationExtension(soap*, int num) allocate and default initialize an array
/// - tt__PTZConfigurationExtension* soap_new_req_tt__PTZConfigurationExtension(soap*, ...) allocate, set required members
/// - tt__PTZConfigurationExtension* soap_new_set_tt__PTZConfigurationExtension(soap*, ...) allocate, set all public members
/// - tt__PTZConfigurationExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZConfigurationExtension(soap*, tt__PTZConfigurationExtension*) deserialize from a stream
/// - int soap_write_tt__PTZConfigurationExtension(soap*, tt__PTZConfigurationExtension*) serialize to a stream
/// - tt__PTZConfigurationExtension* tt__PTZConfigurationExtension::soap_dup(soap*) returns deep copy of tt__PTZConfigurationExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZConfigurationExtension::soap_del() deep deletes tt__PTZConfigurationExtension data members, use only after tt__PTZConfigurationExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZConfigurationExtension::soap_type() returns SOAP_TYPE_tt__PTZConfigurationExtension or derived type identifier
class tt__PTZConfigurationExtension
{ public:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure PT Control Direction related features.
/// </BLOCKQUOTE></PRE>
///
/// Element "PTControlDirection" of type "http://www.onvif.org/ver10/schema":PTControlDirection.
    tt__PTControlDirection*              PTControlDirection             0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PTZConfigurationExtension2.
    tt__PTZConfigurationExtension2*      Extension                      0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZConfigurationExtension2 is a complexType.
///
/// @note class tt__PTZConfigurationExtension2 operations:
/// - tt__PTZConfigurationExtension2* soap_new_tt__PTZConfigurationExtension2(soap*) allocate and default initialize
/// - tt__PTZConfigurationExtension2* soap_new_tt__PTZConfigurationExtension2(soap*, int num) allocate and default initialize an array
/// - tt__PTZConfigurationExtension2* soap_new_req_tt__PTZConfigurationExtension2(soap*, ...) allocate, set required members
/// - tt__PTZConfigurationExtension2* soap_new_set_tt__PTZConfigurationExtension2(soap*, ...) allocate, set all public members
/// - tt__PTZConfigurationExtension2::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZConfigurationExtension2(soap*, tt__PTZConfigurationExtension2*) deserialize from a stream
/// - int soap_write_tt__PTZConfigurationExtension2(soap*, tt__PTZConfigurationExtension2*) serialize to a stream
/// - tt__PTZConfigurationExtension2* tt__PTZConfigurationExtension2::soap_dup(soap*) returns deep copy of tt__PTZConfigurationExtension2, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZConfigurationExtension2::soap_del() deep deletes tt__PTZConfigurationExtension2 data members, use only after tt__PTZConfigurationExtension2::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZConfigurationExtension2::soap_type() returns SOAP_TYPE_tt__PTZConfigurationExtension2 or derived type identifier
class tt__PTZConfigurationExtension2
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTControlDirection is a complexType.
///
/// @note class tt__PTControlDirection operations:
/// - tt__PTControlDirection* soap_new_tt__PTControlDirection(soap*) allocate and default initialize
/// - tt__PTControlDirection* soap_new_tt__PTControlDirection(soap*, int num) allocate and default initialize an array
/// - tt__PTControlDirection* soap_new_req_tt__PTControlDirection(soap*, ...) allocate, set required members
/// - tt__PTControlDirection* soap_new_set_tt__PTControlDirection(soap*, ...) allocate, set all public members
/// - tt__PTControlDirection::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTControlDirection(soap*, tt__PTControlDirection*) deserialize from a stream
/// - int soap_write_tt__PTControlDirection(soap*, tt__PTControlDirection*) serialize to a stream
/// - tt__PTControlDirection* tt__PTControlDirection::soap_dup(soap*) returns deep copy of tt__PTControlDirection, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTControlDirection::soap_del() deep deletes tt__PTControlDirection data members, use only after tt__PTControlDirection::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTControlDirection::soap_type() returns SOAP_TYPE_tt__PTControlDirection or derived type identifier
class tt__PTControlDirection
{ public:
/// <PRE><BLOCKQUOTE>
///   Optional element to configure related parameters for E-Flip.
/// </BLOCKQUOTE></PRE>
///
/// Element "EFlip" of type "http://www.onvif.org/ver10/schema":EFlip.
    tt__EFlip*                           EFlip                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure related parameters for reversing of PT Control Direction.
/// </BLOCKQUOTE></PRE>
///
/// Element "Reverse" of type "http://www.onvif.org/ver10/schema":Reverse.
    tt__Reverse*                         Reverse                        0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PTControlDirectionExtension.
    tt__PTControlDirectionExtension*     Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTControlDirectionExtension is a complexType.
///
/// @note class tt__PTControlDirectionExtension operations:
/// - tt__PTControlDirectionExtension* soap_new_tt__PTControlDirectionExtension(soap*) allocate and default initialize
/// - tt__PTControlDirectionExtension* soap_new_tt__PTControlDirectionExtension(soap*, int num) allocate and default initialize an array
/// - tt__PTControlDirectionExtension* soap_new_req_tt__PTControlDirectionExtension(soap*, ...) allocate, set required members
/// - tt__PTControlDirectionExtension* soap_new_set_tt__PTControlDirectionExtension(soap*, ...) allocate, set all public members
/// - tt__PTControlDirectionExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTControlDirectionExtension(soap*, tt__PTControlDirectionExtension*) deserialize from a stream
/// - int soap_write_tt__PTControlDirectionExtension(soap*, tt__PTControlDirectionExtension*) serialize to a stream
/// - tt__PTControlDirectionExtension* tt__PTControlDirectionExtension::soap_dup(soap*) returns deep copy of tt__PTControlDirectionExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTControlDirectionExtension::soap_del() deep deletes tt__PTControlDirectionExtension data members, use only after tt__PTControlDirectionExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTControlDirectionExtension::soap_type() returns SOAP_TYPE_tt__PTControlDirectionExtension or derived type identifier
class tt__PTControlDirectionExtension
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":EFlip is a complexType.
///
/// @note class tt__EFlip operations:
/// - tt__EFlip* soap_new_tt__EFlip(soap*) allocate and default initialize
/// - tt__EFlip* soap_new_tt__EFlip(soap*, int num) allocate and default initialize an array
/// - tt__EFlip* soap_new_req_tt__EFlip(soap*, ...) allocate, set required members
/// - tt__EFlip* soap_new_set_tt__EFlip(soap*, ...) allocate, set all public members
/// - tt__EFlip::soap_default(soap*) default initialize members
/// - int soap_read_tt__EFlip(soap*, tt__EFlip*) deserialize from a stream
/// - int soap_write_tt__EFlip(soap*, tt__EFlip*) serialize to a stream
/// - tt__EFlip* tt__EFlip::soap_dup(soap*) returns deep copy of tt__EFlip, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__EFlip::soap_del() deep deletes tt__EFlip data members, use only after tt__EFlip::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__EFlip::soap_type() returns SOAP_TYPE_tt__EFlip or derived type identifier
class tt__EFlip
{ public:
/// <PRE><BLOCKQUOTE>
///   Parameter to enable/disable E-Flip feature.
/// </BLOCKQUOTE></PRE>
///
/// Element "Mode" of type "http://www.onvif.org/ver10/schema":EFlipMode.
    enum tt__EFlipMode                   Mode                           1;	///< Required element.
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Reverse is a complexType.
///
/// @note class tt__Reverse operations:
/// - tt__Reverse* soap_new_tt__Reverse(soap*) allocate and default initialize
/// - tt__Reverse* soap_new_tt__Reverse(soap*, int num) allocate and default initialize an array
/// - tt__Reverse* soap_new_req_tt__Reverse(soap*, ...) allocate, set required members
/// - tt__Reverse* soap_new_set_tt__Reverse(soap*, ...) allocate, set all public members
/// - tt__Reverse::soap_default(soap*) default initialize members
/// - int soap_read_tt__Reverse(soap*, tt__Reverse*) deserialize from a stream
/// - int soap_write_tt__Reverse(soap*, tt__Reverse*) serialize to a stream
/// - tt__Reverse* tt__Reverse::soap_dup(soap*) returns deep copy of tt__Reverse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__Reverse::soap_del() deep deletes tt__Reverse data members, use only after tt__Reverse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__Reverse::soap_type() returns SOAP_TYPE_tt__Reverse or derived type identifier
class tt__Reverse
{ public:
/// <PRE><BLOCKQUOTE>
///   Parameter to enable/disable Reverse feature.
/// </BLOCKQUOTE></PRE>
///
/// Element "Mode" of type "http://www.onvif.org/ver10/schema":ReverseMode.
    enum tt__ReverseMode                 Mode                           1;	///< Required element.
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZConfigurationOptions is a complexType.
///
/// @note class tt__PTZConfigurationOptions operations:
/// - tt__PTZConfigurationOptions* soap_new_tt__PTZConfigurationOptions(soap*) allocate and default initialize
/// - tt__PTZConfigurationOptions* soap_new_tt__PTZConfigurationOptions(soap*, int num) allocate and default initialize an array
/// - tt__PTZConfigurationOptions* soap_new_req_tt__PTZConfigurationOptions(soap*, ...) allocate, set required members
/// - tt__PTZConfigurationOptions* soap_new_set_tt__PTZConfigurationOptions(soap*, ...) allocate, set all public members
/// - tt__PTZConfigurationOptions::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZConfigurationOptions(soap*, tt__PTZConfigurationOptions*) deserialize from a stream
/// - int soap_write_tt__PTZConfigurationOptions(soap*, tt__PTZConfigurationOptions*) serialize to a stream
/// - tt__PTZConfigurationOptions* tt__PTZConfigurationOptions::soap_dup(soap*) returns deep copy of tt__PTZConfigurationOptions, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZConfigurationOptions::soap_del() deep deletes tt__PTZConfigurationOptions data members, use only after tt__PTZConfigurationOptions::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZConfigurationOptions::soap_type() returns SOAP_TYPE_tt__PTZConfigurationOptions or derived type identifier
class tt__PTZConfigurationOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   A list of supported coordinate systems including their range limitations.
/// </BLOCKQUOTE></PRE>
///
/// Element "Spaces" of type "http://www.onvif.org/ver10/schema":PTZSpaces.
    tt__PTZSpaces*                       Spaces                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A timeout Range within which Timeouts are accepted by the PTZ Node.
/// </BLOCKQUOTE></PRE>
///
/// Element "PTZTimeout" of type "http://www.onvif.org/ver10/schema":DurationRange.
    tt__DurationRange*                   PTZTimeout                     1;	///< Required element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   Supported options for PT Direction Control.
/// </BLOCKQUOTE></PRE>
///
/// Element "PTControlDirection" of type "http://www.onvif.org/ver10/schema":PTControlDirectionOptions.
    tt__PTControlDirectionOptions*       PTControlDirection             0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PTZConfigurationOptions2.
    tt__PTZConfigurationOptions2*        Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The list of acceleration ramps supported by the device. The
///   smallest acceleration value corresponds to the minimal index, the
///   highest acceleration corresponds to the maximum index.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "PTZRamps" of type "http://www.onvif.org/ver10/schema":IntAttrList.
  @ tt__IntAttrList*                     PTZRamps                       0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZConfigurationOptions2 is a complexType.
///
/// @note class tt__PTZConfigurationOptions2 operations:
/// - tt__PTZConfigurationOptions2* soap_new_tt__PTZConfigurationOptions2(soap*) allocate and default initialize
/// - tt__PTZConfigurationOptions2* soap_new_tt__PTZConfigurationOptions2(soap*, int num) allocate and default initialize an array
/// - tt__PTZConfigurationOptions2* soap_new_req_tt__PTZConfigurationOptions2(soap*, ...) allocate, set required members
/// - tt__PTZConfigurationOptions2* soap_new_set_tt__PTZConfigurationOptions2(soap*, ...) allocate, set all public members
/// - tt__PTZConfigurationOptions2::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZConfigurationOptions2(soap*, tt__PTZConfigurationOptions2*) deserialize from a stream
/// - int soap_write_tt__PTZConfigurationOptions2(soap*, tt__PTZConfigurationOptions2*) serialize to a stream
/// - tt__PTZConfigurationOptions2* tt__PTZConfigurationOptions2::soap_dup(soap*) returns deep copy of tt__PTZConfigurationOptions2, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZConfigurationOptions2::soap_del() deep deletes tt__PTZConfigurationOptions2 data members, use only after tt__PTZConfigurationOptions2::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZConfigurationOptions2::soap_type() returns SOAP_TYPE_tt__PTZConfigurationOptions2 or derived type identifier
class tt__PTZConfigurationOptions2
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTControlDirectionOptions is a complexType.
///
/// @note class tt__PTControlDirectionOptions operations:
/// - tt__PTControlDirectionOptions* soap_new_tt__PTControlDirectionOptions(soap*) allocate and default initialize
/// - tt__PTControlDirectionOptions* soap_new_tt__PTControlDirectionOptions(soap*, int num) allocate and default initialize an array
/// - tt__PTControlDirectionOptions* soap_new_req_tt__PTControlDirectionOptions(soap*, ...) allocate, set required members
/// - tt__PTControlDirectionOptions* soap_new_set_tt__PTControlDirectionOptions(soap*, ...) allocate, set all public members
/// - tt__PTControlDirectionOptions::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTControlDirectionOptions(soap*, tt__PTControlDirectionOptions*) deserialize from a stream
/// - int soap_write_tt__PTControlDirectionOptions(soap*, tt__PTControlDirectionOptions*) serialize to a stream
/// - tt__PTControlDirectionOptions* tt__PTControlDirectionOptions::soap_dup(soap*) returns deep copy of tt__PTControlDirectionOptions, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTControlDirectionOptions::soap_del() deep deletes tt__PTControlDirectionOptions data members, use only after tt__PTControlDirectionOptions::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTControlDirectionOptions::soap_type() returns SOAP_TYPE_tt__PTControlDirectionOptions or derived type identifier
class tt__PTControlDirectionOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Supported options for EFlip feature.
/// </BLOCKQUOTE></PRE>
///
/// Element "EFlip" of type "http://www.onvif.org/ver10/schema":EFlipOptions.
    tt__EFlipOptions*                    EFlip                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Supported options for Reverse feature.
/// </BLOCKQUOTE></PRE>
///
/// Element "Reverse" of type "http://www.onvif.org/ver10/schema":ReverseOptions.
    tt__ReverseOptions*                  Reverse                        0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PTControlDirectionOptionsExtension.
    tt__PTControlDirectionOptionsExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTControlDirectionOptionsExtension is a complexType.
///
/// @note class tt__PTControlDirectionOptionsExtension operations:
/// - tt__PTControlDirectionOptionsExtension* soap_new_tt__PTControlDirectionOptionsExtension(soap*) allocate and default initialize
/// - tt__PTControlDirectionOptionsExtension* soap_new_tt__PTControlDirectionOptionsExtension(soap*, int num) allocate and default initialize an array
/// - tt__PTControlDirectionOptionsExtension* soap_new_req_tt__PTControlDirectionOptionsExtension(soap*, ...) allocate, set required members
/// - tt__PTControlDirectionOptionsExtension* soap_new_set_tt__PTControlDirectionOptionsExtension(soap*, ...) allocate, set all public members
/// - tt__PTControlDirectionOptionsExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTControlDirectionOptionsExtension(soap*, tt__PTControlDirectionOptionsExtension*) deserialize from a stream
/// - int soap_write_tt__PTControlDirectionOptionsExtension(soap*, tt__PTControlDirectionOptionsExtension*) serialize to a stream
/// - tt__PTControlDirectionOptionsExtension* tt__PTControlDirectionOptionsExtension::soap_dup(soap*) returns deep copy of tt__PTControlDirectionOptionsExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTControlDirectionOptionsExtension::soap_del() deep deletes tt__PTControlDirectionOptionsExtension data members, use only after tt__PTControlDirectionOptionsExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTControlDirectionOptionsExtension::soap_type() returns SOAP_TYPE_tt__PTControlDirectionOptionsExtension or derived type identifier
class tt__PTControlDirectionOptionsExtension
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":EFlipOptions is a complexType.
///
/// @note class tt__EFlipOptions operations:
/// - tt__EFlipOptions* soap_new_tt__EFlipOptions(soap*) allocate and default initialize
/// - tt__EFlipOptions* soap_new_tt__EFlipOptions(soap*, int num) allocate and default initialize an array
/// - tt__EFlipOptions* soap_new_req_tt__EFlipOptions(soap*, ...) allocate, set required members
/// - tt__EFlipOptions* soap_new_set_tt__EFlipOptions(soap*, ...) allocate, set all public members
/// - tt__EFlipOptions::soap_default(soap*) default initialize members
/// - int soap_read_tt__EFlipOptions(soap*, tt__EFlipOptions*) deserialize from a stream
/// - int soap_write_tt__EFlipOptions(soap*, tt__EFlipOptions*) serialize to a stream
/// - tt__EFlipOptions* tt__EFlipOptions::soap_dup(soap*) returns deep copy of tt__EFlipOptions, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__EFlipOptions::soap_del() deep deletes tt__EFlipOptions data members, use only after tt__EFlipOptions::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__EFlipOptions::soap_type() returns SOAP_TYPE_tt__EFlipOptions or derived type identifier
class tt__EFlipOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Options of EFlip mode parameter.
/// </BLOCKQUOTE></PRE>
///
/// Vector of enum tt__EFlipMode of length 0..unbounded.
    std::vector<enum tt__EFlipMode     > Mode                           0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":EFlipOptionsExtension.
    tt__EFlipOptionsExtension*           Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":EFlipOptionsExtension is a complexType.
///
/// @note class tt__EFlipOptionsExtension operations:
/// - tt__EFlipOptionsExtension* soap_new_tt__EFlipOptionsExtension(soap*) allocate and default initialize
/// - tt__EFlipOptionsExtension* soap_new_tt__EFlipOptionsExtension(soap*, int num) allocate and default initialize an array
/// - tt__EFlipOptionsExtension* soap_new_req_tt__EFlipOptionsExtension(soap*, ...) allocate, set required members
/// - tt__EFlipOptionsExtension* soap_new_set_tt__EFlipOptionsExtension(soap*, ...) allocate, set all public members
/// - tt__EFlipOptionsExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__EFlipOptionsExtension(soap*, tt__EFlipOptionsExtension*) deserialize from a stream
/// - int soap_write_tt__EFlipOptionsExtension(soap*, tt__EFlipOptionsExtension*) serialize to a stream
/// - tt__EFlipOptionsExtension* tt__EFlipOptionsExtension::soap_dup(soap*) returns deep copy of tt__EFlipOptionsExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__EFlipOptionsExtension::soap_del() deep deletes tt__EFlipOptionsExtension data members, use only after tt__EFlipOptionsExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__EFlipOptionsExtension::soap_type() returns SOAP_TYPE_tt__EFlipOptionsExtension or derived type identifier
class tt__EFlipOptionsExtension
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ReverseOptions is a complexType.
///
/// @note class tt__ReverseOptions operations:
/// - tt__ReverseOptions* soap_new_tt__ReverseOptions(soap*) allocate and default initialize
/// - tt__ReverseOptions* soap_new_tt__ReverseOptions(soap*, int num) allocate and default initialize an array
/// - tt__ReverseOptions* soap_new_req_tt__ReverseOptions(soap*, ...) allocate, set required members
/// - tt__ReverseOptions* soap_new_set_tt__ReverseOptions(soap*, ...) allocate, set all public members
/// - tt__ReverseOptions::soap_default(soap*) default initialize members
/// - int soap_read_tt__ReverseOptions(soap*, tt__ReverseOptions*) deserialize from a stream
/// - int soap_write_tt__ReverseOptions(soap*, tt__ReverseOptions*) serialize to a stream
/// - tt__ReverseOptions* tt__ReverseOptions::soap_dup(soap*) returns deep copy of tt__ReverseOptions, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__ReverseOptions::soap_del() deep deletes tt__ReverseOptions data members, use only after tt__ReverseOptions::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__ReverseOptions::soap_type() returns SOAP_TYPE_tt__ReverseOptions or derived type identifier
class tt__ReverseOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Options of Reverse mode parameter.
/// </BLOCKQUOTE></PRE>
///
/// Vector of enum tt__ReverseMode of length 0..unbounded.
    std::vector<enum tt__ReverseMode   > Mode                           0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":ReverseOptionsExtension.
    tt__ReverseOptionsExtension*         Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ReverseOptionsExtension is a complexType.
///
/// @note class tt__ReverseOptionsExtension operations:
/// - tt__ReverseOptionsExtension* soap_new_tt__ReverseOptionsExtension(soap*) allocate and default initialize
/// - tt__ReverseOptionsExtension* soap_new_tt__ReverseOptionsExtension(soap*, int num) allocate and default initialize an array
/// - tt__ReverseOptionsExtension* soap_new_req_tt__ReverseOptionsExtension(soap*, ...) allocate, set required members
/// - tt__ReverseOptionsExtension* soap_new_set_tt__ReverseOptionsExtension(soap*, ...) allocate, set all public members
/// - tt__ReverseOptionsExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__ReverseOptionsExtension(soap*, tt__ReverseOptionsExtension*) deserialize from a stream
/// - int soap_write_tt__ReverseOptionsExtension(soap*, tt__ReverseOptionsExtension*) serialize to a stream
/// - tt__ReverseOptionsExtension* tt__ReverseOptionsExtension::soap_dup(soap*) returns deep copy of tt__ReverseOptionsExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__ReverseOptionsExtension::soap_del() deep deletes tt__ReverseOptionsExtension data members, use only after tt__ReverseOptionsExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__ReverseOptionsExtension::soap_type() returns SOAP_TYPE_tt__ReverseOptionsExtension or derived type identifier
class tt__ReverseOptionsExtension
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PanTiltLimits is a complexType.
///
/// @note class tt__PanTiltLimits operations:
/// - tt__PanTiltLimits* soap_new_tt__PanTiltLimits(soap*) allocate and default initialize
/// - tt__PanTiltLimits* soap_new_tt__PanTiltLimits(soap*, int num) allocate and default initialize an array
/// - tt__PanTiltLimits* soap_new_req_tt__PanTiltLimits(soap*, ...) allocate, set required members
/// - tt__PanTiltLimits* soap_new_set_tt__PanTiltLimits(soap*, ...) allocate, set all public members
/// - tt__PanTiltLimits::soap_default(soap*) default initialize members
/// - int soap_read_tt__PanTiltLimits(soap*, tt__PanTiltLimits*) deserialize from a stream
/// - int soap_write_tt__PanTiltLimits(soap*, tt__PanTiltLimits*) serialize to a stream
/// - tt__PanTiltLimits* tt__PanTiltLimits::soap_dup(soap*) returns deep copy of tt__PanTiltLimits, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PanTiltLimits::soap_del() deep deletes tt__PanTiltLimits data members, use only after tt__PanTiltLimits::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PanTiltLimits::soap_type() returns SOAP_TYPE_tt__PanTiltLimits or derived type identifier
class tt__PanTiltLimits
{ public:
/// <PRE><BLOCKQUOTE>
///   A range of pan tilt limits.
/// </BLOCKQUOTE></PRE>
///
/// Element "Range" of type "http://www.onvif.org/ver10/schema":Space2DDescription.
    tt__Space2DDescription*              Range                          1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ZoomLimits is a complexType.
///
/// @note class tt__ZoomLimits operations:
/// - tt__ZoomLimits* soap_new_tt__ZoomLimits(soap*) allocate and default initialize
/// - tt__ZoomLimits* soap_new_tt__ZoomLimits(soap*, int num) allocate and default initialize an array
/// - tt__ZoomLimits* soap_new_req_tt__ZoomLimits(soap*, ...) allocate, set required members
/// - tt__ZoomLimits* soap_new_set_tt__ZoomLimits(soap*, ...) allocate, set all public members
/// - tt__ZoomLimits::soap_default(soap*) default initialize members
/// - int soap_read_tt__ZoomLimits(soap*, tt__ZoomLimits*) deserialize from a stream
/// - int soap_write_tt__ZoomLimits(soap*, tt__ZoomLimits*) serialize to a stream
/// - tt__ZoomLimits* tt__ZoomLimits::soap_dup(soap*) returns deep copy of tt__ZoomLimits, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__ZoomLimits::soap_del() deep deletes tt__ZoomLimits data members, use only after tt__ZoomLimits::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__ZoomLimits::soap_type() returns SOAP_TYPE_tt__ZoomLimits or derived type identifier
class tt__ZoomLimits
{ public:
/// <PRE><BLOCKQUOTE>
///   A range of zoom limit
/// </BLOCKQUOTE></PRE>
///
/// Element "Range" of type "http://www.onvif.org/ver10/schema":Space1DDescription.
    tt__Space1DDescription*              Range                          1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZSpaces is a complexType.
///
/// @note class tt__PTZSpaces operations:
/// - tt__PTZSpaces* soap_new_tt__PTZSpaces(soap*) allocate and default initialize
/// - tt__PTZSpaces* soap_new_tt__PTZSpaces(soap*, int num) allocate and default initialize an array
/// - tt__PTZSpaces* soap_new_req_tt__PTZSpaces(soap*, ...) allocate, set required members
/// - tt__PTZSpaces* soap_new_set_tt__PTZSpaces(soap*, ...) allocate, set all public members
/// - tt__PTZSpaces::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZSpaces(soap*, tt__PTZSpaces*) deserialize from a stream
/// - int soap_write_tt__PTZSpaces(soap*, tt__PTZSpaces*) serialize to a stream
/// - tt__PTZSpaces* tt__PTZSpaces::soap_dup(soap*) returns deep copy of tt__PTZSpaces, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZSpaces::soap_del() deep deletes tt__PTZSpaces data members, use only after tt__PTZSpaces::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZSpaces::soap_type() returns SOAP_TYPE_tt__PTZSpaces or derived type identifier
class tt__PTZSpaces
{ public:
/// <PRE><BLOCKQUOTE>
///   The Generic Pan/Tilt Position space is provided by every PTZ node that supports absolute Pan/Tilt, since it does not relate to a specific physical range. Instead, the range should be defined as the full range of the PTZ unit normalized to the range -1 to 1 resulting in the following space description.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__Space2DDescription* of length 0..unbounded.
    std::vector<tt__Space2DDescription*> AbsolutePanTiltPositionSpace   0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   The Generic Zoom Position Space is provided by every PTZ node that supports absolute Zoom, since it does not relate to a specific physical range. Instead, the range should be defined as the full range of the Zoom normalized to the range 0 (wide) to 1 (tele). There is no assumption about how the generic zoom range is mapped to magnification, FOV or other physical zoom dimension.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__Space1DDescription* of length 0..unbounded.
    std::vector<tt__Space1DDescription*> AbsoluteZoomPositionSpace      0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   The Generic Pan/Tilt translation space is provided by every PTZ node that supports relative Pan/Tilt, since it does not relate to a specific physical range. Instead, the range should be defined as the full positive and negative translation range of the PTZ unit normalized to the range -1 to 1, where positive translation would mean clockwise rotation or movement in right/up direction resulting in the following space description.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__Space2DDescription* of length 0..unbounded.
    std::vector<tt__Space2DDescription*> RelativePanTiltTranslationSpace 0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   The Generic Zoom Translation Space is provided by every PTZ node that supports relative Zoom, since it does not relate to a specific physical range. Instead, the corresponding absolute range should be defined as the full positive and negative translation range of the Zoom normalized to the range -1 to1, where a positive translation maps to a movement in TELE direction. The translation is signed to indicate direction (negative is to wide, positive is to tele). There is no assumption about how the generic zoom range is mapped to magnification, FOV or other physical zoom dimension. This results in the following space description.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__Space1DDescription* of length 0..unbounded.
    std::vector<tt__Space1DDescription*> RelativeZoomTranslationSpace   0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   The generic Pan/Tilt velocity space shall be provided by every PTZ node, since it does not relate to a specific physical range. Instead, the range should be defined as a range of the PTZ units speed normalized to the range -1 to 1, where a positive velocity would map to clockwise rotation or movement in the right/up direction. A signed speed can be independently specified for the pan and tilt component resulting in the following space description.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__Space2DDescription* of length 0..unbounded.
    std::vector<tt__Space2DDescription*> ContinuousPanTiltVelocitySpace 0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   The generic zoom velocity space specifies a zoom factor velocity without knowing the underlying physical model. The range should be normalized from -1 to 1, where a positive velocity would map to TELE direction. A generic zoom velocity space description resembles the following.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__Space1DDescription* of length 0..unbounded.
    std::vector<tt__Space1DDescription*> ContinuousZoomVelocitySpace    0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   The speed space specifies the speed for a Pan/Tilt movement when moving to an absolute position or to a relative translation. In contrast to the velocity spaces, speed spaces do not contain any directional information. The speed of a combined Pan/Tilt movement is represented by a single non-negative scalar value.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__Space1DDescription* of length 0..unbounded.
    std::vector<tt__Space1DDescription*> PanTiltSpeedSpace              0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   The speed space specifies the speed for a Zoom movement when moving to an absolute position or to a relative translation. In contrast to the velocity spaces, speed spaces do not contain any directional information.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__Space1DDescription* of length 0..unbounded.
    std::vector<tt__Space1DDescription*> ZoomSpeedSpace                 0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PTZSpacesExtension.
    tt__PTZSpacesExtension*              Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZSpacesExtension is a complexType.
///
/// @note class tt__PTZSpacesExtension operations:
/// - tt__PTZSpacesExtension* soap_new_tt__PTZSpacesExtension(soap*) allocate and default initialize
/// - tt__PTZSpacesExtension* soap_new_tt__PTZSpacesExtension(soap*, int num) allocate and default initialize an array
/// - tt__PTZSpacesExtension* soap_new_req_tt__PTZSpacesExtension(soap*, ...) allocate, set required members
/// - tt__PTZSpacesExtension* soap_new_set_tt__PTZSpacesExtension(soap*, ...) allocate, set all public members
/// - tt__PTZSpacesExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZSpacesExtension(soap*, tt__PTZSpacesExtension*) deserialize from a stream
/// - int soap_write_tt__PTZSpacesExtension(soap*, tt__PTZSpacesExtension*) serialize to a stream
/// - tt__PTZSpacesExtension* tt__PTZSpacesExtension::soap_dup(soap*) returns deep copy of tt__PTZSpacesExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZSpacesExtension::soap_del() deep deletes tt__PTZSpacesExtension data members, use only after tt__PTZSpacesExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZSpacesExtension::soap_type() returns SOAP_TYPE_tt__PTZSpacesExtension or derived type identifier
class tt__PTZSpacesExtension
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Space2DDescription is a complexType.
///
/// @note class tt__Space2DDescription operations:
/// - tt__Space2DDescription* soap_new_tt__Space2DDescription(soap*) allocate and default initialize
/// - tt__Space2DDescription* soap_new_tt__Space2DDescription(soap*, int num) allocate and default initialize an array
/// - tt__Space2DDescription* soap_new_req_tt__Space2DDescription(soap*, ...) allocate, set required members
/// - tt__Space2DDescription* soap_new_set_tt__Space2DDescription(soap*, ...) allocate, set all public members
/// - tt__Space2DDescription::soap_default(soap*) default initialize members
/// - int soap_read_tt__Space2DDescription(soap*, tt__Space2DDescription*) deserialize from a stream
/// - int soap_write_tt__Space2DDescription(soap*, tt__Space2DDescription*) serialize to a stream
/// - tt__Space2DDescription* tt__Space2DDescription::soap_dup(soap*) returns deep copy of tt__Space2DDescription, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__Space2DDescription::soap_del() deep deletes tt__Space2DDescription data members, use only after tt__Space2DDescription::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__Space2DDescription::soap_type() returns SOAP_TYPE_tt__Space2DDescription or derived type identifier
class tt__Space2DDescription
{ public:
/// <PRE><BLOCKQUOTE>
///   A URI of coordinate systems.
/// </BLOCKQUOTE></PRE>
///
/// Element "URI" of type xs:anyURI.
    xsd__anyURI                          URI                            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A range of x-axis.
/// </BLOCKQUOTE></PRE>
///
/// Element "XRange" of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      XRange                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A range of y-axis.
/// </BLOCKQUOTE></PRE>
///
/// Element "YRange" of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      YRange                         1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Space1DDescription is a complexType.
///
/// @note class tt__Space1DDescription operations:
/// - tt__Space1DDescription* soap_new_tt__Space1DDescription(soap*) allocate and default initialize
/// - tt__Space1DDescription* soap_new_tt__Space1DDescription(soap*, int num) allocate and default initialize an array
/// - tt__Space1DDescription* soap_new_req_tt__Space1DDescription(soap*, ...) allocate, set required members
/// - tt__Space1DDescription* soap_new_set_tt__Space1DDescription(soap*, ...) allocate, set all public members
/// - tt__Space1DDescription::soap_default(soap*) default initialize members
/// - int soap_read_tt__Space1DDescription(soap*, tt__Space1DDescription*) deserialize from a stream
/// - int soap_write_tt__Space1DDescription(soap*, tt__Space1DDescription*) serialize to a stream
/// - tt__Space1DDescription* tt__Space1DDescription::soap_dup(soap*) returns deep copy of tt__Space1DDescription, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__Space1DDescription::soap_del() deep deletes tt__Space1DDescription data members, use only after tt__Space1DDescription::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__Space1DDescription::soap_type() returns SOAP_TYPE_tt__Space1DDescription or derived type identifier
class tt__Space1DDescription
{ public:
/// <PRE><BLOCKQUOTE>
///   A URI of coordinate systems.
/// </BLOCKQUOTE></PRE>
///
/// Element "URI" of type xs:anyURI.
    xsd__anyURI                          URI                            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A range of x-axis.
/// </BLOCKQUOTE></PRE>
///
/// Element "XRange" of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      XRange                         1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZSpeed is a complexType.
///
/// @note class tt__PTZSpeed operations:
/// - tt__PTZSpeed* soap_new_tt__PTZSpeed(soap*) allocate and default initialize
/// - tt__PTZSpeed* soap_new_tt__PTZSpeed(soap*, int num) allocate and default initialize an array
/// - tt__PTZSpeed* soap_new_req_tt__PTZSpeed(soap*, ...) allocate, set required members
/// - tt__PTZSpeed* soap_new_set_tt__PTZSpeed(soap*, ...) allocate, set all public members
/// - tt__PTZSpeed::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZSpeed(soap*, tt__PTZSpeed*) deserialize from a stream
/// - int soap_write_tt__PTZSpeed(soap*, tt__PTZSpeed*) serialize to a stream
/// - tt__PTZSpeed* tt__PTZSpeed::soap_dup(soap*) returns deep copy of tt__PTZSpeed, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZSpeed::soap_del() deep deletes tt__PTZSpeed data members, use only after tt__PTZSpeed::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZSpeed::soap_type() returns SOAP_TYPE_tt__PTZSpeed or derived type identifier
class tt__PTZSpeed
{ public:
/// <PRE><BLOCKQUOTE>
///   Pan and tilt speed. The x component corresponds to pan and the y component to tilt. If omitted in a request, the current (if any) PanTilt movement should not be affected.
/// </BLOCKQUOTE></PRE>
///
/// Element "PanTilt" of type "http://www.onvif.org/ver10/schema":Vector2D.
    tt__Vector2D*                        PanTilt                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   A zoom speed. If omitted in a request, the current (if any) Zoom movement should not be affected.
/// </BLOCKQUOTE></PRE>
///
/// Element "Zoom" of type "http://www.onvif.org/ver10/schema":Vector1D.
    tt__Vector1D*                        Zoom                           0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPreset is a complexType.
///
/// @note class tt__PTZPreset operations:
/// - tt__PTZPreset* soap_new_tt__PTZPreset(soap*) allocate and default initialize
/// - tt__PTZPreset* soap_new_tt__PTZPreset(soap*, int num) allocate and default initialize an array
/// - tt__PTZPreset* soap_new_req_tt__PTZPreset(soap*, ...) allocate, set required members
/// - tt__PTZPreset* soap_new_set_tt__PTZPreset(soap*, ...) allocate, set all public members
/// - tt__PTZPreset::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZPreset(soap*, tt__PTZPreset*) deserialize from a stream
/// - int soap_write_tt__PTZPreset(soap*, tt__PTZPreset*) serialize to a stream
/// - tt__PTZPreset* tt__PTZPreset::soap_dup(soap*) returns deep copy of tt__PTZPreset, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZPreset::soap_del() deep deletes tt__PTZPreset data members, use only after tt__PTZPreset::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZPreset::soap_type() returns SOAP_TYPE_tt__PTZPreset or derived type identifier
class tt__PTZPreset
{ public:
/// <PRE><BLOCKQUOTE>
///   A list of preset position name.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name*                            Name                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   A list of preset position.
/// </BLOCKQUOTE></PRE>
///
/// Element "PTZPosition" of type "http://www.onvif.org/ver10/schema":PTZVector.
    tt__PTZVector*                       PTZPosition                    0;	///< Optional element.

/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken*                  token                          0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PresetTour is a complexType.
///
/// @note class tt__PresetTour operations:
/// - tt__PresetTour* soap_new_tt__PresetTour(soap*) allocate and default initialize
/// - tt__PresetTour* soap_new_tt__PresetTour(soap*, int num) allocate and default initialize an array
/// - tt__PresetTour* soap_new_req_tt__PresetTour(soap*, ...) allocate, set required members
/// - tt__PresetTour* soap_new_set_tt__PresetTour(soap*, ...) allocate, set all public members
/// - tt__PresetTour::soap_default(soap*) default initialize members
/// - int soap_read_tt__PresetTour(soap*, tt__PresetTour*) deserialize from a stream
/// - int soap_write_tt__PresetTour(soap*, tt__PresetTour*) serialize to a stream
/// - tt__PresetTour* tt__PresetTour::soap_dup(soap*) returns deep copy of tt__PresetTour, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PresetTour::soap_del() deep deletes tt__PresetTour data members, use only after tt__PresetTour::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PresetTour::soap_type() returns SOAP_TYPE_tt__PresetTour or derived type identifier
class tt__PresetTour
{ public:
/// <PRE><BLOCKQUOTE>
///   Readable name of the preset tour.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name*                            Name                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Read only parameters to indicate the status of the preset tour.
/// </BLOCKQUOTE></PRE>
///
/// Element "Status" of type "http://www.onvif.org/ver10/schema":PTZPresetTourStatus.
    tt__PTZPresetTourStatus*             Status                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Auto Start flag of the preset tour. True allows the preset tour to be activated always.
/// </BLOCKQUOTE></PRE>
///
/// Element "AutoStart" of type xs:boolean.
    bool                                 AutoStart                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Parameters to specify the detail behavior of the preset tour.
/// </BLOCKQUOTE></PRE>
///
/// Element "StartingCondition" of type "http://www.onvif.org/ver10/schema":PTZPresetTourStartingCondition.
    tt__PTZPresetTourStartingCondition*  StartingCondition              1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A list of detail of touring spots including preset positions.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__PTZPresetTourSpot* of length 0..unbounded.
    std::vector<tt__PTZPresetTourSpot* > TourSpot                       0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PTZPresetTourExtension.
    tt__PTZPresetTourExtension*          Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Unique identifier of this preset tour.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken*                  token                          0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourExtension is a complexType.
///
/// @note class tt__PTZPresetTourExtension operations:
/// - tt__PTZPresetTourExtension* soap_new_tt__PTZPresetTourExtension(soap*) allocate and default initialize
/// - tt__PTZPresetTourExtension* soap_new_tt__PTZPresetTourExtension(soap*, int num) allocate and default initialize an array
/// - tt__PTZPresetTourExtension* soap_new_req_tt__PTZPresetTourExtension(soap*, ...) allocate, set required members
/// - tt__PTZPresetTourExtension* soap_new_set_tt__PTZPresetTourExtension(soap*, ...) allocate, set all public members
/// - tt__PTZPresetTourExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZPresetTourExtension(soap*, tt__PTZPresetTourExtension*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourExtension(soap*, tt__PTZPresetTourExtension*) serialize to a stream
/// - tt__PTZPresetTourExtension* tt__PTZPresetTourExtension::soap_dup(soap*) returns deep copy of tt__PTZPresetTourExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZPresetTourExtension::soap_del() deep deletes tt__PTZPresetTourExtension data members, use only after tt__PTZPresetTourExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZPresetTourExtension::soap_type() returns SOAP_TYPE_tt__PTZPresetTourExtension or derived type identifier
class tt__PTZPresetTourExtension
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourSpot is a complexType.
///
/// @note class tt__PTZPresetTourSpot operations:
/// - tt__PTZPresetTourSpot* soap_new_tt__PTZPresetTourSpot(soap*) allocate and default initialize
/// - tt__PTZPresetTourSpot* soap_new_tt__PTZPresetTourSpot(soap*, int num) allocate and default initialize an array
/// - tt__PTZPresetTourSpot* soap_new_req_tt__PTZPresetTourSpot(soap*, ...) allocate, set required members
/// - tt__PTZPresetTourSpot* soap_new_set_tt__PTZPresetTourSpot(soap*, ...) allocate, set all public members
/// - tt__PTZPresetTourSpot::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZPresetTourSpot(soap*, tt__PTZPresetTourSpot*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourSpot(soap*, tt__PTZPresetTourSpot*) serialize to a stream
/// - tt__PTZPresetTourSpot* tt__PTZPresetTourSpot::soap_dup(soap*) returns deep copy of tt__PTZPresetTourSpot, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZPresetTourSpot::soap_del() deep deletes tt__PTZPresetTourSpot data members, use only after tt__PTZPresetTourSpot::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZPresetTourSpot::soap_type() returns SOAP_TYPE_tt__PTZPresetTourSpot or derived type identifier
class tt__PTZPresetTourSpot
{ public:
/// <PRE><BLOCKQUOTE>
///   Detail definition of preset position of the tour spot.
/// </BLOCKQUOTE></PRE>
///
/// Element "PresetDetail" of type "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetail.
    tt__PTZPresetTourPresetDetail*       PresetDetail                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional parameter to specify Pan/Tilt and Zoom speed on moving toward this tour spot.
/// </BLOCKQUOTE></PRE>
///
/// Element "Speed" of type "http://www.onvif.org/ver10/schema":PTZSpeed.
    tt__PTZSpeed*                        Speed                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional parameter to specify time duration of staying on this tour sport.
/// </BLOCKQUOTE></PRE>
///
/// Element "StayTime" of type xs:duration.
    xsd__duration*                       StayTime                       0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PTZPresetTourSpotExtension.
    tt__PTZPresetTourSpotExtension*      Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourSpotExtension is a complexType.
///
/// @note class tt__PTZPresetTourSpotExtension operations:
/// - tt__PTZPresetTourSpotExtension* soap_new_tt__PTZPresetTourSpotExtension(soap*) allocate and default initialize
/// - tt__PTZPresetTourSpotExtension* soap_new_tt__PTZPresetTourSpotExtension(soap*, int num) allocate and default initialize an array
/// - tt__PTZPresetTourSpotExtension* soap_new_req_tt__PTZPresetTourSpotExtension(soap*, ...) allocate, set required members
/// - tt__PTZPresetTourSpotExtension* soap_new_set_tt__PTZPresetTourSpotExtension(soap*, ...) allocate, set all public members
/// - tt__PTZPresetTourSpotExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZPresetTourSpotExtension(soap*, tt__PTZPresetTourSpotExtension*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourSpotExtension(soap*, tt__PTZPresetTourSpotExtension*) serialize to a stream
/// - tt__PTZPresetTourSpotExtension* tt__PTZPresetTourSpotExtension::soap_dup(soap*) returns deep copy of tt__PTZPresetTourSpotExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZPresetTourSpotExtension::soap_del() deep deletes tt__PTZPresetTourSpotExtension data members, use only after tt__PTZPresetTourSpotExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZPresetTourSpotExtension::soap_type() returns SOAP_TYPE_tt__PTZPresetTourSpotExtension or derived type identifier
class tt__PTZPresetTourSpotExtension
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetail is a complexType.
///
/// @note class tt__PTZPresetTourPresetDetail operations:
/// - tt__PTZPresetTourPresetDetail* soap_new_tt__PTZPresetTourPresetDetail(soap*) allocate and default initialize
/// - tt__PTZPresetTourPresetDetail* soap_new_tt__PTZPresetTourPresetDetail(soap*, int num) allocate and default initialize an array
/// - tt__PTZPresetTourPresetDetail* soap_new_req_tt__PTZPresetTourPresetDetail(soap*, ...) allocate, set required members
/// - tt__PTZPresetTourPresetDetail* soap_new_set_tt__PTZPresetTourPresetDetail(soap*, ...) allocate, set all public members
/// - tt__PTZPresetTourPresetDetail::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZPresetTourPresetDetail(soap*, tt__PTZPresetTourPresetDetail*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourPresetDetail(soap*, tt__PTZPresetTourPresetDetail*) serialize to a stream
/// - tt__PTZPresetTourPresetDetail* tt__PTZPresetTourPresetDetail::soap_dup(soap*) returns deep copy of tt__PTZPresetTourPresetDetail, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZPresetTourPresetDetail::soap_del() deep deletes tt__PTZPresetTourPresetDetail data members, use only after tt__PTZPresetTourPresetDetail::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZPresetTourPresetDetail::soap_type() returns SOAP_TYPE_tt__PTZPresetTourPresetDetail or derived type identifier
class tt__PTZPresetTourPresetDetail
{ public:
//  BEGIN CHOICE <xs:choice>
  $ int                                  __union_PTZPresetTourPresetDetail;	///< Union _tt__union_PTZPresetTourPresetDetail selector: set to SOAP_UNION__tt__union_PTZPresetTourPresetDetail_<fieldname>
    union _tt__union_PTZPresetTourPresetDetail
    {
/// <PRE><BLOCKQUOTE>
///   Option to specify the preset position with Preset Token defined in advance.
/// </BLOCKQUOTE></PRE>
///
/// Element "PresetToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  PresetToken                   ;	///< Choice of element (one of multiple choices).
/// <PRE><BLOCKQUOTE>
///   Option to specify the preset position with the home position of this PTZ Node. "False" to this parameter shall be treated as an invalid argument.
/// </BLOCKQUOTE></PRE>
///
/// Element "Home" of type xs:boolean.
    bool                                 Home                          ;	///< Choice of element (one of multiple choices).
/// <PRE><BLOCKQUOTE>
///   Option to specify the preset position with vector of PTZ node directly.
/// </BLOCKQUOTE></PRE>
///
/// Element "PTZPosition" of type "http://www.onvif.org/ver10/schema":PTZVector.
    tt__PTZVector*                       PTZPosition                   ;	///< Choice of element (one of multiple choices).
/// Element "TypeExtension" of type "http://www.onvif.org/ver10/schema":PTZPresetTourTypeExtension.
    tt__PTZPresetTourTypeExtension*      TypeExtension                 ;	///< Choice of element (one of multiple choices).
    }                                    union_PTZPresetTourPresetDetail;
//  END OF CHOICE
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourTypeExtension is a complexType.
///
/// @note class tt__PTZPresetTourTypeExtension operations:
/// - tt__PTZPresetTourTypeExtension* soap_new_tt__PTZPresetTourTypeExtension(soap*) allocate and default initialize
/// - tt__PTZPresetTourTypeExtension* soap_new_tt__PTZPresetTourTypeExtension(soap*, int num) allocate and default initialize an array
/// - tt__PTZPresetTourTypeExtension* soap_new_req_tt__PTZPresetTourTypeExtension(soap*, ...) allocate, set required members
/// - tt__PTZPresetTourTypeExtension* soap_new_set_tt__PTZPresetTourTypeExtension(soap*, ...) allocate, set all public members
/// - tt__PTZPresetTourTypeExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZPresetTourTypeExtension(soap*, tt__PTZPresetTourTypeExtension*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourTypeExtension(soap*, tt__PTZPresetTourTypeExtension*) serialize to a stream
/// - tt__PTZPresetTourTypeExtension* tt__PTZPresetTourTypeExtension::soap_dup(soap*) returns deep copy of tt__PTZPresetTourTypeExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZPresetTourTypeExtension::soap_del() deep deletes tt__PTZPresetTourTypeExtension data members, use only after tt__PTZPresetTourTypeExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZPresetTourTypeExtension::soap_type() returns SOAP_TYPE_tt__PTZPresetTourTypeExtension or derived type identifier
class tt__PTZPresetTourTypeExtension
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourStatus is a complexType.
///
/// @note class tt__PTZPresetTourStatus operations:
/// - tt__PTZPresetTourStatus* soap_new_tt__PTZPresetTourStatus(soap*) allocate and default initialize
/// - tt__PTZPresetTourStatus* soap_new_tt__PTZPresetTourStatus(soap*, int num) allocate and default initialize an array
/// - tt__PTZPresetTourStatus* soap_new_req_tt__PTZPresetTourStatus(soap*, ...) allocate, set required members
/// - tt__PTZPresetTourStatus* soap_new_set_tt__PTZPresetTourStatus(soap*, ...) allocate, set all public members
/// - tt__PTZPresetTourStatus::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZPresetTourStatus(soap*, tt__PTZPresetTourStatus*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourStatus(soap*, tt__PTZPresetTourStatus*) serialize to a stream
/// - tt__PTZPresetTourStatus* tt__PTZPresetTourStatus::soap_dup(soap*) returns deep copy of tt__PTZPresetTourStatus, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZPresetTourStatus::soap_del() deep deletes tt__PTZPresetTourStatus data members, use only after tt__PTZPresetTourStatus::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZPresetTourStatus::soap_type() returns SOAP_TYPE_tt__PTZPresetTourStatus or derived type identifier
class tt__PTZPresetTourStatus
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates state of this preset tour by Idle/Touring/Paused.
/// </BLOCKQUOTE></PRE>
///
/// Element "State" of type "http://www.onvif.org/ver10/schema":PTZPresetTourState.
    enum tt__PTZPresetTourState          State                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates a tour spot currently staying.
/// </BLOCKQUOTE></PRE>
///
/// Element "CurrentTourSpot" of type "http://www.onvif.org/ver10/schema":PTZPresetTourSpot.
    tt__PTZPresetTourSpot*               CurrentTourSpot                0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PTZPresetTourStatusExtension.
    tt__PTZPresetTourStatusExtension*    Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourStatusExtension is a complexType.
///
/// @note class tt__PTZPresetTourStatusExtension operations:
/// - tt__PTZPresetTourStatusExtension* soap_new_tt__PTZPresetTourStatusExtension(soap*) allocate and default initialize
/// - tt__PTZPresetTourStatusExtension* soap_new_tt__PTZPresetTourStatusExtension(soap*, int num) allocate and default initialize an array
/// - tt__PTZPresetTourStatusExtension* soap_new_req_tt__PTZPresetTourStatusExtension(soap*, ...) allocate, set required members
/// - tt__PTZPresetTourStatusExtension* soap_new_set_tt__PTZPresetTourStatusExtension(soap*, ...) allocate, set all public members
/// - tt__PTZPresetTourStatusExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZPresetTourStatusExtension(soap*, tt__PTZPresetTourStatusExtension*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourStatusExtension(soap*, tt__PTZPresetTourStatusExtension*) serialize to a stream
/// - tt__PTZPresetTourStatusExtension* tt__PTZPresetTourStatusExtension::soap_dup(soap*) returns deep copy of tt__PTZPresetTourStatusExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZPresetTourStatusExtension::soap_del() deep deletes tt__PTZPresetTourStatusExtension data members, use only after tt__PTZPresetTourStatusExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZPresetTourStatusExtension::soap_type() returns SOAP_TYPE_tt__PTZPresetTourStatusExtension or derived type identifier
class tt__PTZPresetTourStatusExtension
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourStartingCondition is a complexType.
///
/// @note class tt__PTZPresetTourStartingCondition operations:
/// - tt__PTZPresetTourStartingCondition* soap_new_tt__PTZPresetTourStartingCondition(soap*) allocate and default initialize
/// - tt__PTZPresetTourStartingCondition* soap_new_tt__PTZPresetTourStartingCondition(soap*, int num) allocate and default initialize an array
/// - tt__PTZPresetTourStartingCondition* soap_new_req_tt__PTZPresetTourStartingCondition(soap*, ...) allocate, set required members
/// - tt__PTZPresetTourStartingCondition* soap_new_set_tt__PTZPresetTourStartingCondition(soap*, ...) allocate, set all public members
/// - tt__PTZPresetTourStartingCondition::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZPresetTourStartingCondition(soap*, tt__PTZPresetTourStartingCondition*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourStartingCondition(soap*, tt__PTZPresetTourStartingCondition*) serialize to a stream
/// - tt__PTZPresetTourStartingCondition* tt__PTZPresetTourStartingCondition::soap_dup(soap*) returns deep copy of tt__PTZPresetTourStartingCondition, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZPresetTourStartingCondition::soap_del() deep deletes tt__PTZPresetTourStartingCondition data members, use only after tt__PTZPresetTourStartingCondition::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZPresetTourStartingCondition::soap_type() returns SOAP_TYPE_tt__PTZPresetTourStartingCondition or derived type identifier
class tt__PTZPresetTourStartingCondition
{ public:
/// <PRE><BLOCKQUOTE>
///   Optional parameter to specify how many times the preset tour is recurred.
/// </BLOCKQUOTE></PRE>
///
/// Element "RecurringTime" of type xs:int.
    int*                                 RecurringTime                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional parameter to specify how long time duration the preset tour is recurred.
/// </BLOCKQUOTE></PRE>
///
/// Element "RecurringDuration" of type xs:duration.
    xsd__duration*                       RecurringDuration              0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional parameter to choose which direction the preset tour goes. Forward shall be chosen in case it is omitted.
/// </BLOCKQUOTE></PRE>
///
/// Element "Direction" of type "http://www.onvif.org/ver10/schema":PTZPresetTourDirection.
    enum tt__PTZPresetTourDirection*     Direction                      0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionExtension.
    tt__PTZPresetTourStartingConditionExtension*  Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Execute presets in random order. If set to true and Direction is also present, Direction will be ignored and presets of the Tour will be recalled randomly.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "RandomPresetOrder" of type xs:boolean.
  @ bool*                                RandomPresetOrder              0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionExtension is a complexType.
///
/// @note class tt__PTZPresetTourStartingConditionExtension operations:
/// - tt__PTZPresetTourStartingConditionExtension* soap_new_tt__PTZPresetTourStartingConditionExtension(soap*) allocate and default initialize
/// - tt__PTZPresetTourStartingConditionExtension* soap_new_tt__PTZPresetTourStartingConditionExtension(soap*, int num) allocate and default initialize an array
/// - tt__PTZPresetTourStartingConditionExtension* soap_new_req_tt__PTZPresetTourStartingConditionExtension(soap*, ...) allocate, set required members
/// - tt__PTZPresetTourStartingConditionExtension* soap_new_set_tt__PTZPresetTourStartingConditionExtension(soap*, ...) allocate, set all public members
/// - tt__PTZPresetTourStartingConditionExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZPresetTourStartingConditionExtension(soap*, tt__PTZPresetTourStartingConditionExtension*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourStartingConditionExtension(soap*, tt__PTZPresetTourStartingConditionExtension*) serialize to a stream
/// - tt__PTZPresetTourStartingConditionExtension* tt__PTZPresetTourStartingConditionExtension::soap_dup(soap*) returns deep copy of tt__PTZPresetTourStartingConditionExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZPresetTourStartingConditionExtension::soap_del() deep deletes tt__PTZPresetTourStartingConditionExtension data members, use only after tt__PTZPresetTourStartingConditionExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZPresetTourStartingConditionExtension::soap_type() returns SOAP_TYPE_tt__PTZPresetTourStartingConditionExtension or derived type identifier
class tt__PTZPresetTourStartingConditionExtension
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourOptions is a complexType.
///
/// @note class tt__PTZPresetTourOptions operations:
/// - tt__PTZPresetTourOptions* soap_new_tt__PTZPresetTourOptions(soap*) allocate and default initialize
/// - tt__PTZPresetTourOptions* soap_new_tt__PTZPresetTourOptions(soap*, int num) allocate and default initialize an array
/// - tt__PTZPresetTourOptions* soap_new_req_tt__PTZPresetTourOptions(soap*, ...) allocate, set required members
/// - tt__PTZPresetTourOptions* soap_new_set_tt__PTZPresetTourOptions(soap*, ...) allocate, set all public members
/// - tt__PTZPresetTourOptions::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZPresetTourOptions(soap*, tt__PTZPresetTourOptions*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourOptions(soap*, tt__PTZPresetTourOptions*) serialize to a stream
/// - tt__PTZPresetTourOptions* tt__PTZPresetTourOptions::soap_dup(soap*) returns deep copy of tt__PTZPresetTourOptions, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZPresetTourOptions::soap_del() deep deletes tt__PTZPresetTourOptions data members, use only after tt__PTZPresetTourOptions::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZPresetTourOptions::soap_type() returns SOAP_TYPE_tt__PTZPresetTourOptions or derived type identifier
class tt__PTZPresetTourOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not the AutoStart is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "AutoStart" of type xs:boolean.
    bool                                 AutoStart                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported options for Preset Tour Starting Condition.
/// </BLOCKQUOTE></PRE>
///
/// Element "StartingCondition" of type "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionOptions.
    tt__PTZPresetTourStartingConditionOptions*  StartingCondition              1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported options for Preset Tour Spot.
/// </BLOCKQUOTE></PRE>
///
/// Element "TourSpot" of type "http://www.onvif.org/ver10/schema":PTZPresetTourSpotOptions.
    tt__PTZPresetTourSpotOptions*        TourSpot                       1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourSpotOptions is a complexType.
///
/// @note class tt__PTZPresetTourSpotOptions operations:
/// - tt__PTZPresetTourSpotOptions* soap_new_tt__PTZPresetTourSpotOptions(soap*) allocate and default initialize
/// - tt__PTZPresetTourSpotOptions* soap_new_tt__PTZPresetTourSpotOptions(soap*, int num) allocate and default initialize an array
/// - tt__PTZPresetTourSpotOptions* soap_new_req_tt__PTZPresetTourSpotOptions(soap*, ...) allocate, set required members
/// - tt__PTZPresetTourSpotOptions* soap_new_set_tt__PTZPresetTourSpotOptions(soap*, ...) allocate, set all public members
/// - tt__PTZPresetTourSpotOptions::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZPresetTourSpotOptions(soap*, tt__PTZPresetTourSpotOptions*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourSpotOptions(soap*, tt__PTZPresetTourSpotOptions*) serialize to a stream
/// - tt__PTZPresetTourSpotOptions* tt__PTZPresetTourSpotOptions::soap_dup(soap*) returns deep copy of tt__PTZPresetTourSpotOptions, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZPresetTourSpotOptions::soap_del() deep deletes tt__PTZPresetTourSpotOptions data members, use only after tt__PTZPresetTourSpotOptions::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZPresetTourSpotOptions::soap_type() returns SOAP_TYPE_tt__PTZPresetTourSpotOptions or derived type identifier
class tt__PTZPresetTourSpotOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Supported options for detail definition of preset position of the tour spot.
/// </BLOCKQUOTE></PRE>
///
/// Element "PresetDetail" of type "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetailOptions.
    tt__PTZPresetTourPresetDetailOptions*  PresetDetail                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported range of stay time for a tour spot.
/// </BLOCKQUOTE></PRE>
///
/// Element "StayTime" of type "http://www.onvif.org/ver10/schema":DurationRange.
    tt__DurationRange*                   StayTime                       1;	///< Required element.
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetailOptions is a complexType.
///
/// @note class tt__PTZPresetTourPresetDetailOptions operations:
/// - tt__PTZPresetTourPresetDetailOptions* soap_new_tt__PTZPresetTourPresetDetailOptions(soap*) allocate and default initialize
/// - tt__PTZPresetTourPresetDetailOptions* soap_new_tt__PTZPresetTourPresetDetailOptions(soap*, int num) allocate and default initialize an array
/// - tt__PTZPresetTourPresetDetailOptions* soap_new_req_tt__PTZPresetTourPresetDetailOptions(soap*, ...) allocate, set required members
/// - tt__PTZPresetTourPresetDetailOptions* soap_new_set_tt__PTZPresetTourPresetDetailOptions(soap*, ...) allocate, set all public members
/// - tt__PTZPresetTourPresetDetailOptions::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZPresetTourPresetDetailOptions(soap*, tt__PTZPresetTourPresetDetailOptions*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourPresetDetailOptions(soap*, tt__PTZPresetTourPresetDetailOptions*) serialize to a stream
/// - tt__PTZPresetTourPresetDetailOptions* tt__PTZPresetTourPresetDetailOptions::soap_dup(soap*) returns deep copy of tt__PTZPresetTourPresetDetailOptions, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZPresetTourPresetDetailOptions::soap_del() deep deletes tt__PTZPresetTourPresetDetailOptions data members, use only after tt__PTZPresetTourPresetDetailOptions::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZPresetTourPresetDetailOptions::soap_type() returns SOAP_TYPE_tt__PTZPresetTourPresetDetailOptions or derived type identifier
class tt__PTZPresetTourPresetDetailOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   A list of available Preset Tokens for tour spots.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__ReferenceToken of length 0..unbounded.
    std::vector<tt__ReferenceToken     > PresetToken                    0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   An option to indicate Home postion for tour spots.
/// </BLOCKQUOTE></PRE>
///
/// Element "Home" of type xs:boolean.
    bool*                                Home                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Supported range of Pan and Tilt for tour spots.
/// </BLOCKQUOTE></PRE>
///
/// Element "PanTiltPositionSpace" of type "http://www.onvif.org/ver10/schema":Space2DDescription.
    tt__Space2DDescription*              PanTiltPositionSpace           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Supported range of Zoom for a tour spot.
/// </BLOCKQUOTE></PRE>
///
/// Element "ZoomPositionSpace" of type "http://www.onvif.org/ver10/schema":Space1DDescription.
    tt__Space1DDescription*              ZoomPositionSpace              0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetailOptionsExtension.
    tt__PTZPresetTourPresetDetailOptionsExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetailOptionsExtension is a complexType.
///
/// @note class tt__PTZPresetTourPresetDetailOptionsExtension operations:
/// - tt__PTZPresetTourPresetDetailOptionsExtension* soap_new_tt__PTZPresetTourPresetDetailOptionsExtension(soap*) allocate and default initialize
/// - tt__PTZPresetTourPresetDetailOptionsExtension* soap_new_tt__PTZPresetTourPresetDetailOptionsExtension(soap*, int num) allocate and default initialize an array
/// - tt__PTZPresetTourPresetDetailOptionsExtension* soap_new_req_tt__PTZPresetTourPresetDetailOptionsExtension(soap*, ...) allocate, set required members
/// - tt__PTZPresetTourPresetDetailOptionsExtension* soap_new_set_tt__PTZPresetTourPresetDetailOptionsExtension(soap*, ...) allocate, set all public members
/// - tt__PTZPresetTourPresetDetailOptionsExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZPresetTourPresetDetailOptionsExtension(soap*, tt__PTZPresetTourPresetDetailOptionsExtension*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourPresetDetailOptionsExtension(soap*, tt__PTZPresetTourPresetDetailOptionsExtension*) serialize to a stream
/// - tt__PTZPresetTourPresetDetailOptionsExtension* tt__PTZPresetTourPresetDetailOptionsExtension::soap_dup(soap*) returns deep copy of tt__PTZPresetTourPresetDetailOptionsExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZPresetTourPresetDetailOptionsExtension::soap_del() deep deletes tt__PTZPresetTourPresetDetailOptionsExtension data members, use only after tt__PTZPresetTourPresetDetailOptionsExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZPresetTourPresetDetailOptionsExtension::soap_type() returns SOAP_TYPE_tt__PTZPresetTourPresetDetailOptionsExtension or derived type identifier
class tt__PTZPresetTourPresetDetailOptionsExtension
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionOptions is a complexType.
///
/// @note class tt__PTZPresetTourStartingConditionOptions operations:
/// - tt__PTZPresetTourStartingConditionOptions* soap_new_tt__PTZPresetTourStartingConditionOptions(soap*) allocate and default initialize
/// - tt__PTZPresetTourStartingConditionOptions* soap_new_tt__PTZPresetTourStartingConditionOptions(soap*, int num) allocate and default initialize an array
/// - tt__PTZPresetTourStartingConditionOptions* soap_new_req_tt__PTZPresetTourStartingConditionOptions(soap*, ...) allocate, set required members
/// - tt__PTZPresetTourStartingConditionOptions* soap_new_set_tt__PTZPresetTourStartingConditionOptions(soap*, ...) allocate, set all public members
/// - tt__PTZPresetTourStartingConditionOptions::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZPresetTourStartingConditionOptions(soap*, tt__PTZPresetTourStartingConditionOptions*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourStartingConditionOptions(soap*, tt__PTZPresetTourStartingConditionOptions*) serialize to a stream
/// - tt__PTZPresetTourStartingConditionOptions* tt__PTZPresetTourStartingConditionOptions::soap_dup(soap*) returns deep copy of tt__PTZPresetTourStartingConditionOptions, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZPresetTourStartingConditionOptions::soap_del() deep deletes tt__PTZPresetTourStartingConditionOptions data members, use only after tt__PTZPresetTourStartingConditionOptions::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZPresetTourStartingConditionOptions::soap_type() returns SOAP_TYPE_tt__PTZPresetTourStartingConditionOptions or derived type identifier
class tt__PTZPresetTourStartingConditionOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Supported range of Recurring Time.
/// </BLOCKQUOTE></PRE>
///
/// Element "RecurringTime" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        RecurringTime                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Supported range of Recurring Duration.
/// </BLOCKQUOTE></PRE>
///
/// Element "RecurringDuration" of type "http://www.onvif.org/ver10/schema":DurationRange.
    tt__DurationRange*                   RecurringDuration              0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Supported options for Direction of Preset Tour.
/// </BLOCKQUOTE></PRE>
///
/// Vector of enum tt__PTZPresetTourDirection of length 0..unbounded.
    std::vector<enum tt__PTZPresetTourDirection> Direction                      0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionOptionsExtension.
    tt__PTZPresetTourStartingConditionOptionsExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionOptionsExtension is a complexType.
///
/// @note class tt__PTZPresetTourStartingConditionOptionsExtension operations:
/// - tt__PTZPresetTourStartingConditionOptionsExtension* soap_new_tt__PTZPresetTourStartingConditionOptionsExtension(soap*) allocate and default initialize
/// - tt__PTZPresetTourStartingConditionOptionsExtension* soap_new_tt__PTZPresetTourStartingConditionOptionsExtension(soap*, int num) allocate and default initialize an array
/// - tt__PTZPresetTourStartingConditionOptionsExtension* soap_new_req_tt__PTZPresetTourStartingConditionOptionsExtension(soap*, ...) allocate, set required members
/// - tt__PTZPresetTourStartingConditionOptionsExtension* soap_new_set_tt__PTZPresetTourStartingConditionOptionsExtension(soap*, ...) allocate, set all public members
/// - tt__PTZPresetTourStartingConditionOptionsExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZPresetTourStartingConditionOptionsExtension(soap*, tt__PTZPresetTourStartingConditionOptionsExtension*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourStartingConditionOptionsExtension(soap*, tt__PTZPresetTourStartingConditionOptionsExtension*) serialize to a stream
/// - tt__PTZPresetTourStartingConditionOptionsExtension* tt__PTZPresetTourStartingConditionOptionsExtension::soap_dup(soap*) returns deep copy of tt__PTZPresetTourStartingConditionOptionsExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZPresetTourStartingConditionOptionsExtension::soap_del() deep deletes tt__PTZPresetTourStartingConditionOptionsExtension data members, use only after tt__PTZPresetTourStartingConditionOptionsExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZPresetTourStartingConditionOptionsExtension::soap_type() returns SOAP_TYPE_tt__PTZPresetTourStartingConditionOptionsExtension or derived type identifier
class tt__PTZPresetTourStartingConditionOptionsExtension
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImagingStatus is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FocusStatus is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FocusConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImagingSettings is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImagingSettingsExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Exposure is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":WideDynamicRange is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":BacklightCompensation is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImagingOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":WideDynamicRangeOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":BacklightCompensationOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FocusOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ExposureOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":WhiteBalanceOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FocusMove is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AbsoluteFocus is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RelativeFocus is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ContinuousFocus is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MoveOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AbsoluteFocusOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RelativeFocusOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ContinuousFocusOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":WhiteBalance is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImagingStatus20 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImagingStatus20Extension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FocusStatus20 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FocusStatus20Extension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImagingSettings20 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImagingSettingsExtension20 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImagingSettingsExtension202 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImagingSettingsExtension203 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImagingSettingsExtension204 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImageStabilization is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImageStabilizationExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":IrCutFilterAutoAdjustment is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":IrCutFilterAutoAdjustmentExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":WideDynamicRange20 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":BacklightCompensation20 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Exposure20 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ToneCompensation is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ToneCompensationExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Defogging is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":DefoggingExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":NoiseReduction is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImagingOptions20 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImagingOptions20Extension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImagingOptions20Extension2 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImagingOptions20Extension3 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImagingOptions20Extension4 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImageStabilizationOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImageStabilizationOptionsExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":IrCutFilterAutoAdjustmentOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":IrCutFilterAutoAdjustmentOptionsExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":WideDynamicRangeOptions20 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":BacklightCompensationOptions20 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ExposureOptions20 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MoveOptions20 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RelativeFocusOptions20 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":WhiteBalance20 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":WhiteBalance20Extension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FocusConfiguration20 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FocusConfiguration20Extension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":WhiteBalanceOptions20 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":WhiteBalanceOptions20Extension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FocusOptions20 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FocusOptions20Extension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ToneCompensationOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":DefoggingOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":NoiseReductionOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MessageExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ItemList is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ItemListExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MessageDescription is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MessageDescriptionExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ItemListDescription is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ItemListDescriptionExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Polyline is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AnalyticsEngineConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AnalyticsEngineConfigurationExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RuleEngineConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RuleEngineConfigurationExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Config is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ConfigDescription is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ConfigDescriptionExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":SupportedRules is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":SupportedRulesExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":SupportedAnalyticsModules is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":SupportedAnalyticsModulesExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PolylineArray is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PolylineArrayExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PolylineArrayConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MotionExpression is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MotionExpressionConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":CellLayout is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PaneConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PaneLayout is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Layout is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":LayoutExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":CodingCapabilities is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":LayoutOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":LayoutOptionsExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PaneLayoutOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PaneOptionExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Receiver is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ReceiverConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ReceiverStateInformation is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":SourceReference is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":DateTimeRange is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RecordingSummary is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":SearchScope is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":SearchScopeExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZPositionFilter is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MetadataFilter is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FindRecordingResultList is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FindEventResultList is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FindEventResult is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FindPTZPositionResultList is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FindPTZPositionResult is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FindMetadataResultList is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FindMetadataResult is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RecordingInformation is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RecordingSourceInformation is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":TrackInformation is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MediaAttributes is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":TrackAttributes is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":TrackAttributesExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoAttributes is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AudioAttributes is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MetadataAttributes is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RecordingConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":TrackConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":GetRecordingsResponseItem is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":GetTracksResponseList is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":GetTracksResponseItem is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RecordingJobConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RecordingJobConfigurationExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RecordingJobSource is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RecordingJobSourceExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RecordingJobTrack is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RecordingJobStateInformation is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RecordingJobStateInformationExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RecordingJobStateSource is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RecordingJobStateTracks is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RecordingJobStateTrack is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":GetRecordingJobsResponseItem is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ReplayConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AnalyticsDeviceEngineConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AnalyticsDeviceEngineConfigurationExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":EngineConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AnalyticsEngineInputInfo is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AnalyticsEngineInputInfoExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":SourceIdentification is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":SourceIdentificationExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MetadataInput is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MetadataInputExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AnalyticsStateInformation is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AnalyticsState is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ActionEngineEventPayload is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ActionEngineEventPayloadExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AudioClassCandidate is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AudioClassDescriptor is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AudioClassDescriptorExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ActiveConnection is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ProfileStatus is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ProfileStatusExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":OSDPosConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":OSDPosConfigurationExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":OSDColor is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":OSDTextConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":OSDTextConfigurationExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":OSDImgConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":OSDImgConfigurationExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ColorspaceRange is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ColorOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":OSDColorOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":OSDColorOptionsExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":OSDTextOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":OSDTextOptionsExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":OSDImgOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":OSDImgOptionsExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":OSDConfigurationExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MaximumNumberOfOSDs is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":OSDConfigurationOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":OSDConfigurationOptionsExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FileProgress is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ArrayOfFileProgress is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ArrayOfFileProgressExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":StorageReferencePath is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":StorageReferencePathExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PolygonOptions is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":IntRange is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Range of values greater equal Min value and less equal Max value.
/// </BLOCKQUOTE></PRE>
///
/// @note class tt__IntRange operations:
/// - tt__IntRange* soap_new_tt__IntRange(soap*) allocate and default initialize
/// - tt__IntRange* soap_new_tt__IntRange(soap*, int num) allocate and default initialize an array
/// - tt__IntRange* soap_new_req_tt__IntRange(soap*, ...) allocate, set required members
/// - tt__IntRange* soap_new_set_tt__IntRange(soap*, ...) allocate, set all public members
/// - tt__IntRange::soap_default(soap*) default initialize members
/// - int soap_read_tt__IntRange(soap*, tt__IntRange*) deserialize from a stream
/// - int soap_write_tt__IntRange(soap*, tt__IntRange*) serialize to a stream
/// - tt__IntRange* tt__IntRange::soap_dup(soap*) returns deep copy of tt__IntRange, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__IntRange::soap_del() deep deletes tt__IntRange data members, use only after tt__IntRange::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__IntRange::soap_type() returns SOAP_TYPE_tt__IntRange or derived type identifier
class tt__IntRange
{ public:
/// Element "Min" of type xs:int.
    int                                  Min                            1;	///< Required element.
/// Element "Max" of type xs:int.
    int                                  Max                            1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Vector2D is a complexType.
///
/// @note class tt__Vector2D operations:
/// - tt__Vector2D* soap_new_tt__Vector2D(soap*) allocate and default initialize
/// - tt__Vector2D* soap_new_tt__Vector2D(soap*, int num) allocate and default initialize an array
/// - tt__Vector2D* soap_new_req_tt__Vector2D(soap*, ...) allocate, set required members
/// - tt__Vector2D* soap_new_set_tt__Vector2D(soap*, ...) allocate, set all public members
/// - tt__Vector2D::soap_default(soap*) default initialize members
/// - int soap_read_tt__Vector2D(soap*, tt__Vector2D*) deserialize from a stream
/// - int soap_write_tt__Vector2D(soap*, tt__Vector2D*) serialize to a stream
/// - tt__Vector2D* tt__Vector2D::soap_dup(soap*) returns deep copy of tt__Vector2D, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__Vector2D::soap_del() deep deletes tt__Vector2D data members, use only after tt__Vector2D::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__Vector2D::soap_type() returns SOAP_TYPE_tt__Vector2D or derived type identifier
class tt__Vector2D
{ public:
/// Attribute "x" of type xs:float.
  @ float                                x                              1;	///< Required attribute.
/// Attribute "y" of type xs:float.
  @ float                                y                              1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Pan/tilt coordinate space selector. The following options are defined:<ul>
///   <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/PositionGenericSpace</li>
///   <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/TranslationGenericSpace</li>
///   <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/VelocityGenericSpace</li>
///   <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/GenericSpeedSpace</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
///
/// Attribute "space" of type xs:anyURI.
  @ xsd__anyURI*                         space                          0;	///< Optional attribute.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Vector1D is a complexType.
///
/// @note class tt__Vector1D operations:
/// - tt__Vector1D* soap_new_tt__Vector1D(soap*) allocate and default initialize
/// - tt__Vector1D* soap_new_tt__Vector1D(soap*, int num) allocate and default initialize an array
/// - tt__Vector1D* soap_new_req_tt__Vector1D(soap*, ...) allocate, set required members
/// - tt__Vector1D* soap_new_set_tt__Vector1D(soap*, ...) allocate, set all public members
/// - tt__Vector1D::soap_default(soap*) default initialize members
/// - int soap_read_tt__Vector1D(soap*, tt__Vector1D*) deserialize from a stream
/// - int soap_write_tt__Vector1D(soap*, tt__Vector1D*) serialize to a stream
/// - tt__Vector1D* tt__Vector1D::soap_dup(soap*) returns deep copy of tt__Vector1D, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__Vector1D::soap_del() deep deletes tt__Vector1D data members, use only after tt__Vector1D::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__Vector1D::soap_type() returns SOAP_TYPE_tt__Vector1D or derived type identifier
class tt__Vector1D
{ public:
/// Attribute "x" of type xs:float.
  @ float                                x                              1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Zoom coordinate space selector. The following options are defined:<ul style="">
///   <li> http://www.onvif.org/ver10/tptz/ZoomSpaces/PositionGenericSpace</li>
///   <li> http://www.onvif.org/ver10/tptz/ZoomSpaces/TranslationGenericSpace</li>
///   <li> http://www.onvif.org/ver10/tptz/ZoomSpaces/VelocityGenericSpace</li>
///   <li> http://www.onvif.org/ver10/tptz/ZoomSpaces/ZoomGenericSpeedSpace</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
///
/// Attribute "space" of type xs:anyURI.
  @ xsd__anyURI*                         space                          0;	///< Optional attribute.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZVector is a complexType.
///
/// @note class tt__PTZVector operations:
/// - tt__PTZVector* soap_new_tt__PTZVector(soap*) allocate and default initialize
/// - tt__PTZVector* soap_new_tt__PTZVector(soap*, int num) allocate and default initialize an array
/// - tt__PTZVector* soap_new_req_tt__PTZVector(soap*, ...) allocate, set required members
/// - tt__PTZVector* soap_new_set_tt__PTZVector(soap*, ...) allocate, set all public members
/// - tt__PTZVector::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZVector(soap*, tt__PTZVector*) deserialize from a stream
/// - int soap_write_tt__PTZVector(soap*, tt__PTZVector*) serialize to a stream
/// - tt__PTZVector* tt__PTZVector::soap_dup(soap*) returns deep copy of tt__PTZVector, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZVector::soap_del() deep deletes tt__PTZVector data members, use only after tt__PTZVector::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZVector::soap_type() returns SOAP_TYPE_tt__PTZVector or derived type identifier
class tt__PTZVector
{ public:
/// <PRE><BLOCKQUOTE>
///   Pan and tilt position. The x component corresponds to pan and the y component to tilt.
/// </BLOCKQUOTE></PRE>
///
/// Element "PanTilt" of type "http://www.onvif.org/ver10/schema":Vector2D.
    tt__Vector2D*                        PanTilt                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   A zoom position.
/// </BLOCKQUOTE></PRE>
///
/// Element "Zoom" of type "http://www.onvif.org/ver10/schema":Vector1D.
    tt__Vector1D*                        Zoom                           0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZStatus is a complexType.
///
/// @note class tt__PTZStatus operations:
/// - tt__PTZStatus* soap_new_tt__PTZStatus(soap*) allocate and default initialize
/// - tt__PTZStatus* soap_new_tt__PTZStatus(soap*, int num) allocate and default initialize an array
/// - tt__PTZStatus* soap_new_req_tt__PTZStatus(soap*, ...) allocate, set required members
/// - tt__PTZStatus* soap_new_set_tt__PTZStatus(soap*, ...) allocate, set all public members
/// - tt__PTZStatus::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZStatus(soap*, tt__PTZStatus*) deserialize from a stream
/// - int soap_write_tt__PTZStatus(soap*, tt__PTZStatus*) serialize to a stream
/// - tt__PTZStatus* tt__PTZStatus::soap_dup(soap*) returns deep copy of tt__PTZStatus, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZStatus::soap_del() deep deletes tt__PTZStatus data members, use only after tt__PTZStatus::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZStatus::soap_type() returns SOAP_TYPE_tt__PTZStatus or derived type identifier
class tt__PTZStatus
{ public:
/// <PRE><BLOCKQUOTE>
///   Specifies the absolute position of the PTZ unit together with the Space references. The default absolute spaces of the corresponding PTZ configuration MUST be referenced within the Position element.
/// </BLOCKQUOTE></PRE>
///
/// Element "Position" of type "http://www.onvif.org/ver10/schema":PTZVector.
    tt__PTZVector*                       Position                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates if the Pan/Tilt/Zoom device unit is currently moving, idle or in an unknown state.
/// </BLOCKQUOTE></PRE>
///
/// Element "MoveStatus" of type "http://www.onvif.org/ver10/schema":PTZMoveStatus.
    tt__PTZMoveStatus*                   MoveStatus                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   States a current PTZ error.
/// </BLOCKQUOTE></PRE>
///
/// Element "Error" of type xs:string.
    std::string*                         Error                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Specifies the UTC time when this status was generated.
/// </BLOCKQUOTE></PRE>
///
/// Element "UtcTime" of type xs:dateTime.
    time_t                               UtcTime                        1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZMoveStatus is a complexType.
///
/// @note class tt__PTZMoveStatus operations:
/// - tt__PTZMoveStatus* soap_new_tt__PTZMoveStatus(soap*) allocate and default initialize
/// - tt__PTZMoveStatus* soap_new_tt__PTZMoveStatus(soap*, int num) allocate and default initialize an array
/// - tt__PTZMoveStatus* soap_new_req_tt__PTZMoveStatus(soap*, ...) allocate, set required members
/// - tt__PTZMoveStatus* soap_new_set_tt__PTZMoveStatus(soap*, ...) allocate, set all public members
/// - tt__PTZMoveStatus::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZMoveStatus(soap*, tt__PTZMoveStatus*) deserialize from a stream
/// - int soap_write_tt__PTZMoveStatus(soap*, tt__PTZMoveStatus*) serialize to a stream
/// - tt__PTZMoveStatus* tt__PTZMoveStatus::soap_dup(soap*) returns deep copy of tt__PTZMoveStatus, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZMoveStatus::soap_del() deep deletes tt__PTZMoveStatus data members, use only after tt__PTZMoveStatus::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZMoveStatus::soap_type() returns SOAP_TYPE_tt__PTZMoveStatus or derived type identifier
class tt__PTZMoveStatus
{ public:

/// </BLOCKQUOTE></PRE>
///
/// Element "PanTilt" of type "http://www.onvif.org/ver10/schema":MoveStatus.
    enum tt__MoveStatus*                 PanTilt                        0;	///< Optional element.

/// </BLOCKQUOTE></PRE>
///
/// Element "Zoom" of type "http://www.onvif.org/ver10/schema":MoveStatus.
    enum tt__MoveStatus*                 Zoom                           0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

// Optimization: complexType "http://www.onvif.org/ver10/schema":Vector is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Rectangle is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Polygon is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Color is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ColorCovariance is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ColorDescriptor is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Transformation is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":TransformationExtension is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":GeoLocation is a complexType.
///
/// @note class tt__GeoLocation operations:
/// - tt__GeoLocation* soap_new_tt__GeoLocation(soap*) allocate and default initialize
/// - tt__GeoLocation* soap_new_tt__GeoLocation(soap*, int num) allocate and default initialize an array
/// - tt__GeoLocation* soap_new_req_tt__GeoLocation(soap*, ...) allocate, set required members
/// - tt__GeoLocation* soap_new_set_tt__GeoLocation(soap*, ...) allocate, set all public members
/// - tt__GeoLocation::soap_default(soap*) default initialize members
/// - int soap_read_tt__GeoLocation(soap*, tt__GeoLocation*) deserialize from a stream
/// - int soap_write_tt__GeoLocation(soap*, tt__GeoLocation*) serialize to a stream
/// - tt__GeoLocation* tt__GeoLocation::soap_dup(soap*) returns deep copy of tt__GeoLocation, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__GeoLocation::soap_del() deep deletes tt__GeoLocation data members, use only after tt__GeoLocation::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__GeoLocation::soap_type() returns SOAP_TYPE_tt__GeoLocation or derived type identifier
class tt__GeoLocation
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   East west location as angle.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "lon" of type xs:double.
  @ double*                              lon                            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   North south location as angle.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "lat" of type xs:double.
  @ double*                              lat                            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Hight in meters above sea level.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "elevation" of type xs:float.
  @ float*                               elevation                      0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

// Optimization: complexType "http://www.onvif.org/ver10/schema":GeoOrientation is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":LocalLocation is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":LocalOrientation is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":LocationEntity is not used and was removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":StringItems
// Optimization: complexType "http://www.onvif.org/ver10/schema":StringItems is not used and was removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":Message
// Optimization: complexType "http://www.onvif.org/ver10/schema":Message is not used and was removed


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":QueryExpressionType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":FilterType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicyType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":NotificationMessageHolderType is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":NotificationProducerRP
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":NotificationProducerRP is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscriptionManagerRP
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":SubscriptionManagerRP is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Notify
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":Notify is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UseRaw
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":UseRaw is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Subscribe
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":Subscribe is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscribeResponse
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":SubscribeResponse is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessage
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessage is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessageResponse
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessageResponse is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetMessages
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":GetMessages is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetMessagesResponse
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":GetMessagesResponse is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":DestroyPullPoint
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":DestroyPullPoint is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":DestroyPullPointResponse
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":DestroyPullPointResponse is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":CreatePullPoint
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":CreatePullPoint is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":CreatePullPointResponse
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":CreatePullPointResponse is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Renew
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":Renew is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":RenewResponse
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":RenewResponse is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Unsubscribe
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":Unsubscribe is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnsubscribeResponse
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":UnsubscribeResponse is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":PauseSubscription
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":PauseSubscription is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":PauseSubscriptionResponse
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":PauseSubscriptionResponse is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ResumeSubscription
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":ResumeSubscription is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ResumeSubscriptionResponse
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":ResumeSubscriptionResponse is not used and was removed


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/

// Optimization: complexType "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType is not used and was removed


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/

// Optimization: complexType "http://docs.oasis-open.org/wsn/t-1":Documentation is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/t-1":ExtensibleDocumented is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/t-1":QueryExpressionType is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoSource is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AudioSource is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoSourceConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":JpegOptions2 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Mpeg4Options2 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":H264Options2 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoEncoder2Configuration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AudioSourceConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AudioEncoder2Configuration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MetadataConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoOutput is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoOutputConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AudioOutput is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AudioOutputConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":NetworkInterface is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":CertificateUsage is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RelayOutput is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":DigitalInput is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":PTZNode is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
/// @note class tt__PTZNode operations:
/// - tt__PTZNode* soap_new_tt__PTZNode(soap*) allocate and default initialize
/// - tt__PTZNode* soap_new_tt__PTZNode(soap*, int num) allocate and default initialize an array
/// - tt__PTZNode* soap_new_req_tt__PTZNode(soap*, ...) allocate, set required members
/// - tt__PTZNode* soap_new_set_tt__PTZNode(soap*, ...) allocate, set all public members
/// - tt__PTZNode::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZNode(soap*, tt__PTZNode*) deserialize from a stream
/// - int soap_write_tt__PTZNode(soap*, tt__PTZNode*) serialize to a stream
/// - tt__PTZNode* tt__PTZNode::soap_dup(soap*) returns deep copy of tt__PTZNode, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZNode::soap_del() deep deletes tt__PTZNode data members, use only after tt__PTZNode::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZNode::soap_type() returns SOAP_TYPE_tt__PTZNode or derived type identifier
class tt__PTZNode : public tt__DeviceEntity
{ public:
/*  INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__DeviceEntity */
/// <PRE><BLOCKQUOTE>
///   A unique identifier that is used to reference PTZ Nodes.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name*                            Name                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   A list of Coordinate Systems available for the PTZ Node. For each Coordinate System, the PTZ Node MUST specify its allowed range.
/// </BLOCKQUOTE></PRE>
///
/// Element "SupportedPTZSpaces" of type "http://www.onvif.org/ver10/schema":PTZSpaces.
    tt__PTZSpaces*                       SupportedPTZSpaces             1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   All preset operations MUST be available for this PTZ Node if one preset is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaximumNumberOfPresets" of type xs:int.
    int                                  MaximumNumberOfPresets         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A boolean operator specifying the availability of a home position. If set to true, the Home Position Operations MUST be available for this PTZ Node.
/// </BLOCKQUOTE></PRE>
///
/// Element "HomeSupported" of type xs:boolean.
    bool                                 HomeSupported                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A list of supported Auxiliary commands. If the list is not empty, the Auxiliary Operations MUST be available for this PTZ Node.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__AuxiliaryData of length 0..unbounded.
    std::vector<tt__AuxiliaryData      > AuxiliaryCommands              0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PTZNodeExtension.
    tt__PTZNodeExtension*                Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indication whether the HomePosition of a Node is fixed or it can be changed via the SetHomePosition command.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "FixedHomePosition" of type xs:boolean.
  @ bool*                                FixedHomePosition              0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indication whether the Node supports the geo-referenced move command.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "GeoMove" of type xs:boolean.
  @ bool*                                GeoMove                        0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":PTZConfiguration is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
/// @note class tt__PTZConfiguration operations:
/// - tt__PTZConfiguration* soap_new_tt__PTZConfiguration(soap*) allocate and default initialize
/// - tt__PTZConfiguration* soap_new_tt__PTZConfiguration(soap*, int num) allocate and default initialize an array
/// - tt__PTZConfiguration* soap_new_req_tt__PTZConfiguration(soap*, ...) allocate, set required members
/// - tt__PTZConfiguration* soap_new_set_tt__PTZConfiguration(soap*, ...) allocate, set all public members
/// - tt__PTZConfiguration::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZConfiguration(soap*, tt__PTZConfiguration*) deserialize from a stream
/// - int soap_write_tt__PTZConfiguration(soap*, tt__PTZConfiguration*) serialize to a stream
/// - tt__PTZConfiguration* tt__PTZConfiguration::soap_dup(soap*) returns deep copy of tt__PTZConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZConfiguration::soap_del() deep deletes tt__PTZConfiguration data members, use only after tt__PTZConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZConfiguration::soap_type() returns SOAP_TYPE_tt__PTZConfiguration or derived type identifier
class tt__PTZConfiguration : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// </BLOCKQUOTE></PRE>
///
/// Element "UseCount" of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely references this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__ConfigurationEntity */
/// <PRE><BLOCKQUOTE>
///   A mandatory reference to the PTZ Node that the PTZ Configuration belongs to.
/// </BLOCKQUOTE></PRE>
///
/// Element "NodeToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   NodeToken                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   If the PTZ Node supports absolute Pan/Tilt movements, it shall specify one Absolute Pan/Tilt Position Space as default.
/// </BLOCKQUOTE></PRE>
///
/// Element "DefaultAbsolutePantTiltPositionSpace" of type xs:anyURI.
    xsd__anyURI*                         DefaultAbsolutePantTiltPositionSpace 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the PTZ Node supports absolute zoom movements, it shall specify one Absolute Zoom Position Space as default.
/// </BLOCKQUOTE></PRE>
///
/// Element "DefaultAbsoluteZoomPositionSpace" of type xs:anyURI.
    xsd__anyURI*                         DefaultAbsoluteZoomPositionSpace 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the PTZ Node supports relative Pan/Tilt movements, it shall specify one RelativePan/Tilt Translation Space as default.
/// </BLOCKQUOTE></PRE>
///
/// Element "DefaultRelativePanTiltTranslationSpace" of type xs:anyURI.
    xsd__anyURI*                         DefaultRelativePanTiltTranslationSpace 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the PTZ Node supports relative zoom movements, it shall specify one Relative Zoom Translation Space as default.
/// </BLOCKQUOTE></PRE>
///
/// Element "DefaultRelativeZoomTranslationSpace" of type xs:anyURI.
    xsd__anyURI*                         DefaultRelativeZoomTranslationSpace 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the PTZ Node supports continuous Pan/Tilt movements, it shall specify one Continuous Pan/Tilt Velocity Space as default.
/// </BLOCKQUOTE></PRE>
///
/// Element "DefaultContinuousPanTiltVelocitySpace" of type xs:anyURI.
    xsd__anyURI*                         DefaultContinuousPanTiltVelocitySpace 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the PTZ Node supports continuous zoom movements, it shall specify one Continuous Zoom Velocity Space as default.
/// </BLOCKQUOTE></PRE>
///
/// Element "DefaultContinuousZoomVelocitySpace" of type xs:anyURI.
    xsd__anyURI*                         DefaultContinuousZoomVelocitySpace 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the PTZ Node supports absolute or relative PTZ movements, it shall specify corresponding default Pan/Tilt and Zoom speeds.
/// </BLOCKQUOTE></PRE>
///
/// Element "DefaultPTZSpeed" of type "http://www.onvif.org/ver10/schema":PTZSpeed.
    tt__PTZSpeed*                        DefaultPTZSpeed                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the PTZ Node supports continuous movements, it shall specify a default timeout, after which the movement stops.
/// </BLOCKQUOTE></PRE>
///
/// Element "DefaultPTZTimeout" of type xs:duration.
    xsd__duration*                       DefaultPTZTimeout              0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The Pan/Tilt limits element should be present for a PTZ Node that supports an absolute Pan/Tilt. If the element is present it signals the support for configurable Pan/Tilt limits. If limits are enabled, the Pan/Tilt movements shall always stay within the specified range. The Pan/Tilt limits are disabled by setting the limits to INF or +INF.
/// </BLOCKQUOTE></PRE>
///
/// Element "PanTiltLimits" of type "http://www.onvif.org/ver10/schema":PanTiltLimits.
    tt__PanTiltLimits*                   PanTiltLimits                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The Zoom limits element should be present for a PTZ Node that supports absolute zoom. If the element is present it signals the supports for configurable Zoom limits. If limits are enabled the zoom movements shall always stay within the specified range. The Zoom limits are disabled by settings the limits to -INF and +INF.
/// </BLOCKQUOTE></PRE>
///
/// Element "ZoomLimits" of type "http://www.onvif.org/ver10/schema":ZoomLimits.
    tt__ZoomLimits*                      ZoomLimits                     0;	///< Optional element.

/// </BLOCKQUOTE></PRE>
///
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PTZConfigurationExtension.
    tt__PTZConfigurationExtension*       Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The optional acceleration ramp used by the device when moving.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MoveRamp" of type xs:int.
  @ int*                                 MoveRamp                       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   The optional acceleration ramp used by the device when recalling presets.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "PresetRamp" of type xs:int.
  @ int*                                 PresetRamp                     0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   The optional acceleration ramp used by the device when executing PresetTours.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "PresetTourRamp" of type xs:int.
  @ int*                                 PresetTourRamp                 0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

// Optimization: complexType "http://www.onvif.org/ver10/schema":EventFilter is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AnalyticsEngine is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AnalyticsEngineInput is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AnalyticsEngineControl is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":OSDConfiguration is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":PauseFailedFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/t-1":TopicNamespaceType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/t-1":TopicType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/t-1":TopicSetType is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":OSDReference is not used and was removed


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver20/ptz/wsdl                                      *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":Capabilities of type "http://www.onvif.org/ver20/ptz/wsdl":Capabilities.
// Optimization: element not used and removed


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver20/ptz/wsdl                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":StringList of type "http://www.onvif.org/ver10/schema":StringList.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":IntRange of type "http://www.onvif.org/ver10/schema":IntRange.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":IntList of type "http://www.onvif.org/ver10/schema":IntAttrList.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":FloatRange of type "http://www.onvif.org/ver10/schema":FloatRange.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":FloatList of type "http://www.onvif.org/ver10/schema":FloatAttrList.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":DurationRange of type "http://www.onvif.org/ver10/schema":DurationRange.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":IntRectangleRange of type "http://www.onvif.org/ver10/schema":IntRectangleRange.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":VideoSourceConfiguration of type "http://www.onvif.org/ver10/schema":VideoSourceConfiguration.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":AudioSourceConfiguration of type "http://www.onvif.org/ver10/schema":AudioSourceConfiguration.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration of type "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration of type "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration of type "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":PTZConfiguration of type "http://www.onvif.org/ver10/schema":PTZConfiguration.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":MetadataConfiguration of type "http://www.onvif.org/ver10/schema":MetadataConfiguration.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":AudioOutputConfiguration of type "http://www.onvif.org/ver10/schema":AudioOutputConfiguration.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration of type "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":Polyline of type "http://www.onvif.org/ver10/schema":Polyline.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":PolygonOptions of type "http://www.onvif.org/ver10/schema":PolygonOptions.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":Polygon of type "http://www.onvif.org/ver10/schema":Polygon.
// Optimization: element not used and removed


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicExpression of type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":FixedTopicSet of type xs:boolean.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialect of type xs:anyURI.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ConsumerReference of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Filter of type "http://docs.oasis-open.org/wsn/b-2":FilterType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicy of type "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicyType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":CreationTime of type xs:dateTime.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscriptionReference of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Topic of type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ProducerReference of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":NotificationMessage of type "http://docs.oasis-open.org/wsn/b-2":NotificationMessageHolderType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":CurrentTime of type xs:dateTime.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":TerminationTime of type xs:dateTime.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ProducerProperties of type "http://docs.oasis-open.org/wsn/b-2":QueryExpressionType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":MessageContent of type "http://docs.oasis-open.org/wsn/b-2":QueryExpressionType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFault of type "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFault of type "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFault of type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFault of type "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFault of type "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFault of type "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFault of type "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFault of type "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFault of type "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFault of type "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFault of type "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFault of type "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFault of type "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFault of type "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFault of type "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFault of type "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFault of type "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFault of type "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":PauseFailedFault of type "http://docs.oasis-open.org/wsn/b-2":PauseFailedFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFault of type "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFaultType.
// Optimization: element not used and removed


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://docs.oasis-open.org/wsrf/bf-2":BaseFault of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
// Optimization: element not used and removed


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/t-1":TopicNamespace of type "http://docs.oasis-open.org/wsn/t-1":TopicNamespaceType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/t-1":TopicSet of type "http://docs.oasis-open.org/wsn/t-1":TopicSetType.
// Optimization: element not used and removed


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level attribute "http://docs.oasis-open.org/wsn/t-1":topicNamespaceLocation of simpleType xs:anyURI.
// Optimization: attribute not used and removed

/// @brief Top-level attribute "http://docs.oasis-open.org/wsn/t-1":topic of simpleType xs:boolean.
// Optimization: attribute not used and removed


/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/

// This service supports SOAP 1.2 namespaces:
#import "soap12.h"

//gsoap tptz service name:	PTZBinding 
//gsoap tptz service type:	PTZ 
//gsoap tptz service namespace:	http://www.onvif.org/ver20/ptz/wsdl 
//gsoap tptz service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage PTZService Definitions

@section PTZService_bindings Service Bindings

  - @ref PTZBinding

@section PTZService_more More Information

  - @ref page_notes "Notes"

  - @ref page_XMLDataBinding "XML Data Binding"

  - @ref SOAP_ENV__Header "SOAP Header Content" (when applicable)

  - @ref SOAP_ENV__Detail "SOAP Fault Detail Content" (when applicable)


*/

/** @page PTZBinding Binding "PTZBinding"

@section PTZBinding_operations Operations of Binding "PTZBinding"

  - @ref __tptz__GetServiceCapabilities

  - @ref __tptz__GetConfigurations

  - @ref __tptz__GetPresets

  - @ref __tptz__SetPreset

  - @ref __tptz__RemovePreset

  - @ref __tptz__GotoPreset

  - @ref __tptz__GetStatus

  - @ref __tptz__GetConfiguration

  - @ref __tptz__GetNodes

  - @ref __tptz__GetNode

  - @ref __tptz__SetConfiguration

  - @ref __tptz__GetConfigurationOptions

  - @ref __tptz__GotoHomePosition

  - @ref __tptz__SetHomePosition

  - @ref __tptz__ContinuousMove

  - @ref __tptz__RelativeMove

  - @ref __tptz__SendAuxiliaryCommand

  - @ref __tptz__AbsoluteMove

  - @ref __tptz__GeoMove

  - @ref __tptz__Stop

  - @ref __tptz__GetPresetTours

  - @ref __tptz__GetPresetTour

  - @ref __tptz__GetPresetTourOptions

  - @ref __tptz__CreatePresetTour

  - @ref __tptz__ModifyPresetTour

  - @ref __tptz__OperatePresetTour

  - @ref __tptz__RemovePresetTour

  - @ref __tptz__GetCompatibleConfigurations

  - @ref __tptz__MoveAndStartTracking

@section PTZBinding_ports Default endpoints of Binding "PTZBinding"

@note Use wsdl2h option -Nname to change the service binding prefix name


*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   PTZBinding                                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetServiceCapabilities                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GetServiceCapabilities" of service binding "PTZBinding".
Returns the capabilities of the PTZ service. The result is returned in a typed answer.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/GetServiceCapabilities"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetServiceCapabilities"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetServiceCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetServiceCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__GetServiceCapabilities*      tptz__GetServiceCapabilities,
    // output parameters:
    _tptz__GetServiceCapabilitiesResponse&tptz__GetServiceCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetServiceCapabilities(
    struct soap *soap,
    // input parameters:
    _tptz__GetServiceCapabilities*      tptz__GetServiceCapabilities,
    // output parameters:
    _tptz__GetServiceCapabilitiesResponse&tptz__GetServiceCapabilitiesResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h generated with soapcpp2):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h generated with soapcpp2):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	GetServiceCapabilities SOAP
//gsoap tptz service method-style:	GetServiceCapabilities document
//gsoap tptz service method-encoding:	GetServiceCapabilities literal
//gsoap tptz service method-input-action:	GetServiceCapabilities http://www.onvif.org/ver20/ptz/wsdl/GetServiceCapabilities
//gsoap tptz service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver20/ptz/wsdl/GetServiceCapabilitiesResponse
int __tptz__GetServiceCapabilities(
    _tptz__GetServiceCapabilities*      tptz__GetServiceCapabilities,	///< Input parameter
    _tptz__GetServiceCapabilitiesResponse&tptz__GetServiceCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetConfigurations                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GetConfigurations" of service binding "PTZBinding".
		        Get all the existing PTZConfigurations from the device.
				<br/>
				The default Position/Translation/Velocity Spaces
are introduced to allow NVCs sending move
				requests without the need to specify a certain coordinate
system. The default Speeds are
				introduced to control the speed of move requests
(absolute, relative, preset), where no
				explicit speed has been set.<br/>
				The allowed pan and tilt range for Pan/Tilt Limits
is defined by a two-dimensional space range
				that is mapped to a specific Absolute Pan/Tilt Position
Space. At least one Pan/Tilt Position
				Space is required by the PTZNode to support Pan/Tilt
limits. The limits apply to all supported
				absolute, relative and continuous Pan/Tilt movements.
The limits shall be checked within the
				coordinate system for which the limits have been
specified. That means that even if
				movements are specified in a different coordinate
system, the requested movements shall be
				transformed to the coordinate system of the limits
where the limits can be checked. When a
				relative or continuous movements is specified, which
would leave the specified limits, the PTZ
				unit has to move along the specified limits. The
Zoom Limits have to be interpreted
				accordingly.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/GetConfigurations"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetConfigurations"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__GetConfigurations*           tptz__GetConfigurations,
    // output parameters:
    _tptz__GetConfigurationsResponse   &tptz__GetConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetConfigurations(
    struct soap *soap,
    // input parameters:
    _tptz__GetConfigurations*           tptz__GetConfigurations,
    // output parameters:
    _tptz__GetConfigurationsResponse   &tptz__GetConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h generated with soapcpp2):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h generated with soapcpp2):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	GetConfigurations SOAP
//gsoap tptz service method-style:	GetConfigurations document
//gsoap tptz service method-encoding:	GetConfigurations literal
//gsoap tptz service method-input-action:	GetConfigurations http://www.onvif.org/ver20/ptz/wsdl/GetConfigurations
//gsoap tptz service method-output-action:	GetConfigurations http://www.onvif.org/ver20/ptz/wsdl/GetConfigurationsResponse
int __tptz__GetConfigurations(
    _tptz__GetConfigurations*           tptz__GetConfigurations,	///< Input parameter
    _tptz__GetConfigurationsResponse   &tptz__GetConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetPresets                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GetPresets" of service binding "PTZBinding".
        Operation to request all PTZ presets for the PTZNode
        in the selected profile. The operation is supported if there is support
        for at least on PTZ preset by the PTZNode.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/GetPresets"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetPresets"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetPresetsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetPresets(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__GetPresets*                  tptz__GetPresets,
    // output parameters:
    _tptz__GetPresetsResponse          &tptz__GetPresetsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetPresets(
    struct soap *soap,
    // input parameters:
    _tptz__GetPresets*                  tptz__GetPresets,
    // output parameters:
    _tptz__GetPresetsResponse          &tptz__GetPresetsResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h generated with soapcpp2):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h generated with soapcpp2):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	GetPresets SOAP
//gsoap tptz service method-style:	GetPresets document
//gsoap tptz service method-encoding:	GetPresets literal
//gsoap tptz service method-input-action:	GetPresets http://www.onvif.org/ver20/ptz/wsdl/GetPresets
//gsoap tptz service method-output-action:	GetPresets http://www.onvif.org/ver20/ptz/wsdl/GetPresetsResponse
int __tptz__GetPresets(
    _tptz__GetPresets*                  tptz__GetPresets,	///< Input parameter
    _tptz__GetPresetsResponse          &tptz__GetPresetsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__SetPreset                                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__SetPreset" of service binding "PTZBinding".
				The SetPreset command saves the current device position
parameters so that the device can
				move to the saved preset position through the GotoPreset
operation.
				In order to create a new preset, the SetPresetRequest
contains no PresetToken. If creation is
				successful, the Response contains the PresetToken
which uniquely identifies the Preset. An
				existing Preset can be overwritten by specifying
the PresetToken of the corresponding Preset.
				In both cases (overwriting or creation) an optional
PresetName can be specified. The
				operation fails if the PTZ device is moving during
the SetPreset operation.
				The device MAY internally save additional states
such as imaging properties in the PTZ
				Preset which then should be recalled in the GotoPreset
operation.      

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/SetPreset"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/SetPreset"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/SetPresetResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__SetPreset(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__SetPreset*                   tptz__SetPreset,
    // output parameters:
    _tptz__SetPresetResponse           &tptz__SetPresetResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__SetPreset(
    struct soap *soap,
    // input parameters:
    _tptz__SetPreset*                   tptz__SetPreset,
    // output parameters:
    _tptz__SetPresetResponse           &tptz__SetPresetResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h generated with soapcpp2):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h generated with soapcpp2):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	SetPreset SOAP
//gsoap tptz service method-style:	SetPreset document
//gsoap tptz service method-encoding:	SetPreset literal
//gsoap tptz service method-input-action:	SetPreset http://www.onvif.org/ver20/ptz/wsdl/SetPreset
//gsoap tptz service method-output-action:	SetPreset http://www.onvif.org/ver20/ptz/wsdl/SetPresetResponse
int __tptz__SetPreset(
    _tptz__SetPreset*                   tptz__SetPreset,	///< Input parameter
    _tptz__SetPresetResponse           &tptz__SetPresetResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__RemovePreset                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__RemovePreset" of service binding "PTZBinding".
        Operation to remove a PTZ preset for the Node in
        the
        selected profile. The operation is supported if the
        PresetPosition
        capability exists for teh Node in the
        selected profile.
      

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/RemovePreset"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/RemovePreset"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/RemovePresetResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__RemovePreset(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__RemovePreset*                tptz__RemovePreset,
    // output parameters:
    _tptz__RemovePresetResponse        &tptz__RemovePresetResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__RemovePreset(
    struct soap *soap,
    // input parameters:
    _tptz__RemovePreset*                tptz__RemovePreset,
    // output parameters:
    _tptz__RemovePresetResponse        &tptz__RemovePresetResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h generated with soapcpp2):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h generated with soapcpp2):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	RemovePreset SOAP
//gsoap tptz service method-style:	RemovePreset document
//gsoap tptz service method-encoding:	RemovePreset literal
//gsoap tptz service method-input-action:	RemovePreset http://www.onvif.org/ver20/ptz/wsdl/RemovePreset
//gsoap tptz service method-output-action:	RemovePreset http://www.onvif.org/ver20/ptz/wsdl/RemovePresetResponse
int __tptz__RemovePreset(
    _tptz__RemovePreset*                tptz__RemovePreset,	///< Input parameter
    _tptz__RemovePresetResponse        &tptz__RemovePresetResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GotoPreset                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GotoPreset" of service binding "PTZBinding".
        Operation to go to a saved preset position for the
        PTZNode in the selected profile. The operation is supported if there is
        support for at least on PTZ preset by the PTZNode.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/GotoPreset"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GotoPreset"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GotoPresetResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GotoPreset(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__GotoPreset*                  tptz__GotoPreset,
    // output parameters:
    _tptz__GotoPresetResponse          &tptz__GotoPresetResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GotoPreset(
    struct soap *soap,
    // input parameters:
    _tptz__GotoPreset*                  tptz__GotoPreset,
    // output parameters:
    _tptz__GotoPresetResponse          &tptz__GotoPresetResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h generated with soapcpp2):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h generated with soapcpp2):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	GotoPreset SOAP
//gsoap tptz service method-style:	GotoPreset document
//gsoap tptz service method-encoding:	GotoPreset literal
//gsoap tptz service method-input-action:	GotoPreset http://www.onvif.org/ver20/ptz/wsdl/GotoPreset
//gsoap tptz service method-output-action:	GotoPreset http://www.onvif.org/ver20/ptz/wsdl/GotoPresetResponse
int __tptz__GotoPreset(
    _tptz__GotoPreset*                  tptz__GotoPreset,	///< Input parameter
    _tptz__GotoPresetResponse          &tptz__GotoPresetResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetStatus                                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GetStatus" of service binding "PTZBinding".
				Operation to request PTZ status for the Node in
the
				selected profile.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/GetStatus"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetStatus"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetStatusResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetStatus(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__GetStatus*                   tptz__GetStatus,
    // output parameters:
    _tptz__GetStatusResponse           &tptz__GetStatusResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetStatus(
    struct soap *soap,
    // input parameters:
    _tptz__GetStatus*                   tptz__GetStatus,
    // output parameters:
    _tptz__GetStatusResponse           &tptz__GetStatusResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h generated with soapcpp2):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h generated with soapcpp2):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	GetStatus SOAP
//gsoap tptz service method-style:	GetStatus document
//gsoap tptz service method-encoding:	GetStatus literal
//gsoap tptz service method-input-action:	GetStatus http://www.onvif.org/ver20/ptz/wsdl/GetStatus
//gsoap tptz service method-output-action:	GetStatus http://www.onvif.org/ver20/ptz/wsdl/GetStatusResponse
int __tptz__GetStatus(
    _tptz__GetStatus*                   tptz__GetStatus,	///< Input parameter
    _tptz__GetStatusResponse           &tptz__GetStatusResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetConfiguration                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GetConfiguration" of service binding "PTZBinding".
Get a specific PTZconfiguration from the device, identified by its reference token
or name.
				<br/>
				The default Position/Translation/Velocity Spaces
are introduced to allow NVCs sending move
				requests without the need to specify a certain coordinate
system. The default Speeds are
				introduced to control the speed of move requests
(absolute, relative, preset), where no
				explicit speed has been set.<br/>
				The allowed pan and tilt range for Pan/Tilt Limits
is defined by a two-dimensional space range
				that is mapped to a specific Absolute Pan/Tilt Position
Space. At least one Pan/Tilt Position
				Space is required by the PTZNode to support Pan/Tilt
limits. The limits apply to all supported
				absolute, relative and continuous Pan/Tilt movements.
The limits shall be checked within the
				coordinate system for which the limits have been
specified. That means that even if
				movements are specified in a different coordinate
system, the requested movements shall be
				transformed to the coordinate system of the limits
where the limits can be checked. When a
				relative or continuous movements is specified, which
would leave the specified limits, the PTZ
				unit has to move along the specified limits. The
Zoom Limits have to be interpreted
				accordingly.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/GetConfiguration"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetConfiguration"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__GetConfiguration*            tptz__GetConfiguration,
    // output parameters:
    _tptz__GetConfigurationResponse    &tptz__GetConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetConfiguration(
    struct soap *soap,
    // input parameters:
    _tptz__GetConfiguration*            tptz__GetConfiguration,
    // output parameters:
    _tptz__GetConfigurationResponse    &tptz__GetConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h generated with soapcpp2):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h generated with soapcpp2):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	GetConfiguration SOAP
//gsoap tptz service method-style:	GetConfiguration document
//gsoap tptz service method-encoding:	GetConfiguration literal
//gsoap tptz service method-input-action:	GetConfiguration http://www.onvif.org/ver20/ptz/wsdl/GetConfiguration
//gsoap tptz service method-output-action:	GetConfiguration http://www.onvif.org/ver20/ptz/wsdl/GetConfigurationResponse
int __tptz__GetConfiguration(
    _tptz__GetConfiguration*            tptz__GetConfiguration,	///< Input parameter
    _tptz__GetConfigurationResponse    &tptz__GetConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetNodes                                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GetNodes" of service binding "PTZBinding".
				Get the descriptions of the available PTZ Nodes.
				<br/>
				A PTZ-capable device may have multiple PTZ Nodes.
The PTZ Nodes may represent
				mechanical PTZ drivers, uploaded PTZ drivers or
digital PTZ drivers. PTZ Nodes are the
				lowest level entities in the PTZ control API and
reflect the supported PTZ capabilities. The
				PTZ Node is referenced either by its name or by
its reference token. 
      		

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/GetNodes"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetNodes"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetNodesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetNodes(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__GetNodes*                    tptz__GetNodes,
    // output parameters:
    _tptz__GetNodesResponse            &tptz__GetNodesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetNodes(
    struct soap *soap,
    // input parameters:
    _tptz__GetNodes*                    tptz__GetNodes,
    // output parameters:
    _tptz__GetNodesResponse            &tptz__GetNodesResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h generated with soapcpp2):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h generated with soapcpp2):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	GetNodes SOAP
//gsoap tptz service method-style:	GetNodes document
//gsoap tptz service method-encoding:	GetNodes literal
//gsoap tptz service method-input-action:	GetNodes http://www.onvif.org/ver20/ptz/wsdl/GetNodes
//gsoap tptz service method-output-action:	GetNodes http://www.onvif.org/ver20/ptz/wsdl/GetNodesResponse
int __tptz__GetNodes(
    _tptz__GetNodes*                    tptz__GetNodes,	///< Input parameter
    _tptz__GetNodesResponse            &tptz__GetNodesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetNode                                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GetNode" of service binding "PTZBinding".
Get a specific PTZ Node identified by a reference
        token or a name.
	  

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/GetNode"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetNode"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetNodeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetNode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__GetNode*                     tptz__GetNode,
    // output parameters:
    _tptz__GetNodeResponse             &tptz__GetNodeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetNode(
    struct soap *soap,
    // input parameters:
    _tptz__GetNode*                     tptz__GetNode,
    // output parameters:
    _tptz__GetNodeResponse             &tptz__GetNodeResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h generated with soapcpp2):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h generated with soapcpp2):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	GetNode SOAP
//gsoap tptz service method-style:	GetNode document
//gsoap tptz service method-encoding:	GetNode literal
//gsoap tptz service method-input-action:	GetNode http://www.onvif.org/ver20/ptz/wsdl/GetNode
//gsoap tptz service method-output-action:	GetNode http://www.onvif.org/ver20/ptz/wsdl/GetNodeResponse
int __tptz__GetNode(
    _tptz__GetNode*                     tptz__GetNode,	///< Input parameter
    _tptz__GetNodeResponse             &tptz__GetNodeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__SetConfiguration                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__SetConfiguration" of service binding "PTZBinding".
        Set/update a existing PTZConfiguration on the device.
      

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/SetConfiguration"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/SetConfiguration"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/SetConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__SetConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__SetConfiguration*            tptz__SetConfiguration,
    // output parameters:
    _tptz__SetConfigurationResponse    &tptz__SetConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__SetConfiguration(
    struct soap *soap,
    // input parameters:
    _tptz__SetConfiguration*            tptz__SetConfiguration,
    // output parameters:
    _tptz__SetConfigurationResponse    &tptz__SetConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h generated with soapcpp2):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h generated with soapcpp2):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	SetConfiguration SOAP
//gsoap tptz service method-style:	SetConfiguration document
//gsoap tptz service method-encoding:	SetConfiguration literal
//gsoap tptz service method-input-action:	SetConfiguration http://www.onvif.org/ver20/ptz/wsdl/SetConfiguration
//gsoap tptz service method-output-action:	SetConfiguration http://www.onvif.org/ver20/ptz/wsdl/SetConfigurationResponse
int __tptz__SetConfiguration(
    _tptz__SetConfiguration*            tptz__SetConfiguration,	///< Input parameter
    _tptz__SetConfigurationResponse    &tptz__SetConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetConfigurationOptions                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GetConfigurationOptions" of service binding "PTZBinding".
				List supported coordinate systems including their
range limitations. Therefore, the options
				MAY differ depending on whether the PTZ Configuration
is assigned to a Profile containing a
				Video Source Configuration. In that case, the options
may additionally contain coordinate
				systems referring to the image coordinate system
described by the Video Source
				Configuration. If the PTZ Node supports continuous
movements, it shall return a Timeout Range within
				which Timeouts are accepted by the PTZ Node.				
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/GetConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__GetConfigurationOptions*     tptz__GetConfigurationOptions,
    // output parameters:
    _tptz__GetConfigurationOptionsResponse&tptz__GetConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetConfigurationOptions(
    struct soap *soap,
    // input parameters:
    _tptz__GetConfigurationOptions*     tptz__GetConfigurationOptions,
    // output parameters:
    _tptz__GetConfigurationOptionsResponse&tptz__GetConfigurationOptionsResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h generated with soapcpp2):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h generated with soapcpp2):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	GetConfigurationOptions SOAP
//gsoap tptz service method-style:	GetConfigurationOptions document
//gsoap tptz service method-encoding:	GetConfigurationOptions literal
//gsoap tptz service method-input-action:	GetConfigurationOptions http://www.onvif.org/ver20/ptz/wsdl/GetConfigurationOptions
//gsoap tptz service method-output-action:	GetConfigurationOptions http://www.onvif.org/ver20/ptz/wsdl/GetConfigurationOptionsResponse
int __tptz__GetConfigurationOptions(
    _tptz__GetConfigurationOptions*     tptz__GetConfigurationOptions,	///< Input parameter
    _tptz__GetConfigurationOptionsResponse&tptz__GetConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GotoHomePosition                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GotoHomePosition" of service binding "PTZBinding".
        Operation to move the PTZ device to it's "home" position. The operation
is supported if the HomeSupported element in the PTZNode is true.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/GotoHomePosition"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GotoHomePosition"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GotoHomePositionResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GotoHomePosition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__GotoHomePosition*            tptz__GotoHomePosition,
    // output parameters:
    _tptz__GotoHomePositionResponse    &tptz__GotoHomePositionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GotoHomePosition(
    struct soap *soap,
    // input parameters:
    _tptz__GotoHomePosition*            tptz__GotoHomePosition,
    // output parameters:
    _tptz__GotoHomePositionResponse    &tptz__GotoHomePositionResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h generated with soapcpp2):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h generated with soapcpp2):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	GotoHomePosition SOAP
//gsoap tptz service method-style:	GotoHomePosition document
//gsoap tptz service method-encoding:	GotoHomePosition literal
//gsoap tptz service method-input-action:	GotoHomePosition http://www.onvif.org/ver20/ptz/wsdl/GotoHomePosition
//gsoap tptz service method-output-action:	GotoHomePosition http://www.onvif.org/ver20/ptz/wsdl/GotoHomePositionResponse
int __tptz__GotoHomePosition(
    _tptz__GotoHomePosition*            tptz__GotoHomePosition,	///< Input parameter
    _tptz__GotoHomePositionResponse    &tptz__GotoHomePositionResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__SetHomePosition                                                  *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__SetHomePosition" of service binding "PTZBinding".
Operation to save current position as the home position.
				The SetHomePosition command returns with a failure
if the home position is fixed and
				cannot be overwritten. If the SetHomePosition is
successful, it is possible to recall the
				Home Position with the GotoHomePosition command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/SetHomePosition"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/SetHomePosition"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/SetHomePositionResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__SetHomePosition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__SetHomePosition*             tptz__SetHomePosition,
    // output parameters:
    _tptz__SetHomePositionResponse     &tptz__SetHomePositionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__SetHomePosition(
    struct soap *soap,
    // input parameters:
    _tptz__SetHomePosition*             tptz__SetHomePosition,
    // output parameters:
    _tptz__SetHomePositionResponse     &tptz__SetHomePositionResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h generated with soapcpp2):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h generated with soapcpp2):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	SetHomePosition SOAP
//gsoap tptz service method-style:	SetHomePosition document
//gsoap tptz service method-encoding:	SetHomePosition literal
//gsoap tptz service method-input-action:	SetHomePosition http://www.onvif.org/ver20/ptz/wsdl/SetHomePosition
//gsoap tptz service method-output-action:	SetHomePosition http://www.onvif.org/ver20/ptz/wsdl/SetHomePositionResponse
int __tptz__SetHomePosition(
    _tptz__SetHomePosition*             tptz__SetHomePosition,	///< Input parameter
    _tptz__SetHomePositionResponse     &tptz__SetHomePositionResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__ContinuousMove                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__ContinuousMove" of service binding "PTZBinding".
Operation for continuous Pan/Tilt and Zoom movements. The operation is supported
if the PTZNode supports at least one continuous Pan/Tilt or Zoom space. If the
space argument is omitted, the default space set by the PTZConfiguration will be
used.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/ContinuousMove"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/ContinuousMove"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/ContinuousMoveResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__ContinuousMove(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__ContinuousMove*              tptz__ContinuousMove,
    // output parameters:
    _tptz__ContinuousMoveResponse      &tptz__ContinuousMoveResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__ContinuousMove(
    struct soap *soap,
    // input parameters:
    _tptz__ContinuousMove*              tptz__ContinuousMove,
    // output parameters:
    _tptz__ContinuousMoveResponse      &tptz__ContinuousMoveResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h generated with soapcpp2):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h generated with soapcpp2):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	ContinuousMove SOAP
//gsoap tptz service method-style:	ContinuousMove document
//gsoap tptz service method-encoding:	ContinuousMove literal
//gsoap tptz service method-input-action:	ContinuousMove http://www.onvif.org/ver20/ptz/wsdl/ContinuousMove
//gsoap tptz service method-output-action:	ContinuousMove http://www.onvif.org/ver20/ptz/wsdl/ContinuousMoveResponse
int __tptz__ContinuousMove(
    _tptz__ContinuousMove*              tptz__ContinuousMove,	///< Input parameter
    _tptz__ContinuousMoveResponse      &tptz__ContinuousMoveResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__RelativeMove                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__RelativeMove" of service binding "PTZBinding".
Operation for Relative Pan/Tilt and Zoom Move. The operation is supported if the
PTZNode supports at least one relative Pan/Tilt or Zoom space.<br/> 
				The speed argument is optional. If an x/y speed
value is given it is up to the device to either use 
				the x value as absolute resoluting speed vector
or to map x and y to the component speed. 
				If the speed argument is omitted, the default speed
set by the PTZConfiguration will be used.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/RelativeMove"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/RelativeMove"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/RelativeMoveResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__RelativeMove(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__RelativeMove*                tptz__RelativeMove,
    // output parameters:
    _tptz__RelativeMoveResponse        &tptz__RelativeMoveResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__RelativeMove(
    struct soap *soap,
    // input parameters:
    _tptz__RelativeMove*                tptz__RelativeMove,
    // output parameters:
    _tptz__RelativeMoveResponse        &tptz__RelativeMoveResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h generated with soapcpp2):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h generated with soapcpp2):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	RelativeMove SOAP
//gsoap tptz service method-style:	RelativeMove document
//gsoap tptz service method-encoding:	RelativeMove literal
//gsoap tptz service method-input-action:	RelativeMove http://www.onvif.org/ver20/ptz/wsdl/RelativeMove
//gsoap tptz service method-output-action:	RelativeMove http://www.onvif.org/ver20/ptz/wsdl/RelativeMoveResponse
int __tptz__RelativeMove(
    _tptz__RelativeMove*                tptz__RelativeMove,	///< Input parameter
    _tptz__RelativeMoveResponse        &tptz__RelativeMoveResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__SendAuxiliaryCommand                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__SendAuxiliaryCommand" of service binding "PTZBinding".
        Operation to send auxiliary commands to the PTZ device
        mapped by the PTZNode in the selected profile. The
        operation is supported
        if the AuxiliarySupported element of the PTZNode is true
      

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/SendAuxiliaryCommand"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/SendAuxiliaryCommand"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/SendAuxiliaryCommandResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__SendAuxiliaryCommand(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__SendAuxiliaryCommand*        tptz__SendAuxiliaryCommand,
    // output parameters:
    _tptz__SendAuxiliaryCommandResponse&tptz__SendAuxiliaryCommandResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__SendAuxiliaryCommand(
    struct soap *soap,
    // input parameters:
    _tptz__SendAuxiliaryCommand*        tptz__SendAuxiliaryCommand,
    // output parameters:
    _tptz__SendAuxiliaryCommandResponse&tptz__SendAuxiliaryCommandResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h generated with soapcpp2):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h generated with soapcpp2):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	SendAuxiliaryCommand SOAP
//gsoap tptz service method-style:	SendAuxiliaryCommand document
//gsoap tptz service method-encoding:	SendAuxiliaryCommand literal
//gsoap tptz service method-input-action:	SendAuxiliaryCommand http://www.onvif.org/ver20/ptz/wsdl/SendAuxiliaryCommand
//gsoap tptz service method-output-action:	SendAuxiliaryCommand http://www.onvif.org/ver20/ptz/wsdl/SendAuxiliaryCommandResponse
int __tptz__SendAuxiliaryCommand(
    _tptz__SendAuxiliaryCommand*        tptz__SendAuxiliaryCommand,	///< Input parameter
    _tptz__SendAuxiliaryCommandResponse&tptz__SendAuxiliaryCommandResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__AbsoluteMove                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__AbsoluteMove" of service binding "PTZBinding".
Operation to move pan,tilt or zoom to a absolute destination. <br/>
				The speed argument is optional. If an x/y speed
value is given it is up to the device to either use 
				the x value as absolute resoluting speed vector
or to map x and y to the component speed. 
				If the speed argument is omitted, the default speed
set by the PTZConfiguration will be used.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/AbsoluteMove"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/AbsoluteMove"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/AbsoluteMoveResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__AbsoluteMove(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__AbsoluteMove*                tptz__AbsoluteMove,
    // output parameters:
    _tptz__AbsoluteMoveResponse        &tptz__AbsoluteMoveResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__AbsoluteMove(
    struct soap *soap,
    // input parameters:
    _tptz__AbsoluteMove*                tptz__AbsoluteMove,
    // output parameters:
    _tptz__AbsoluteMoveResponse        &tptz__AbsoluteMoveResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h generated with soapcpp2):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h generated with soapcpp2):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	AbsoluteMove SOAP
//gsoap tptz service method-style:	AbsoluteMove document
//gsoap tptz service method-encoding:	AbsoluteMove literal
//gsoap tptz service method-input-action:	AbsoluteMove http://www.onvif.org/ver20/ptz/wsdl/AbsoluteMove
//gsoap tptz service method-output-action:	AbsoluteMove http://www.onvif.org/ver20/ptz/wsdl/AbsoluteMoveResponse
int __tptz__AbsoluteMove(
    _tptz__AbsoluteMove*                tptz__AbsoluteMove,	///< Input parameter
    _tptz__AbsoluteMoveResponse        &tptz__AbsoluteMoveResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GeoMove                                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GeoMove" of service binding "PTZBinding".
Operation to move pan,tilt or zoom to point to a destination based on the geolocation
of the target. <br/>
				The speed argument is optional. If an x/y speed
value is given it is up to the device to either use 
				the x value as absolute resoluting speed vector
or to map x and y to the component speed. 
				If the speed argument is omitted, the default speed
set by the PTZConfiguration will be used.
				The area height and area dwidth parameters are optional,
they can be used independently and may be used
				by the device to automatically determine the best
zoom level to show the target.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/GeoMove"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GeoMove"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GeoMoveResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GeoMove(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__GeoMove*                     tptz__GeoMove,
    // output parameters:
    _tptz__GeoMoveResponse             &tptz__GeoMoveResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GeoMove(
    struct soap *soap,
    // input parameters:
    _tptz__GeoMove*                     tptz__GeoMove,
    // output parameters:
    _tptz__GeoMoveResponse             &tptz__GeoMoveResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h generated with soapcpp2):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h generated with soapcpp2):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	GeoMove SOAP
//gsoap tptz service method-style:	GeoMove document
//gsoap tptz service method-encoding:	GeoMove literal
//gsoap tptz service method-input-action:	GeoMove http://www.onvif.org/ver20/ptz/wsdl/GeoMove
//gsoap tptz service method-output-action:	GeoMove http://www.onvif.org/ver20/ptz/wsdl/GeoMoveResponse
int __tptz__GeoMove(
    _tptz__GeoMove*                     tptz__GeoMove,	///< Input parameter
    _tptz__GeoMoveResponse             &tptz__GeoMoveResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__Stop                                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__Stop" of service binding "PTZBinding".
Operation to stop ongoing pan, tilt and zoom movements of absolute relative and
continuous type.
If no stop argument for pan, tilt or zoom is set, the device will stop all ongoing
pan, tilt and zoom movements.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/Stop"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/Stop"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/StopResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__Stop(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__Stop*                        tptz__Stop,
    // output parameters:
    _tptz__StopResponse                &tptz__StopResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__Stop(
    struct soap *soap,
    // input parameters:
    _tptz__Stop*                        tptz__Stop,
    // output parameters:
    _tptz__StopResponse                &tptz__StopResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h generated with soapcpp2):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h generated with soapcpp2):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	Stop SOAP
//gsoap tptz service method-style:	Stop document
//gsoap tptz service method-encoding:	Stop literal
//gsoap tptz service method-input-action:	Stop http://www.onvif.org/ver20/ptz/wsdl/Stop
//gsoap tptz service method-output-action:	Stop http://www.onvif.org/ver20/ptz/wsdl/StopResponse
int __tptz__Stop(
    _tptz__Stop*                        tptz__Stop,	///< Input parameter
    _tptz__StopResponse                &tptz__StopResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetPresetTours                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GetPresetTours" of service binding "PTZBinding".
Operation to request PTZ preset tours in the selected media profiles.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/GetPresetTours"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetPresetTours"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetPresetToursResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetPresetTours(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__GetPresetTours*              tptz__GetPresetTours,
    // output parameters:
    _tptz__GetPresetToursResponse      &tptz__GetPresetToursResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetPresetTours(
    struct soap *soap,
    // input parameters:
    _tptz__GetPresetTours*              tptz__GetPresetTours,
    // output parameters:
    _tptz__GetPresetToursResponse      &tptz__GetPresetToursResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h generated with soapcpp2):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h generated with soapcpp2):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	GetPresetTours SOAP
//gsoap tptz service method-style:	GetPresetTours document
//gsoap tptz service method-encoding:	GetPresetTours literal
//gsoap tptz service method-input-action:	GetPresetTours http://www.onvif.org/ver20/ptz/wsdl/GetPresetTours
//gsoap tptz service method-output-action:	GetPresetTours http://www.onvif.org/ver20/ptz/wsdl/GetPresetToursResponse
int __tptz__GetPresetTours(
    _tptz__GetPresetTours*              tptz__GetPresetTours,	///< Input parameter
    _tptz__GetPresetToursResponse      &tptz__GetPresetToursResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetPresetTour                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GetPresetTour" of service binding "PTZBinding".
Operation to request a specific PTZ preset tour in the selected media profile.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/GetPresetTour"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetPresetTour"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetPresetTourResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetPresetTour(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__GetPresetTour*               tptz__GetPresetTour,
    // output parameters:
    _tptz__GetPresetTourResponse       &tptz__GetPresetTourResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetPresetTour(
    struct soap *soap,
    // input parameters:
    _tptz__GetPresetTour*               tptz__GetPresetTour,
    // output parameters:
    _tptz__GetPresetTourResponse       &tptz__GetPresetTourResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h generated with soapcpp2):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h generated with soapcpp2):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	GetPresetTour SOAP
//gsoap tptz service method-style:	GetPresetTour document
//gsoap tptz service method-encoding:	GetPresetTour literal
//gsoap tptz service method-input-action:	GetPresetTour http://www.onvif.org/ver20/ptz/wsdl/GetPresetTour
//gsoap tptz service method-output-action:	GetPresetTour http://www.onvif.org/ver20/ptz/wsdl/GetPresetTourResponse
int __tptz__GetPresetTour(
    _tptz__GetPresetTour*               tptz__GetPresetTour,	///< Input parameter
    _tptz__GetPresetTourResponse       &tptz__GetPresetTourResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetPresetTourOptions                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GetPresetTourOptions" of service binding "PTZBinding".
Operation to request available options to configure PTZ preset tour.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/GetPresetTourOptions"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetPresetTourOptions"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetPresetTourOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetPresetTourOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__GetPresetTourOptions*        tptz__GetPresetTourOptions,
    // output parameters:
    _tptz__GetPresetTourOptionsResponse&tptz__GetPresetTourOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetPresetTourOptions(
    struct soap *soap,
    // input parameters:
    _tptz__GetPresetTourOptions*        tptz__GetPresetTourOptions,
    // output parameters:
    _tptz__GetPresetTourOptionsResponse&tptz__GetPresetTourOptionsResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h generated with soapcpp2):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h generated with soapcpp2):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	GetPresetTourOptions SOAP
//gsoap tptz service method-style:	GetPresetTourOptions document
//gsoap tptz service method-encoding:	GetPresetTourOptions literal
//gsoap tptz service method-input-action:	GetPresetTourOptions http://www.onvif.org/ver20/ptz/wsdl/GetPresetTourOptions
//gsoap tptz service method-output-action:	GetPresetTourOptions http://www.onvif.org/ver20/ptz/wsdl/GetPresetTourOptionsResponse
int __tptz__GetPresetTourOptions(
    _tptz__GetPresetTourOptions*        tptz__GetPresetTourOptions,	///< Input parameter
    _tptz__GetPresetTourOptionsResponse&tptz__GetPresetTourOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__CreatePresetTour                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__CreatePresetTour" of service binding "PTZBinding".
Operation to create a preset tour for the selected media profile.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/CreatePresetTour"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/CreatePresetTour"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/CreatePresetTourResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__CreatePresetTour(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__CreatePresetTour*            tptz__CreatePresetTour,
    // output parameters:
    _tptz__CreatePresetTourResponse    &tptz__CreatePresetTourResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__CreatePresetTour(
    struct soap *soap,
    // input parameters:
    _tptz__CreatePresetTour*            tptz__CreatePresetTour,
    // output parameters:
    _tptz__CreatePresetTourResponse    &tptz__CreatePresetTourResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h generated with soapcpp2):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h generated with soapcpp2):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	CreatePresetTour SOAP
//gsoap tptz service method-style:	CreatePresetTour document
//gsoap tptz service method-encoding:	CreatePresetTour literal
//gsoap tptz service method-input-action:	CreatePresetTour http://www.onvif.org/ver20/ptz/wsdl/CreatePresetTour
//gsoap tptz service method-output-action:	CreatePresetTour http://www.onvif.org/ver20/ptz/wsdl/CreatePresetTourResponse
int __tptz__CreatePresetTour(
    _tptz__CreatePresetTour*            tptz__CreatePresetTour,	///< Input parameter
    _tptz__CreatePresetTourResponse    &tptz__CreatePresetTourResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__ModifyPresetTour                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__ModifyPresetTour" of service binding "PTZBinding".
Operation to modify a preset tour for the selected media profile.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/ModifyPresetTour"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/ModifyPresetTour"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/ModifyPresetTourResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__ModifyPresetTour(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__ModifyPresetTour*            tptz__ModifyPresetTour,
    // output parameters:
    _tptz__ModifyPresetTourResponse    &tptz__ModifyPresetTourResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__ModifyPresetTour(
    struct soap *soap,
    // input parameters:
    _tptz__ModifyPresetTour*            tptz__ModifyPresetTour,
    // output parameters:
    _tptz__ModifyPresetTourResponse    &tptz__ModifyPresetTourResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h generated with soapcpp2):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h generated with soapcpp2):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	ModifyPresetTour SOAP
//gsoap tptz service method-style:	ModifyPresetTour document
//gsoap tptz service method-encoding:	ModifyPresetTour literal
//gsoap tptz service method-input-action:	ModifyPresetTour http://www.onvif.org/ver20/ptz/wsdl/ModifyPresetTour
//gsoap tptz service method-output-action:	ModifyPresetTour http://www.onvif.org/ver20/ptz/wsdl/ModifyPresetTourResponse
int __tptz__ModifyPresetTour(
    _tptz__ModifyPresetTour*            tptz__ModifyPresetTour,	///< Input parameter
    _tptz__ModifyPresetTourResponse    &tptz__ModifyPresetTourResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__OperatePresetTour                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__OperatePresetTour" of service binding "PTZBinding".
Operation to perform specific operation on the preset tour in selected media profile.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/OperatePresetTour"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/OperatePresetTour"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/OperatePresetTourResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__OperatePresetTour(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__OperatePresetTour*           tptz__OperatePresetTour,
    // output parameters:
    _tptz__OperatePresetTourResponse   &tptz__OperatePresetTourResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__OperatePresetTour(
    struct soap *soap,
    // input parameters:
    _tptz__OperatePresetTour*           tptz__OperatePresetTour,
    // output parameters:
    _tptz__OperatePresetTourResponse   &tptz__OperatePresetTourResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h generated with soapcpp2):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h generated with soapcpp2):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	OperatePresetTour SOAP
//gsoap tptz service method-style:	OperatePresetTour document
//gsoap tptz service method-encoding:	OperatePresetTour literal
//gsoap tptz service method-input-action:	OperatePresetTour http://www.onvif.org/ver20/ptz/wsdl/OperatePresetTour
//gsoap tptz service method-output-action:	OperatePresetTour http://www.onvif.org/ver20/ptz/wsdl/OperatePresetTourResponse
int __tptz__OperatePresetTour(
    _tptz__OperatePresetTour*           tptz__OperatePresetTour,	///< Input parameter
    _tptz__OperatePresetTourResponse   &tptz__OperatePresetTourResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__RemovePresetTour                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__RemovePresetTour" of service binding "PTZBinding".
Operation to delete a specific preset tour from the media profile.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/RemovePresetTour"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/RemovePresetTour"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/RemovePresetTourResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__RemovePresetTour(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__RemovePresetTour*            tptz__RemovePresetTour,
    // output parameters:
    _tptz__RemovePresetTourResponse    &tptz__RemovePresetTourResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__RemovePresetTour(
    struct soap *soap,
    // input parameters:
    _tptz__RemovePresetTour*            tptz__RemovePresetTour,
    // output parameters:
    _tptz__RemovePresetTourResponse    &tptz__RemovePresetTourResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h generated with soapcpp2):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h generated with soapcpp2):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	RemovePresetTour SOAP
//gsoap tptz service method-style:	RemovePresetTour document
//gsoap tptz service method-encoding:	RemovePresetTour literal
//gsoap tptz service method-input-action:	RemovePresetTour http://www.onvif.org/ver20/ptz/wsdl/RemovePresetTour
//gsoap tptz service method-output-action:	RemovePresetTour http://www.onvif.org/ver20/ptz/wsdl/RemovePresetTourResponse
int __tptz__RemovePresetTour(
    _tptz__RemovePresetTour*            tptz__RemovePresetTour,	///< Input parameter
    _tptz__RemovePresetTourResponse    &tptz__RemovePresetTourResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetCompatibleConfigurations                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GetCompatibleConfigurations" of service binding "PTZBinding".
Operation to get all available PTZConfigurations that can be added to the referenced
media profile. <br/>
				A device providing more than one PTZConfiguration
or more than one VideoSourceConfiguration or which has any other resource
				interdependency between PTZConfiguration entities
and other resources listable in a media profile should implement this operation.
				PTZConfiguration entities returned by this operation
shall not fail on adding them to the referenced media profile.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/GetCompatibleConfigurations"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetCompatibleConfigurations"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetCompatibleConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetCompatibleConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__GetCompatibleConfigurations* tptz__GetCompatibleConfigurations,
    // output parameters:
    _tptz__GetCompatibleConfigurationsResponse&tptz__GetCompatibleConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetCompatibleConfigurations(
    struct soap *soap,
    // input parameters:
    _tptz__GetCompatibleConfigurations* tptz__GetCompatibleConfigurations,
    // output parameters:
    _tptz__GetCompatibleConfigurationsResponse&tptz__GetCompatibleConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h generated with soapcpp2):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h generated with soapcpp2):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	GetCompatibleConfigurations SOAP
//gsoap tptz service method-style:	GetCompatibleConfigurations document
//gsoap tptz service method-encoding:	GetCompatibleConfigurations literal
//gsoap tptz service method-input-action:	GetCompatibleConfigurations http://www.onvif.org/ver20/ptz/wsdl/GetCompatibleConfigurations
//gsoap tptz service method-output-action:	GetCompatibleConfigurations http://www.onvif.org/ver20/ptz/wsdl/GetCompatibleConfigurationsResponse
int __tptz__GetCompatibleConfigurations(
    _tptz__GetCompatibleConfigurations* tptz__GetCompatibleConfigurations,	///< Input parameter
    _tptz__GetCompatibleConfigurationsResponse&tptz__GetCompatibleConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__MoveAndStartTracking                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__MoveAndStartTracking" of service binding "PTZBinding".
Operation to send an an atomic command to the device: move the camera to a wanted
position and then delegate the PTZ control to the tracking algorithm. <br/>
                    An existing Speed argument overrides DefaultSpeed of the corresponding
PTZ configuration during movement to the requested position. 
                    If spaces are referenced within the Speed argument, they shall
be speed spaces supported by the PTZ node. <br/>
                    If the detection and the tracking are done in the same device,
an ObjectID reference can be passed as an argument, in order to specify which object
should be tracked. <br/>
                    The operation shall fail if the requested absolute position
is not reachable.
            

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/MoveAndStartTracking"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/MoveAndStartTracking"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/MoveAndStartTrackingResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__MoveAndStartTracking(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__MoveAndStartTracking*        tptz__MoveAndStartTracking,
    // output parameters:
    _tptz__MoveAndStartTrackingResponse&tptz__MoveAndStartTrackingResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__MoveAndStartTracking(
    struct soap *soap,
    // input parameters:
    _tptz__MoveAndStartTracking*        tptz__MoveAndStartTracking,
    // output parameters:
    _tptz__MoveAndStartTrackingResponse&tptz__MoveAndStartTrackingResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h generated with soapcpp2):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h generated with soapcpp2):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	MoveAndStartTracking SOAP
//gsoap tptz service method-style:	MoveAndStartTracking document
//gsoap tptz service method-encoding:	MoveAndStartTracking literal
//gsoap tptz service method-input-action:	MoveAndStartTracking http://www.onvif.org/ver20/ptz/wsdl/MoveAndStartTracking
//gsoap tptz service method-output-action:	MoveAndStartTracking http://www.onvif.org/ver20/ptz/wsdl/MoveAndStartTrackingResponse
int __tptz__MoveAndStartTracking(
    _tptz__MoveAndStartTracking*        tptz__MoveAndStartTracking,	///< Input parameter
    _tptz__MoveAndStartTrackingResponse&tptz__MoveAndStartTrackingResponse	///< Output parameter
);

/** @page PTZBinding Binding "PTZBinding"

@section PTZBinding_policy_enablers Policy Enablers of Binding "PTZBinding"

None specified.

*/

/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/** @page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings that are contractually bound by WSDLs and
are auto-generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data
bindings are adopted from XML schemas as part of the WSDL types section or when
running wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

@note The following readers and writers are C/C++ data type (de)serializers
auto-generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the
(de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in
your code to import these data type and function declarations. Only use the
soapcpp2-generated files in your project build. Do not include the wsdl2h-
generated .h file in your code.

@note Data can be read and deserialized from:
  - an int file descriptor, using soap->recvfd = fd
  - a socket, using soap->socket = (int)...
  - a C++ stream (istream, stringstream), using soap->is = (istream*)...
  - a C string, using soap->is = (const char*)...
  - any input, using the soap->frecv() callback

@note Data can be serialized and written to:
  - an int file descriptor, using soap->sendfd = (int)...
  - a socket, using soap->socket = (int)...
  - a C++ stream (ostream, stringstream), using soap->os = (ostream*)...
  - a C string, using soap->os = (const char**)...
  - any output, using the soap->fsend() callback

@note The following options are available for (de)serialization control:
  - soap->encodingStyle = NULL; to remove SOAP 1.1/1.2 encodingStyle
  - soap_set_mode(soap, SOAP_XML_TREE); XML without id-ref (no cycles!)
  - soap_set_mode(soap, SOAP_XML_GRAPH); XML with id-ref (including cycles)
  - soap_set_namespaces(soap, struct Namespace *nsmap); to set xmlns bindings


*/

/**

@section tptz Top-level root elements of schema "http://www.onvif.org/ver20/ptz/wsdl"

  - <tptz:GetServiceCapabilities> @ref _tptz__GetServiceCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetServiceCapabilities(struct soap*, _tptz__GetServiceCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetServiceCapabilities(struct soap*, _tptz__GetServiceCapabilities*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetServiceCapabilities(struct soap*, const char *URL, _tptz__GetServiceCapabilities*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetServiceCapabilities(struct soap*, const char *URL, _tptz__GetServiceCapabilities*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetServiceCapabilities(struct soap*, const char *URL, _tptz__GetServiceCapabilities*);
    soap_POST_recv__tptz__GetServiceCapabilities(struct soap*, _tptz__GetServiceCapabilities*);
    @endcode

  - <tptz:GetServiceCapabilitiesResponse> @ref _tptz__GetServiceCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetServiceCapabilitiesResponse(struct soap*, _tptz__GetServiceCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetServiceCapabilitiesResponse(struct soap*, _tptz__GetServiceCapabilitiesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetServiceCapabilitiesResponse(struct soap*, const char *URL, _tptz__GetServiceCapabilitiesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetServiceCapabilitiesResponse(struct soap*, const char *URL, _tptz__GetServiceCapabilitiesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetServiceCapabilitiesResponse(struct soap*, const char *URL, _tptz__GetServiceCapabilitiesResponse*);
    soap_POST_recv__tptz__GetServiceCapabilitiesResponse(struct soap*, _tptz__GetServiceCapabilitiesResponse*);
    @endcode

  - <tptz:Capabilities> (use wsdl2h option -g to auto-generate type _tptz__Capabilities)

  - <tptz:GetNodes> @ref _tptz__GetNodes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetNodes(struct soap*, _tptz__GetNodes*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetNodes(struct soap*, _tptz__GetNodes*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetNodes(struct soap*, const char *URL, _tptz__GetNodes*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetNodes(struct soap*, const char *URL, _tptz__GetNodes*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetNodes(struct soap*, const char *URL, _tptz__GetNodes*);
    soap_POST_recv__tptz__GetNodes(struct soap*, _tptz__GetNodes*);
    @endcode

  - <tptz:GetNodesResponse> @ref _tptz__GetNodesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetNodesResponse(struct soap*, _tptz__GetNodesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetNodesResponse(struct soap*, _tptz__GetNodesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetNodesResponse(struct soap*, const char *URL, _tptz__GetNodesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetNodesResponse(struct soap*, const char *URL, _tptz__GetNodesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetNodesResponse(struct soap*, const char *URL, _tptz__GetNodesResponse*);
    soap_POST_recv__tptz__GetNodesResponse(struct soap*, _tptz__GetNodesResponse*);
    @endcode

  - <tptz:GetNode> @ref _tptz__GetNode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetNode(struct soap*, _tptz__GetNode*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetNode(struct soap*, _tptz__GetNode*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetNode(struct soap*, const char *URL, _tptz__GetNode*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetNode(struct soap*, const char *URL, _tptz__GetNode*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetNode(struct soap*, const char *URL, _tptz__GetNode*);
    soap_POST_recv__tptz__GetNode(struct soap*, _tptz__GetNode*);
    @endcode

  - <tptz:GetNodeResponse> @ref _tptz__GetNodeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetNodeResponse(struct soap*, _tptz__GetNodeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetNodeResponse(struct soap*, _tptz__GetNodeResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetNodeResponse(struct soap*, const char *URL, _tptz__GetNodeResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetNodeResponse(struct soap*, const char *URL, _tptz__GetNodeResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetNodeResponse(struct soap*, const char *URL, _tptz__GetNodeResponse*);
    soap_POST_recv__tptz__GetNodeResponse(struct soap*, _tptz__GetNodeResponse*);
    @endcode

  - <tptz:GetConfigurations> @ref _tptz__GetConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetConfigurations(struct soap*, _tptz__GetConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetConfigurations(struct soap*, _tptz__GetConfigurations*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetConfigurations(struct soap*, const char *URL, _tptz__GetConfigurations*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetConfigurations(struct soap*, const char *URL, _tptz__GetConfigurations*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetConfigurations(struct soap*, const char *URL, _tptz__GetConfigurations*);
    soap_POST_recv__tptz__GetConfigurations(struct soap*, _tptz__GetConfigurations*);
    @endcode

  - <tptz:GetConfigurationsResponse> @ref _tptz__GetConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetConfigurationsResponse(struct soap*, _tptz__GetConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetConfigurationsResponse(struct soap*, _tptz__GetConfigurationsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetConfigurationsResponse(struct soap*, const char *URL, _tptz__GetConfigurationsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetConfigurationsResponse(struct soap*, const char *URL, _tptz__GetConfigurationsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetConfigurationsResponse(struct soap*, const char *URL, _tptz__GetConfigurationsResponse*);
    soap_POST_recv__tptz__GetConfigurationsResponse(struct soap*, _tptz__GetConfigurationsResponse*);
    @endcode

  - <tptz:GetConfiguration> @ref _tptz__GetConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetConfiguration(struct soap*, _tptz__GetConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetConfiguration(struct soap*, _tptz__GetConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetConfiguration(struct soap*, const char *URL, _tptz__GetConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetConfiguration(struct soap*, const char *URL, _tptz__GetConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetConfiguration(struct soap*, const char *URL, _tptz__GetConfiguration*);
    soap_POST_recv__tptz__GetConfiguration(struct soap*, _tptz__GetConfiguration*);
    @endcode

  - <tptz:GetConfigurationResponse> @ref _tptz__GetConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetConfigurationResponse(struct soap*, _tptz__GetConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetConfigurationResponse(struct soap*, _tptz__GetConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetConfigurationResponse(struct soap*, const char *URL, _tptz__GetConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetConfigurationResponse(struct soap*, const char *URL, _tptz__GetConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetConfigurationResponse(struct soap*, const char *URL, _tptz__GetConfigurationResponse*);
    soap_POST_recv__tptz__GetConfigurationResponse(struct soap*, _tptz__GetConfigurationResponse*);
    @endcode

  - <tptz:SetConfiguration> @ref _tptz__SetConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__SetConfiguration(struct soap*, _tptz__SetConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__SetConfiguration(struct soap*, _tptz__SetConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__SetConfiguration(struct soap*, const char *URL, _tptz__SetConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__SetConfiguration(struct soap*, const char *URL, _tptz__SetConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__SetConfiguration(struct soap*, const char *URL, _tptz__SetConfiguration*);
    soap_POST_recv__tptz__SetConfiguration(struct soap*, _tptz__SetConfiguration*);
    @endcode

  - <tptz:SetConfigurationResponse> @ref _tptz__SetConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__SetConfigurationResponse(struct soap*, _tptz__SetConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__SetConfigurationResponse(struct soap*, _tptz__SetConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__SetConfigurationResponse(struct soap*, const char *URL, _tptz__SetConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__SetConfigurationResponse(struct soap*, const char *URL, _tptz__SetConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__SetConfigurationResponse(struct soap*, const char *URL, _tptz__SetConfigurationResponse*);
    soap_POST_recv__tptz__SetConfigurationResponse(struct soap*, _tptz__SetConfigurationResponse*);
    @endcode

  - <tptz:GetConfigurationOptions> @ref _tptz__GetConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetConfigurationOptions(struct soap*, _tptz__GetConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetConfigurationOptions(struct soap*, _tptz__GetConfigurationOptions*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetConfigurationOptions(struct soap*, const char *URL, _tptz__GetConfigurationOptions*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetConfigurationOptions(struct soap*, const char *URL, _tptz__GetConfigurationOptions*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetConfigurationOptions(struct soap*, const char *URL, _tptz__GetConfigurationOptions*);
    soap_POST_recv__tptz__GetConfigurationOptions(struct soap*, _tptz__GetConfigurationOptions*);
    @endcode

  - <tptz:GetConfigurationOptionsResponse> @ref _tptz__GetConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetConfigurationOptionsResponse(struct soap*, _tptz__GetConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetConfigurationOptionsResponse(struct soap*, _tptz__GetConfigurationOptionsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetConfigurationOptionsResponse(struct soap*, const char *URL, _tptz__GetConfigurationOptionsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetConfigurationOptionsResponse(struct soap*, const char *URL, _tptz__GetConfigurationOptionsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetConfigurationOptionsResponse(struct soap*, const char *URL, _tptz__GetConfigurationOptionsResponse*);
    soap_POST_recv__tptz__GetConfigurationOptionsResponse(struct soap*, _tptz__GetConfigurationOptionsResponse*);
    @endcode

  - <tptz:SendAuxiliaryCommand> @ref _tptz__SendAuxiliaryCommand
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__SendAuxiliaryCommand(struct soap*, _tptz__SendAuxiliaryCommand*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__SendAuxiliaryCommand(struct soap*, _tptz__SendAuxiliaryCommand*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__SendAuxiliaryCommand(struct soap*, const char *URL, _tptz__SendAuxiliaryCommand*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__SendAuxiliaryCommand(struct soap*, const char *URL, _tptz__SendAuxiliaryCommand*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__SendAuxiliaryCommand(struct soap*, const char *URL, _tptz__SendAuxiliaryCommand*);
    soap_POST_recv__tptz__SendAuxiliaryCommand(struct soap*, _tptz__SendAuxiliaryCommand*);
    @endcode

  - <tptz:SendAuxiliaryCommandResponse> @ref _tptz__SendAuxiliaryCommandResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__SendAuxiliaryCommandResponse(struct soap*, _tptz__SendAuxiliaryCommandResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__SendAuxiliaryCommandResponse(struct soap*, _tptz__SendAuxiliaryCommandResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__SendAuxiliaryCommandResponse(struct soap*, const char *URL, _tptz__SendAuxiliaryCommandResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__SendAuxiliaryCommandResponse(struct soap*, const char *URL, _tptz__SendAuxiliaryCommandResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__SendAuxiliaryCommandResponse(struct soap*, const char *URL, _tptz__SendAuxiliaryCommandResponse*);
    soap_POST_recv__tptz__SendAuxiliaryCommandResponse(struct soap*, _tptz__SendAuxiliaryCommandResponse*);
    @endcode

  - <tptz:GetPresets> @ref _tptz__GetPresets
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetPresets(struct soap*, _tptz__GetPresets*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetPresets(struct soap*, _tptz__GetPresets*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetPresets(struct soap*, const char *URL, _tptz__GetPresets*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetPresets(struct soap*, const char *URL, _tptz__GetPresets*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetPresets(struct soap*, const char *URL, _tptz__GetPresets*);
    soap_POST_recv__tptz__GetPresets(struct soap*, _tptz__GetPresets*);
    @endcode

  - <tptz:GetPresetsResponse> @ref _tptz__GetPresetsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetPresetsResponse(struct soap*, _tptz__GetPresetsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetPresetsResponse(struct soap*, _tptz__GetPresetsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetPresetsResponse(struct soap*, const char *URL, _tptz__GetPresetsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetPresetsResponse(struct soap*, const char *URL, _tptz__GetPresetsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetPresetsResponse(struct soap*, const char *URL, _tptz__GetPresetsResponse*);
    soap_POST_recv__tptz__GetPresetsResponse(struct soap*, _tptz__GetPresetsResponse*);
    @endcode

  - <tptz:SetPreset> @ref _tptz__SetPreset
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__SetPreset(struct soap*, _tptz__SetPreset*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__SetPreset(struct soap*, _tptz__SetPreset*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__SetPreset(struct soap*, const char *URL, _tptz__SetPreset*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__SetPreset(struct soap*, const char *URL, _tptz__SetPreset*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__SetPreset(struct soap*, const char *URL, _tptz__SetPreset*);
    soap_POST_recv__tptz__SetPreset(struct soap*, _tptz__SetPreset*);
    @endcode

  - <tptz:SetPresetResponse> @ref _tptz__SetPresetResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__SetPresetResponse(struct soap*, _tptz__SetPresetResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__SetPresetResponse(struct soap*, _tptz__SetPresetResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__SetPresetResponse(struct soap*, const char *URL, _tptz__SetPresetResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__SetPresetResponse(struct soap*, const char *URL, _tptz__SetPresetResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__SetPresetResponse(struct soap*, const char *URL, _tptz__SetPresetResponse*);
    soap_POST_recv__tptz__SetPresetResponse(struct soap*, _tptz__SetPresetResponse*);
    @endcode

  - <tptz:RemovePreset> @ref _tptz__RemovePreset
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__RemovePreset(struct soap*, _tptz__RemovePreset*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__RemovePreset(struct soap*, _tptz__RemovePreset*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__RemovePreset(struct soap*, const char *URL, _tptz__RemovePreset*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__RemovePreset(struct soap*, const char *URL, _tptz__RemovePreset*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__RemovePreset(struct soap*, const char *URL, _tptz__RemovePreset*);
    soap_POST_recv__tptz__RemovePreset(struct soap*, _tptz__RemovePreset*);
    @endcode

  - <tptz:RemovePresetResponse> @ref _tptz__RemovePresetResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__RemovePresetResponse(struct soap*, _tptz__RemovePresetResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__RemovePresetResponse(struct soap*, _tptz__RemovePresetResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__RemovePresetResponse(struct soap*, const char *URL, _tptz__RemovePresetResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__RemovePresetResponse(struct soap*, const char *URL, _tptz__RemovePresetResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__RemovePresetResponse(struct soap*, const char *URL, _tptz__RemovePresetResponse*);
    soap_POST_recv__tptz__RemovePresetResponse(struct soap*, _tptz__RemovePresetResponse*);
    @endcode

  - <tptz:GotoPreset> @ref _tptz__GotoPreset
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GotoPreset(struct soap*, _tptz__GotoPreset*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GotoPreset(struct soap*, _tptz__GotoPreset*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GotoPreset(struct soap*, const char *URL, _tptz__GotoPreset*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GotoPreset(struct soap*, const char *URL, _tptz__GotoPreset*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GotoPreset(struct soap*, const char *URL, _tptz__GotoPreset*);
    soap_POST_recv__tptz__GotoPreset(struct soap*, _tptz__GotoPreset*);
    @endcode

  - <tptz:GotoPresetResponse> @ref _tptz__GotoPresetResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GotoPresetResponse(struct soap*, _tptz__GotoPresetResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GotoPresetResponse(struct soap*, _tptz__GotoPresetResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GotoPresetResponse(struct soap*, const char *URL, _tptz__GotoPresetResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GotoPresetResponse(struct soap*, const char *URL, _tptz__GotoPresetResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GotoPresetResponse(struct soap*, const char *URL, _tptz__GotoPresetResponse*);
    soap_POST_recv__tptz__GotoPresetResponse(struct soap*, _tptz__GotoPresetResponse*);
    @endcode

  - <tptz:GetStatus> @ref _tptz__GetStatus
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetStatus(struct soap*, _tptz__GetStatus*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetStatus(struct soap*, _tptz__GetStatus*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetStatus(struct soap*, const char *URL, _tptz__GetStatus*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetStatus(struct soap*, const char *URL, _tptz__GetStatus*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetStatus(struct soap*, const char *URL, _tptz__GetStatus*);
    soap_POST_recv__tptz__GetStatus(struct soap*, _tptz__GetStatus*);
    @endcode

  - <tptz:GetStatusResponse> @ref _tptz__GetStatusResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetStatusResponse(struct soap*, _tptz__GetStatusResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetStatusResponse(struct soap*, _tptz__GetStatusResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetStatusResponse(struct soap*, const char *URL, _tptz__GetStatusResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetStatusResponse(struct soap*, const char *URL, _tptz__GetStatusResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetStatusResponse(struct soap*, const char *URL, _tptz__GetStatusResponse*);
    soap_POST_recv__tptz__GetStatusResponse(struct soap*, _tptz__GetStatusResponse*);
    @endcode

  - <tptz:GotoHomePosition> @ref _tptz__GotoHomePosition
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GotoHomePosition(struct soap*, _tptz__GotoHomePosition*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GotoHomePosition(struct soap*, _tptz__GotoHomePosition*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GotoHomePosition(struct soap*, const char *URL, _tptz__GotoHomePosition*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GotoHomePosition(struct soap*, const char *URL, _tptz__GotoHomePosition*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GotoHomePosition(struct soap*, const char *URL, _tptz__GotoHomePosition*);
    soap_POST_recv__tptz__GotoHomePosition(struct soap*, _tptz__GotoHomePosition*);
    @endcode

  - <tptz:GotoHomePositionResponse> @ref _tptz__GotoHomePositionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GotoHomePositionResponse(struct soap*, _tptz__GotoHomePositionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GotoHomePositionResponse(struct soap*, _tptz__GotoHomePositionResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GotoHomePositionResponse(struct soap*, const char *URL, _tptz__GotoHomePositionResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GotoHomePositionResponse(struct soap*, const char *URL, _tptz__GotoHomePositionResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GotoHomePositionResponse(struct soap*, const char *URL, _tptz__GotoHomePositionResponse*);
    soap_POST_recv__tptz__GotoHomePositionResponse(struct soap*, _tptz__GotoHomePositionResponse*);
    @endcode

  - <tptz:SetHomePosition> @ref _tptz__SetHomePosition
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__SetHomePosition(struct soap*, _tptz__SetHomePosition*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__SetHomePosition(struct soap*, _tptz__SetHomePosition*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__SetHomePosition(struct soap*, const char *URL, _tptz__SetHomePosition*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__SetHomePosition(struct soap*, const char *URL, _tptz__SetHomePosition*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__SetHomePosition(struct soap*, const char *URL, _tptz__SetHomePosition*);
    soap_POST_recv__tptz__SetHomePosition(struct soap*, _tptz__SetHomePosition*);
    @endcode

  - <tptz:SetHomePositionResponse> @ref _tptz__SetHomePositionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__SetHomePositionResponse(struct soap*, _tptz__SetHomePositionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__SetHomePositionResponse(struct soap*, _tptz__SetHomePositionResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__SetHomePositionResponse(struct soap*, const char *URL, _tptz__SetHomePositionResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__SetHomePositionResponse(struct soap*, const char *URL, _tptz__SetHomePositionResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__SetHomePositionResponse(struct soap*, const char *URL, _tptz__SetHomePositionResponse*);
    soap_POST_recv__tptz__SetHomePositionResponse(struct soap*, _tptz__SetHomePositionResponse*);
    @endcode

  - <tptz:ContinuousMove> @ref _tptz__ContinuousMove
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__ContinuousMove(struct soap*, _tptz__ContinuousMove*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__ContinuousMove(struct soap*, _tptz__ContinuousMove*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__ContinuousMove(struct soap*, const char *URL, _tptz__ContinuousMove*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__ContinuousMove(struct soap*, const char *URL, _tptz__ContinuousMove*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__ContinuousMove(struct soap*, const char *URL, _tptz__ContinuousMove*);
    soap_POST_recv__tptz__ContinuousMove(struct soap*, _tptz__ContinuousMove*);
    @endcode

  - <tptz:ContinuousMoveResponse> @ref _tptz__ContinuousMoveResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__ContinuousMoveResponse(struct soap*, _tptz__ContinuousMoveResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__ContinuousMoveResponse(struct soap*, _tptz__ContinuousMoveResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__ContinuousMoveResponse(struct soap*, const char *URL, _tptz__ContinuousMoveResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__ContinuousMoveResponse(struct soap*, const char *URL, _tptz__ContinuousMoveResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__ContinuousMoveResponse(struct soap*, const char *URL, _tptz__ContinuousMoveResponse*);
    soap_POST_recv__tptz__ContinuousMoveResponse(struct soap*, _tptz__ContinuousMoveResponse*);
    @endcode

  - <tptz:RelativeMove> @ref _tptz__RelativeMove
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__RelativeMove(struct soap*, _tptz__RelativeMove*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__RelativeMove(struct soap*, _tptz__RelativeMove*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__RelativeMove(struct soap*, const char *URL, _tptz__RelativeMove*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__RelativeMove(struct soap*, const char *URL, _tptz__RelativeMove*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__RelativeMove(struct soap*, const char *URL, _tptz__RelativeMove*);
    soap_POST_recv__tptz__RelativeMove(struct soap*, _tptz__RelativeMove*);
    @endcode

  - <tptz:RelativeMoveResponse> @ref _tptz__RelativeMoveResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__RelativeMoveResponse(struct soap*, _tptz__RelativeMoveResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__RelativeMoveResponse(struct soap*, _tptz__RelativeMoveResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__RelativeMoveResponse(struct soap*, const char *URL, _tptz__RelativeMoveResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__RelativeMoveResponse(struct soap*, const char *URL, _tptz__RelativeMoveResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__RelativeMoveResponse(struct soap*, const char *URL, _tptz__RelativeMoveResponse*);
    soap_POST_recv__tptz__RelativeMoveResponse(struct soap*, _tptz__RelativeMoveResponse*);
    @endcode

  - <tptz:AbsoluteMove> @ref _tptz__AbsoluteMove
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__AbsoluteMove(struct soap*, _tptz__AbsoluteMove*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__AbsoluteMove(struct soap*, _tptz__AbsoluteMove*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__AbsoluteMove(struct soap*, const char *URL, _tptz__AbsoluteMove*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__AbsoluteMove(struct soap*, const char *URL, _tptz__AbsoluteMove*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__AbsoluteMove(struct soap*, const char *URL, _tptz__AbsoluteMove*);
    soap_POST_recv__tptz__AbsoluteMove(struct soap*, _tptz__AbsoluteMove*);
    @endcode

  - <tptz:AbsoluteMoveResponse> @ref _tptz__AbsoluteMoveResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__AbsoluteMoveResponse(struct soap*, _tptz__AbsoluteMoveResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__AbsoluteMoveResponse(struct soap*, _tptz__AbsoluteMoveResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__AbsoluteMoveResponse(struct soap*, const char *URL, _tptz__AbsoluteMoveResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__AbsoluteMoveResponse(struct soap*, const char *URL, _tptz__AbsoluteMoveResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__AbsoluteMoveResponse(struct soap*, const char *URL, _tptz__AbsoluteMoveResponse*);
    soap_POST_recv__tptz__AbsoluteMoveResponse(struct soap*, _tptz__AbsoluteMoveResponse*);
    @endcode

  - <tptz:GeoMove> @ref _tptz__GeoMove
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GeoMove(struct soap*, _tptz__GeoMove*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GeoMove(struct soap*, _tptz__GeoMove*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GeoMove(struct soap*, const char *URL, _tptz__GeoMove*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GeoMove(struct soap*, const char *URL, _tptz__GeoMove*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GeoMove(struct soap*, const char *URL, _tptz__GeoMove*);
    soap_POST_recv__tptz__GeoMove(struct soap*, _tptz__GeoMove*);
    @endcode

  - <tptz:GeoMoveResponse> @ref _tptz__GeoMoveResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GeoMoveResponse(struct soap*, _tptz__GeoMoveResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GeoMoveResponse(struct soap*, _tptz__GeoMoveResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GeoMoveResponse(struct soap*, const char *URL, _tptz__GeoMoveResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GeoMoveResponse(struct soap*, const char *URL, _tptz__GeoMoveResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GeoMoveResponse(struct soap*, const char *URL, _tptz__GeoMoveResponse*);
    soap_POST_recv__tptz__GeoMoveResponse(struct soap*, _tptz__GeoMoveResponse*);
    @endcode

  - <tptz:Stop> @ref _tptz__Stop
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__Stop(struct soap*, _tptz__Stop*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__Stop(struct soap*, _tptz__Stop*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__Stop(struct soap*, const char *URL, _tptz__Stop*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__Stop(struct soap*, const char *URL, _tptz__Stop*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__Stop(struct soap*, const char *URL, _tptz__Stop*);
    soap_POST_recv__tptz__Stop(struct soap*, _tptz__Stop*);
    @endcode

  - <tptz:StopResponse> @ref _tptz__StopResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__StopResponse(struct soap*, _tptz__StopResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__StopResponse(struct soap*, _tptz__StopResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__StopResponse(struct soap*, const char *URL, _tptz__StopResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__StopResponse(struct soap*, const char *URL, _tptz__StopResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__StopResponse(struct soap*, const char *URL, _tptz__StopResponse*);
    soap_POST_recv__tptz__StopResponse(struct soap*, _tptz__StopResponse*);
    @endcode

  - <tptz:GetPresetTours> @ref _tptz__GetPresetTours
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetPresetTours(struct soap*, _tptz__GetPresetTours*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetPresetTours(struct soap*, _tptz__GetPresetTours*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetPresetTours(struct soap*, const char *URL, _tptz__GetPresetTours*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetPresetTours(struct soap*, const char *URL, _tptz__GetPresetTours*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetPresetTours(struct soap*, const char *URL, _tptz__GetPresetTours*);
    soap_POST_recv__tptz__GetPresetTours(struct soap*, _tptz__GetPresetTours*);
    @endcode

  - <tptz:GetPresetToursResponse> @ref _tptz__GetPresetToursResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetPresetToursResponse(struct soap*, _tptz__GetPresetToursResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetPresetToursResponse(struct soap*, _tptz__GetPresetToursResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetPresetToursResponse(struct soap*, const char *URL, _tptz__GetPresetToursResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetPresetToursResponse(struct soap*, const char *URL, _tptz__GetPresetToursResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetPresetToursResponse(struct soap*, const char *URL, _tptz__GetPresetToursResponse*);
    soap_POST_recv__tptz__GetPresetToursResponse(struct soap*, _tptz__GetPresetToursResponse*);
    @endcode

  - <tptz:GetPresetTour> @ref _tptz__GetPresetTour
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetPresetTour(struct soap*, _tptz__GetPresetTour*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetPresetTour(struct soap*, _tptz__GetPresetTour*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetPresetTour(struct soap*, const char *URL, _tptz__GetPresetTour*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetPresetTour(struct soap*, const char *URL, _tptz__GetPresetTour*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetPresetTour(struct soap*, const char *URL, _tptz__GetPresetTour*);
    soap_POST_recv__tptz__GetPresetTour(struct soap*, _tptz__GetPresetTour*);
    @endcode

  - <tptz:GetPresetTourResponse> @ref _tptz__GetPresetTourResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetPresetTourResponse(struct soap*, _tptz__GetPresetTourResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetPresetTourResponse(struct soap*, _tptz__GetPresetTourResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetPresetTourResponse(struct soap*, const char *URL, _tptz__GetPresetTourResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetPresetTourResponse(struct soap*, const char *URL, _tptz__GetPresetTourResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetPresetTourResponse(struct soap*, const char *URL, _tptz__GetPresetTourResponse*);
    soap_POST_recv__tptz__GetPresetTourResponse(struct soap*, _tptz__GetPresetTourResponse*);
    @endcode

  - <tptz:GetPresetTourOptions> @ref _tptz__GetPresetTourOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetPresetTourOptions(struct soap*, _tptz__GetPresetTourOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetPresetTourOptions(struct soap*, _tptz__GetPresetTourOptions*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetPresetTourOptions(struct soap*, const char *URL, _tptz__GetPresetTourOptions*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetPresetTourOptions(struct soap*, const char *URL, _tptz__GetPresetTourOptions*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetPresetTourOptions(struct soap*, const char *URL, _tptz__GetPresetTourOptions*);
    soap_POST_recv__tptz__GetPresetTourOptions(struct soap*, _tptz__GetPresetTourOptions*);
    @endcode

  - <tptz:GetPresetTourOptionsResponse> @ref _tptz__GetPresetTourOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetPresetTourOptionsResponse(struct soap*, _tptz__GetPresetTourOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetPresetTourOptionsResponse(struct soap*, _tptz__GetPresetTourOptionsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetPresetTourOptionsResponse(struct soap*, const char *URL, _tptz__GetPresetTourOptionsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetPresetTourOptionsResponse(struct soap*, const char *URL, _tptz__GetPresetTourOptionsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetPresetTourOptionsResponse(struct soap*, const char *URL, _tptz__GetPresetTourOptionsResponse*);
    soap_POST_recv__tptz__GetPresetTourOptionsResponse(struct soap*, _tptz__GetPresetTourOptionsResponse*);
    @endcode

  - <tptz:CreatePresetTour> @ref _tptz__CreatePresetTour
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__CreatePresetTour(struct soap*, _tptz__CreatePresetTour*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__CreatePresetTour(struct soap*, _tptz__CreatePresetTour*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__CreatePresetTour(struct soap*, const char *URL, _tptz__CreatePresetTour*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__CreatePresetTour(struct soap*, const char *URL, _tptz__CreatePresetTour*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__CreatePresetTour(struct soap*, const char *URL, _tptz__CreatePresetTour*);
    soap_POST_recv__tptz__CreatePresetTour(struct soap*, _tptz__CreatePresetTour*);
    @endcode

  - <tptz:CreatePresetTourResponse> @ref _tptz__CreatePresetTourResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__CreatePresetTourResponse(struct soap*, _tptz__CreatePresetTourResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__CreatePresetTourResponse(struct soap*, _tptz__CreatePresetTourResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__CreatePresetTourResponse(struct soap*, const char *URL, _tptz__CreatePresetTourResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__CreatePresetTourResponse(struct soap*, const char *URL, _tptz__CreatePresetTourResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__CreatePresetTourResponse(struct soap*, const char *URL, _tptz__CreatePresetTourResponse*);
    soap_POST_recv__tptz__CreatePresetTourResponse(struct soap*, _tptz__CreatePresetTourResponse*);
    @endcode

  - <tptz:ModifyPresetTour> @ref _tptz__ModifyPresetTour
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__ModifyPresetTour(struct soap*, _tptz__ModifyPresetTour*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__ModifyPresetTour(struct soap*, _tptz__ModifyPresetTour*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__ModifyPresetTour(struct soap*, const char *URL, _tptz__ModifyPresetTour*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__ModifyPresetTour(struct soap*, const char *URL, _tptz__ModifyPresetTour*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__ModifyPresetTour(struct soap*, const char *URL, _tptz__ModifyPresetTour*);
    soap_POST_recv__tptz__ModifyPresetTour(struct soap*, _tptz__ModifyPresetTour*);
    @endcode

  - <tptz:ModifyPresetTourResponse> @ref _tptz__ModifyPresetTourResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__ModifyPresetTourResponse(struct soap*, _tptz__ModifyPresetTourResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__ModifyPresetTourResponse(struct soap*, _tptz__ModifyPresetTourResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__ModifyPresetTourResponse(struct soap*, const char *URL, _tptz__ModifyPresetTourResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__ModifyPresetTourResponse(struct soap*, const char *URL, _tptz__ModifyPresetTourResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__ModifyPresetTourResponse(struct soap*, const char *URL, _tptz__ModifyPresetTourResponse*);
    soap_POST_recv__tptz__ModifyPresetTourResponse(struct soap*, _tptz__ModifyPresetTourResponse*);
    @endcode

  - <tptz:OperatePresetTour> @ref _tptz__OperatePresetTour
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__OperatePresetTour(struct soap*, _tptz__OperatePresetTour*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__OperatePresetTour(struct soap*, _tptz__OperatePresetTour*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__OperatePresetTour(struct soap*, const char *URL, _tptz__OperatePresetTour*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__OperatePresetTour(struct soap*, const char *URL, _tptz__OperatePresetTour*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__OperatePresetTour(struct soap*, const char *URL, _tptz__OperatePresetTour*);
    soap_POST_recv__tptz__OperatePresetTour(struct soap*, _tptz__OperatePresetTour*);
    @endcode

  - <tptz:OperatePresetTourResponse> @ref _tptz__OperatePresetTourResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__OperatePresetTourResponse(struct soap*, _tptz__OperatePresetTourResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__OperatePresetTourResponse(struct soap*, _tptz__OperatePresetTourResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__OperatePresetTourResponse(struct soap*, const char *URL, _tptz__OperatePresetTourResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__OperatePresetTourResponse(struct soap*, const char *URL, _tptz__OperatePresetTourResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__OperatePresetTourResponse(struct soap*, const char *URL, _tptz__OperatePresetTourResponse*);
    soap_POST_recv__tptz__OperatePresetTourResponse(struct soap*, _tptz__OperatePresetTourResponse*);
    @endcode

  - <tptz:RemovePresetTour> @ref _tptz__RemovePresetTour
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__RemovePresetTour(struct soap*, _tptz__RemovePresetTour*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__RemovePresetTour(struct soap*, _tptz__RemovePresetTour*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__RemovePresetTour(struct soap*, const char *URL, _tptz__RemovePresetTour*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__RemovePresetTour(struct soap*, const char *URL, _tptz__RemovePresetTour*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__RemovePresetTour(struct soap*, const char *URL, _tptz__RemovePresetTour*);
    soap_POST_recv__tptz__RemovePresetTour(struct soap*, _tptz__RemovePresetTour*);
    @endcode

  - <tptz:RemovePresetTourResponse> @ref _tptz__RemovePresetTourResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__RemovePresetTourResponse(struct soap*, _tptz__RemovePresetTourResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__RemovePresetTourResponse(struct soap*, _tptz__RemovePresetTourResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__RemovePresetTourResponse(struct soap*, const char *URL, _tptz__RemovePresetTourResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__RemovePresetTourResponse(struct soap*, const char *URL, _tptz__RemovePresetTourResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__RemovePresetTourResponse(struct soap*, const char *URL, _tptz__RemovePresetTourResponse*);
    soap_POST_recv__tptz__RemovePresetTourResponse(struct soap*, _tptz__RemovePresetTourResponse*);
    @endcode

  - <tptz:GetCompatibleConfigurations> @ref _tptz__GetCompatibleConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetCompatibleConfigurations(struct soap*, _tptz__GetCompatibleConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetCompatibleConfigurations(struct soap*, _tptz__GetCompatibleConfigurations*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetCompatibleConfigurations(struct soap*, const char *URL, _tptz__GetCompatibleConfigurations*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetCompatibleConfigurations(struct soap*, const char *URL, _tptz__GetCompatibleConfigurations*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetCompatibleConfigurations(struct soap*, const char *URL, _tptz__GetCompatibleConfigurations*);
    soap_POST_recv__tptz__GetCompatibleConfigurations(struct soap*, _tptz__GetCompatibleConfigurations*);
    @endcode

  - <tptz:GetCompatibleConfigurationsResponse> @ref _tptz__GetCompatibleConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetCompatibleConfigurationsResponse(struct soap*, _tptz__GetCompatibleConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetCompatibleConfigurationsResponse(struct soap*, _tptz__GetCompatibleConfigurationsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetCompatibleConfigurationsResponse(struct soap*, const char *URL, _tptz__GetCompatibleConfigurationsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetCompatibleConfigurationsResponse(struct soap*, const char *URL, _tptz__GetCompatibleConfigurationsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetCompatibleConfigurationsResponse(struct soap*, const char *URL, _tptz__GetCompatibleConfigurationsResponse*);
    soap_POST_recv__tptz__GetCompatibleConfigurationsResponse(struct soap*, _tptz__GetCompatibleConfigurationsResponse*);
    @endcode

  - <tptz:MoveAndStartTracking> @ref _tptz__MoveAndStartTracking
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__MoveAndStartTracking(struct soap*, _tptz__MoveAndStartTracking*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__MoveAndStartTracking(struct soap*, _tptz__MoveAndStartTracking*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__MoveAndStartTracking(struct soap*, const char *URL, _tptz__MoveAndStartTracking*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__MoveAndStartTracking(struct soap*, const char *URL, _tptz__MoveAndStartTracking*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__MoveAndStartTracking(struct soap*, const char *URL, _tptz__MoveAndStartTracking*);
    soap_POST_recv__tptz__MoveAndStartTracking(struct soap*, _tptz__MoveAndStartTracking*);
    @endcode

  - <tptz:MoveAndStartTrackingResponse> @ref _tptz__MoveAndStartTrackingResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__MoveAndStartTrackingResponse(struct soap*, _tptz__MoveAndStartTrackingResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__MoveAndStartTrackingResponse(struct soap*, _tptz__MoveAndStartTrackingResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__MoveAndStartTrackingResponse(struct soap*, const char *URL, _tptz__MoveAndStartTrackingResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__MoveAndStartTrackingResponse(struct soap*, const char *URL, _tptz__MoveAndStartTrackingResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__MoveAndStartTrackingResponse(struct soap*, const char *URL, _tptz__MoveAndStartTrackingResponse*);
    soap_POST_recv__tptz__MoveAndStartTrackingResponse(struct soap*, _tptz__MoveAndStartTrackingResponse*);
    @endcode

*/

/**

@section tt Top-level root elements of schema "http://www.onvif.org/ver10/schema"

  - <tt:StringItems> (use wsdl2h option -g to auto-generate type _tt__StringItems)

  - <tt:StringList> (use wsdl2h option -g to auto-generate type _tt__StringList)

  - <tt:IntRange> (use wsdl2h option -g to auto-generate type _tt__IntRange)

  - <tt:IntList> (use wsdl2h option -g to auto-generate type _tt__IntList)

  - <tt:FloatRange> (use wsdl2h option -g to auto-generate type _tt__FloatRange)

  - <tt:FloatList> (use wsdl2h option -g to auto-generate type _tt__FloatList)

  - <tt:DurationRange> (use wsdl2h option -g to auto-generate type _tt__DurationRange)

  - <tt:IntRectangleRange> (use wsdl2h option -g to auto-generate type _tt__IntRectangleRange)

  - <tt:VideoSourceConfiguration> (use wsdl2h option -g to auto-generate type _tt__VideoSourceConfiguration)

  - <tt:AudioSourceConfiguration> (use wsdl2h option -g to auto-generate type _tt__AudioSourceConfiguration)

  - <tt:VideoEncoderConfiguration> (use wsdl2h option -g to auto-generate type _tt__VideoEncoderConfiguration)

  - <tt:AudioEncoderConfiguration> (use wsdl2h option -g to auto-generate type _tt__AudioEncoderConfiguration)

  - <tt:VideoAnalyticsConfiguration> (use wsdl2h option -g to auto-generate type _tt__VideoAnalyticsConfiguration)

  - <tt:PTZConfiguration> (use wsdl2h option -g to auto-generate type _tt__PTZConfiguration)

  - <tt:MetadataConfiguration> (use wsdl2h option -g to auto-generate type _tt__MetadataConfiguration)

  - <tt:AudioOutputConfiguration> (use wsdl2h option -g to auto-generate type _tt__AudioOutputConfiguration)

  - <tt:AudioDecoderConfiguration> (use wsdl2h option -g to auto-generate type _tt__AudioDecoderConfiguration)

  - <tt:Message> (use wsdl2h option -g to auto-generate type _tt__Message)

  - <tt:Polyline> (use wsdl2h option -g to auto-generate type _tt__Polyline)

  - <tt:PolygonOptions> (use wsdl2h option -g to auto-generate type _tt__PolygonOptions)

  - <tt:Polygon> (use wsdl2h option -g to auto-generate type _tt__Polygon)

*/

/**

@section wsnt Top-level root elements of schema "http://docs.oasis-open.org/wsn/b-2"

  - <wsnt:TopicExpression> (use wsdl2h option -g to auto-generate type _wsnt__TopicExpression)

  - <wsnt:FixedTopicSet> (use wsdl2h option -g to auto-generate type _wsnt__FixedTopicSet)

  - <wsnt:TopicExpressionDialect> (use wsdl2h option -g to auto-generate type _wsnt__TopicExpressionDialect)

  - <wsnt:NotificationProducerRP> (use wsdl2h option -g to auto-generate type _wsnt__NotificationProducerRP)

  - <wsnt:ConsumerReference> (use wsdl2h option -g to auto-generate type _wsnt__ConsumerReference)

  - <wsnt:Filter> (use wsdl2h option -g to auto-generate type _wsnt__Filter)

  - <wsnt:SubscriptionPolicy> (use wsdl2h option -g to auto-generate type _wsnt__SubscriptionPolicy)

  - <wsnt:CreationTime> (use wsdl2h option -g to auto-generate type _wsnt__CreationTime)

  - <wsnt:SubscriptionManagerRP> (use wsdl2h option -g to auto-generate type _wsnt__SubscriptionManagerRP)

  - <wsnt:SubscriptionReference> (use wsdl2h option -g to auto-generate type _wsnt__SubscriptionReference)

  - <wsnt:Topic> (use wsdl2h option -g to auto-generate type _wsnt__Topic)

  - <wsnt:ProducerReference> (use wsdl2h option -g to auto-generate type _wsnt__ProducerReference)

  - <wsnt:NotificationMessage> (use wsdl2h option -g to auto-generate type _wsnt__NotificationMessage)

  - <wsnt:Notify> (use wsdl2h option -g to auto-generate type _wsnt__Notify)

  - <wsnt:CurrentTime> (use wsdl2h option -g to auto-generate type _wsnt__CurrentTime)

  - <wsnt:TerminationTime> (use wsdl2h option -g to auto-generate type _wsnt__TerminationTime)

  - <wsnt:ProducerProperties> (use wsdl2h option -g to auto-generate type _wsnt__ProducerProperties)

  - <wsnt:MessageContent> (use wsdl2h option -g to auto-generate type _wsnt__MessageContent)

  - <wsnt:UseRaw> (use wsdl2h option -g to auto-generate type _wsnt__UseRaw)

  - <wsnt:Subscribe> (use wsdl2h option -g to auto-generate type _wsnt__Subscribe)

  - <wsnt:SubscribeResponse> (use wsdl2h option -g to auto-generate type _wsnt__SubscribeResponse)

  - <wsnt:GetCurrentMessage> (use wsdl2h option -g to auto-generate type _wsnt__GetCurrentMessage)

  - <wsnt:GetCurrentMessageResponse> (use wsdl2h option -g to auto-generate type _wsnt__GetCurrentMessageResponse)

  - <wsnt:SubscribeCreationFailedFault> (use wsdl2h option -g to auto-generate type _wsnt__SubscribeCreationFailedFault)

  - <wsnt:InvalidFilterFault> (use wsdl2h option -g to auto-generate type _wsnt__InvalidFilterFault)

  - <wsnt:TopicExpressionDialectUnknownFault> (use wsdl2h option -g to auto-generate type _wsnt__TopicExpressionDialectUnknownFault)

  - <wsnt:InvalidTopicExpressionFault> (use wsdl2h option -g to auto-generate type _wsnt__InvalidTopicExpressionFault)

  - <wsnt:TopicNotSupportedFault> (use wsdl2h option -g to auto-generate type _wsnt__TopicNotSupportedFault)

  - <wsnt:MultipleTopicsSpecifiedFault> (use wsdl2h option -g to auto-generate type _wsnt__MultipleTopicsSpecifiedFault)

  - <wsnt:InvalidProducerPropertiesExpressionFault> (use wsdl2h option -g to auto-generate type _wsnt__InvalidProducerPropertiesExpressionFault)

  - <wsnt:InvalidMessageContentExpressionFault> (use wsdl2h option -g to auto-generate type _wsnt__InvalidMessageContentExpressionFault)

  - <wsnt:UnrecognizedPolicyRequestFault> (use wsdl2h option -g to auto-generate type _wsnt__UnrecognizedPolicyRequestFault)

  - <wsnt:UnsupportedPolicyRequestFault> (use wsdl2h option -g to auto-generate type _wsnt__UnsupportedPolicyRequestFault)

  - <wsnt:NotifyMessageNotSupportedFault> (use wsdl2h option -g to auto-generate type _wsnt__NotifyMessageNotSupportedFault)

  - <wsnt:UnacceptableInitialTerminationTimeFault> (use wsdl2h option -g to auto-generate type _wsnt__UnacceptableInitialTerminationTimeFault)

  - <wsnt:NoCurrentMessageOnTopicFault> (use wsdl2h option -g to auto-generate type _wsnt__NoCurrentMessageOnTopicFault)

  - <wsnt:GetMessages> (use wsdl2h option -g to auto-generate type _wsnt__GetMessages)

  - <wsnt:GetMessagesResponse> (use wsdl2h option -g to auto-generate type _wsnt__GetMessagesResponse)

  - <wsnt:DestroyPullPoint> (use wsdl2h option -g to auto-generate type _wsnt__DestroyPullPoint)

  - <wsnt:DestroyPullPointResponse> (use wsdl2h option -g to auto-generate type _wsnt__DestroyPullPointResponse)

  - <wsnt:UnableToGetMessagesFault> (use wsdl2h option -g to auto-generate type _wsnt__UnableToGetMessagesFault)

  - <wsnt:UnableToDestroyPullPointFault> (use wsdl2h option -g to auto-generate type _wsnt__UnableToDestroyPullPointFault)

  - <wsnt:CreatePullPoint> (use wsdl2h option -g to auto-generate type _wsnt__CreatePullPoint)

  - <wsnt:CreatePullPointResponse> (use wsdl2h option -g to auto-generate type _wsnt__CreatePullPointResponse)

  - <wsnt:UnableToCreatePullPointFault> (use wsdl2h option -g to auto-generate type _wsnt__UnableToCreatePullPointFault)

  - <wsnt:Renew> (use wsdl2h option -g to auto-generate type _wsnt__Renew)

  - <wsnt:RenewResponse> (use wsdl2h option -g to auto-generate type _wsnt__RenewResponse)

  - <wsnt:UnacceptableTerminationTimeFault> (use wsdl2h option -g to auto-generate type _wsnt__UnacceptableTerminationTimeFault)

  - <wsnt:Unsubscribe> (use wsdl2h option -g to auto-generate type _wsnt__Unsubscribe)

  - <wsnt:UnsubscribeResponse> (use wsdl2h option -g to auto-generate type _wsnt__UnsubscribeResponse)

  - <wsnt:UnableToDestroySubscriptionFault> (use wsdl2h option -g to auto-generate type _wsnt__UnableToDestroySubscriptionFault)

  - <wsnt:PauseSubscription> (use wsdl2h option -g to auto-generate type _wsnt__PauseSubscription)

  - <wsnt:PauseSubscriptionResponse> (use wsdl2h option -g to auto-generate type _wsnt__PauseSubscriptionResponse)

  - <wsnt:ResumeSubscription> (use wsdl2h option -g to auto-generate type _wsnt__ResumeSubscription)

  - <wsnt:ResumeSubscriptionResponse> (use wsdl2h option -g to auto-generate type _wsnt__ResumeSubscriptionResponse)

  - <wsnt:PauseFailedFault> (use wsdl2h option -g to auto-generate type _wsnt__PauseFailedFault)

  - <wsnt:ResumeFailedFault> (use wsdl2h option -g to auto-generate type _wsnt__ResumeFailedFault)

*/

/**

@section wsrfbf Top-level root elements of schema "http://docs.oasis-open.org/wsrf/bf-2"

  - <wsrfbf:BaseFault> (use wsdl2h option -g to auto-generate type _wsrfbf__BaseFault)

*/

/**

@section wstop Top-level root elements of schema "http://docs.oasis-open.org/wsn/t-1"

  - <wstop:TopicNamespace> (use wsdl2h option -g to auto-generate type _wstop__TopicNamespace)

  - <wstop:TopicSet> (use wsdl2h option -g to auto-generate type _wstop__TopicSet)

*/

/* End of onvif.h */
